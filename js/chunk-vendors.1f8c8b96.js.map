{"version":3,"sources":["webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/vue-resize-observer/dist/index.js","webpack:///./node_modules/aos/dist/aos.js"],"names":["targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","isEffect","fn","_isEffect","options","raw","effect","createReactiveEffect","lazy","stop","active","onStop","uid","scheduler","undefined","includes","enableTracking","push","pop","resetTracking","length","id","allowRecurse","deps","i","delete","shouldTrack","trackStack","pauseTracking","last","track","target","type","key","depsMap","get","set","Map","dep","Set","has","add","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","forEach","run","builtInSymbols","Object","getOwnPropertyNames","map","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","res","isRef","shouldUnwrap","value","readonly","reactive","method","Array","prototype","args","arr","toRaw","this","l","apply","createSetter","shallowSet","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","call","has$1","size","proto","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","r","Boolean","__v_isRef","unref","ref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ObjectRefImpl","_object","_key","newVal","toRef","object","ComputedRefImpl","getter","_setter","_dirty","_value","getterOrOptions","setter","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","catch","values","throwInDev","contextVNode","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","logError","console","error","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","then","bind","queueJob","job","queueFlush","flushJobs","invalidateJob","indexOf","splice","queueCb","cb","activeQueue","pendingQueue","index","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","a","b","getId","Infinity","event","rawArgs","props","isModelListener","startsWith","modelArg","slice","modifiersKey","number","trim","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","deopt","__emits","emits","normalized","hasExtends","extendEmits","mixins","extends","isEmitListener","replace","toLowerCase","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","emit","render","renderCache","data","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","keys","some","filterModelListeners","cloneVNode","dirs","concat","transition","createVNode","Comment","filterSingleRoot","children","singleRoot","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","component","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","el","subTree","isSuspense","__isSuspense","normalizeSuspenseChildren","content","fallback","normalizeSuspenseSlot","default","s","singleChild","queueEffectWithSuspense","suspense","pendingBranch","isRenderingCompiledSlot","setCompiledSlotRendering","n","withCtx","renderFnWithContext","openBlock","owner","closeBlock","_c","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","arguments","initProps","rawProps","isStateful","isSSR","InternalObjectKey","setFullProps","updateProps","rawPrevProps","rawCurrentProps","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","Function","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","String","getType","ctor","match","toString","isSameType","expectedTypes","len","injectHook","hook","currentInstance","prepend","hooks","wrappedHook","__weh","isUnmounted","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","cleanup","forceTrigger","_shallow","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","name","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","create","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","remove","isKeepAlive","ssContent","clone","ssFallback","keepComment","ret","keyedFragmentCount","Fragment","__isKeepAlive","RegExp","getName","displayName","matches","pattern","split","test","onActivated","registerKeepAliveHook","onDeactivated","__wdc","current","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","getInnerChild","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","_","updateSlots","needDeletionCheck","deletionComparisonTarget","invokeDirectiveHook","bindings","oldBindings","binding","dir","createAppContext","app","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","warnHandler","components","directives","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","version","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","initFeatureFlags","isAsyncWrapper","__asyncLoader","prodEffectOptions","setRef","rawRef","oldRawRef","parentSuspense","exposed","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","isSVG","getNextHostNode","unmount","dynamicChildren","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","process","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","scopeId","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","beforeEnter","onVnodeMounted","enter","treeOwnerId","__scopeId","start","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","m","hydrateNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","isTeleportDisabled","onVnodeUnmounted","removeFragment","performRemove","end","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","ch1","ch2","c","arrI","isTeleport","__isTeleport","disabled","COMPONENTS","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","registry","blockStack","currentBlock","disableTracking","createBlock","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","__vccOpts","klass","targetAnchor","staticCount","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","text","flag","createCommentVNode","asBlock","slot","slotFlag","toMerge","existing","incoming","provide","parentProvides","inject","treatDefaultAsFactory","isInBeforeCreate","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","from","methodHandler","dataFn","resolveData","defineProperty","enumerable","configurable","createWatcher","callHookFromMixins","base","callHookFromExtends","selfHook","baseHook","chainedMixins","createPathGetter","path","segments","resolveMergedOptions","__merged","mergeOptions","to","strats","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","da","rtg","rtc","compile","setupResult","setupStatefulComponent","setup","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","template","delimiters","_rc","h","propsOrChildren","svgNS","doc","document","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","querySelector","selector","setAttribute","temp","innerHTML","first","firstChild","patchClass","transitionClasses","_vtc","join","className","patchStyle","cssText","setStyle","removeAttribute","importantRE","val","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","cached","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","e","_getNow","Date","now","createEvent","timeStamp","cachedNow","getNow","addEventListener","removeEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","cachedTransition","transitionProperty","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","window","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","hasTransform","delays","d","toMs","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","makeMap","str","expectsLowerCase","list","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","isArray","item","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","hasOwnProperty","bHasKey","looseIndexOf","findIndex","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","extend","assign","hasOwn","isMap","toTypeString","isSet","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","cache","hit","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","invokeArrayFns","fns","arg","def","obj","toNumber","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","global","g","module","exports","factory","isIE","_isIE","navigator","userAgent","lastTime","vendors","x","cancelAnimationFrame","element","currTime","timeToCall","clearTimeout","$requestAnimationFrame","$cancelAnimationFrame","resizeHandler","__currentTarget__","__container__","__resize__handler__","width","offsetWidth","height","offsetHeight","resizeTriggerListener","_resizeTrigger","currentTarget","srcElement","__requestAnimationFrameID__","registereResizeHandler","attachEvent","contentDocument","defaultView","createResizeTrigger","objectStyle","resizeObserverDirective","oldVnode","__resizeTrigger__","onload","appendChild","inserted","position","unbind","detachEvent","vueResizeObserver","Vue","t","loaded","__esModule","f","y","w","k","offset","delay","easing","disable","once","startEvent","throttleDelay","debounceDelay","disableMutationObserver","O","M","S","mobile","phone","tablet","all","atob","isSupported","info","readyState","ready","init","refresh","refreshHard","TypeError","leading","maxWait","trailing","cancel","valueOf","constructor","NaN","dataset","aos","MutationObserver","WebKitMutationObserver","MozMutationObserver","observe","documentElement","childList","subtree","removedNodes","addedNodes","vendor","opera","writable","substr","getAttribute","pageYOffset","innerHeight","anchorPlacement","querySelectorAll","top","offsetLeft","offsetTop","scrollLeft","scrollTop","offsetParent","left"],"mappings":"+dAEA,MAAMA,EAAY,IAAIC,QAChBC,EAAc,GACpB,IAAIC,EACJ,MAAMC,EAAcC,OAA6D,IAC3EC,EAAsBD,OAAqE,IACjG,SAASE,EAASC,GACd,OAAOA,IAAuB,IAAjBA,EAAGC,UAEpB,SAAS,EAAOD,EAAIE,EAAU,QACtBH,EAASC,KACTA,EAAKA,EAAGG,KAEZ,MAAMC,EAASC,EAAqBL,EAAIE,GAIxC,OAHKA,EAAQI,MACTF,IAEGA,EAEX,SAASG,EAAKH,GACNA,EAAOI,SACP,EAAQJ,GACJA,EAAOF,QAAQO,QACfL,EAAOF,QAAQO,SAEnBL,EAAOI,QAAS,GAGxB,IAAIE,EAAM,EACV,SAASL,EAAqBL,EAAIE,GAC9B,MAAME,EAAS,WACX,IAAKA,EAAOI,OACR,OAAON,EAAQS,eAAYC,EAAYZ,IAE3C,IAAKN,EAAYmB,SAAST,GAAS,CAC/B,EAAQA,GACR,IAII,OAHAU,IACApB,EAAYqB,KAAKX,GACjBT,EAAeS,EACRJ,IAEX,QACIN,EAAYsB,MACZC,IACAtB,EAAeD,EAAYA,EAAYwB,OAAS,MAW5D,OAPAd,EAAOe,GAAKT,IACZN,EAAOgB,eAAiBlB,EAAQkB,aAChChB,EAAOH,WAAY,EACnBG,EAAOI,QAAS,EAChBJ,EAAOD,IAAMH,EACbI,EAAOiB,KAAO,GACdjB,EAAOF,QAAUA,EACVE,EAEX,SAAS,EAAQA,GACb,MAAM,KAAEiB,GAASjB,EACjB,GAAIiB,EAAKH,OAAQ,CACb,IAAK,IAAII,EAAI,EAAGA,EAAID,EAAKH,OAAQI,IAC7BD,EAAKC,GAAGC,OAAOnB,GAEnBiB,EAAKH,OAAS,GAGtB,IAAIM,GAAc,EAClB,MAAMC,EAAa,GACnB,SAASC,IACLD,EAAWV,KAAKS,GAChBA,GAAc,EAElB,SAASV,IACLW,EAAWV,KAAKS,GAChBA,GAAc,EAElB,SAASP,IACL,MAAMU,EAAOF,EAAWT,MACxBQ,OAAuBZ,IAATe,GAA4BA,EAE9C,SAASC,EAAMC,EAAQC,EAAMC,GACzB,IAAKP,QAAgCZ,IAAjBjB,EAChB,OAEJ,IAAIqC,EAAUxC,EAAUyC,IAAIJ,GACvBG,GACDxC,EAAU0C,IAAIL,EAASG,EAAU,IAAIG,KAEzC,IAAIC,EAAMJ,EAAQC,IAAIF,GACjBK,GACDJ,EAAQE,IAAIH,EAAMK,EAAM,IAAIC,KAE3BD,EAAIE,IAAI3C,KACTyC,EAAIG,IAAI5C,GACRA,EAAa0B,KAAKN,KAAKqB,IAW/B,SAASI,EAAQX,EAAQC,EAAMC,EAAKU,EAAUC,EAAUC,GACpD,MAAMX,EAAUxC,EAAUyC,IAAIJ,GAC9B,IAAKG,EAED,OAEJ,MAAMY,EAAU,IAAIP,IACdE,EAAOM,IACLA,GACAA,EAAaC,QAAQ1C,KACbA,IAAWT,GAAgBS,EAAOgB,eAClCwB,EAAQL,IAAInC,MAK5B,GAAa,UAAT0B,EAGAE,EAAQc,QAAQP,QAEf,GAAY,WAARR,GAAoB,eAAQF,GACjCG,EAAQc,QAAQ,CAACV,EAAKL,MACN,WAARA,GAAoBA,GAAOU,IAC3BF,EAAIH,UAUZ,YAJY,IAARL,GACAQ,EAAIP,EAAQC,IAAIF,IAGZD,GACJ,IAAK,MACI,eAAQD,GAMJ,eAAaE,IAElBQ,EAAIP,EAAQC,IAAI,YAPhBM,EAAIP,EAAQC,IAAIrC,IACZ,eAAMiC,IACNU,EAAIP,EAAQC,IAAInC,KAOxB,MACJ,IAAK,SACI,eAAQ+B,KACTU,EAAIP,EAAQC,IAAIrC,IACZ,eAAMiC,IACNU,EAAIP,EAAQC,IAAInC,KAGxB,MACJ,IAAK,MACG,eAAM+B,IACNU,EAAIP,EAAQC,IAAIrC,IAEpB,MAGZ,MAAMmD,EAAO3C,IAYLA,EAAOF,QAAQS,UACfP,EAAOF,QAAQS,UAAUP,GAGzBA,KAGRwC,EAAQE,QAAQC,GAGpB,MAAMC,EAAiB,IAAIX,IAAIY,OAAOC,oBAAoBrD,QACrDsD,IAAIpB,GAAOlC,OAAOkC,IAClBqB,OAAO,SACN,EAAoBC,IACpBC,EAA2BD,GAAa,GAAO,GAC/CE,EAA4BF,GAAa,GACzCG,EAAmCH,GAAa,GAAM,GACtDI,EAAwB,GA4B9B,SAASJ,EAAaK,GAAa,EAAOC,GAAU,GAChD,OAAO,SAAa9B,EAAQE,EAAK6B,GAC7B,GAAY,mBAAR7B,EACA,OAAQ2B,EAEP,GAAY,mBAAR3B,EACL,OAAO2B,EAEN,GAAY,YAAR3B,GACL6B,KAAcF,EAAaG,GAAcC,IAAa7B,IAAIJ,GAC1D,OAAOA,EAEX,MAAMkC,EAAgB,eAAQlC,GAC9B,IAAK6B,GAAcK,GAAiB,eAAON,EAAuB1B,GAC9D,OAAOiC,QAAQ/B,IAAIwB,EAAuB1B,EAAK6B,GAEnD,MAAMK,EAAMD,QAAQ/B,IAAIJ,EAAQE,EAAK6B,GACrC,GAAI,eAAS7B,GACPiB,EAAeV,IAAIP,GACX,cAARA,GAA+B,cAARA,EACzB,OAAOkC,EAKX,GAHKP,GACD9B,EAAMC,EAAQ,MAAiBE,GAE/B4B,EACA,OAAOM,EAEX,GAAIC,GAAMD,GAAM,CAEZ,MAAME,GAAgBJ,IAAkB,eAAahC,GACrD,OAAOoC,EAAeF,EAAIG,MAAQH,EAEtC,OAAI,eAASA,GAIFP,EAAaW,GAASJ,GAAOK,GAASL,GAE1CA,GAlEf,CAAC,WAAY,UAAW,eAAenB,QAAQf,IAC3C,MAAMwC,EAASC,MAAMC,UAAU1C,GAC/B0B,EAAsB1B,GAAO,YAAa2C,GACtC,MAAMC,EAAMC,GAAMC,MAClB,IAAK,IAAIvD,EAAI,EAAGwD,EAAID,KAAK3D,OAAQI,EAAIwD,EAAGxD,IACpCM,EAAM+C,EAAK,MAAiBrD,EAAI,IAGpC,MAAM2C,EAAMM,EAAOQ,MAAMJ,EAAKD,GAC9B,OAAa,IAATT,IAAsB,IAARA,EAEPM,EAAOQ,MAAMJ,EAAKD,EAAKvB,IAAIyB,KAG3BX,KAInB,CAAC,OAAQ,MAAO,QAAS,UAAW,UAAUnB,QAAQf,IAClD,MAAMwC,EAASC,MAAMC,UAAU1C,GAC/B0B,EAAsB1B,GAAO,YAAa2C,GACtChD,IACA,MAAMuC,EAAMM,EAAOQ,MAAMF,KAAMH,GAE/B,OADAzD,IACOgD,KA6Cf,MAAM,EAAoBe,IACpBC,EAA2BD,GAAa,GAC9C,SAASA,EAAarB,GAAU,GAC5B,OAAO,SAAa9B,EAAQE,EAAKqC,EAAOR,GACpC,MAAMlB,EAAWb,EAAOE,GACxB,IAAK4B,IACDS,EAAQQ,GAAMR,IACT,eAAQvC,IAAWqC,GAAMxB,KAAcwB,GAAME,IAE9C,OADA1B,EAAS0B,MAAQA,GACV,EAGf,MAAMc,EAAS,eAAQrD,IAAW,eAAaE,GACzCoD,OAAOpD,GAAOF,EAAOX,OACrB,eAAOW,EAAQE,GACfqD,EAASpB,QAAQ9B,IAAIL,EAAQE,EAAKqC,EAAOR,GAU/C,OARI/B,IAAW+C,GAAMhB,KACZsB,EAGI,eAAWd,EAAO1B,IACvBF,EAAQX,EAAQ,MAAiBE,EAAKqC,EAAO1B,GAH7CF,EAAQX,EAAQ,MAAiBE,EAAKqC,IAMvCgB,GAGf,SAASC,EAAexD,EAAQE,GAC5B,MAAMmD,EAAS,eAAOrD,EAAQE,GACxBW,EAAWb,EAAOE,GAClBqD,EAASpB,QAAQqB,eAAexD,EAAQE,GAI9C,OAHIqD,GAAUF,GACV1C,EAAQX,EAAQ,SAAuBE,OAAKnB,EAAW8B,GAEpD0C,EAEX,SAAS,EAAIvD,EAAQE,GACjB,MAAMqD,EAASpB,QAAQ1B,IAAIT,EAAQE,GAInC,OAHK,eAASA,IAASiB,EAAeV,IAAIP,IACtCH,EAAMC,EAAQ,MAAiBE,GAE5BqD,EAEX,SAASE,EAAQzD,GAEb,OADAD,EAAMC,EAAQ,UAAyB,eAAQA,GAAU,SAAWjC,GAC7DoE,QAAQsB,QAAQzD,GAE3B,MAAM0D,EAAkB,CACpBtD,IAAG,EACHC,IAAG,EACHmD,iBACA/C,IAAG,EACHgD,WAEEE,EAAmB,CACrBvD,IAAKsB,EACL,IAAI1B,EAAQE,GAIR,OAAO,GAEX,eAAeF,EAAQE,GAInB,OAAO,IAGT0D,EAA0B,eAAO,GAAIF,EAAiB,CACxDtD,IAAKqB,EACLpB,IAAK+C,IASHS,GAJ0B,eAAO,GAAIF,EAAkB,CACzDvD,IAAKuB,IAGWY,GAAU,eAASA,GAASE,GAASF,GAASA,GAC5DuB,EAAcvB,GAAU,eAASA,GAASC,GAASD,GAASA,EAC5DwB,EAAaxB,GAAUA,EACvByB,EAAYC,GAAM9B,QAAQ+B,eAAeD,GAC/C,SAASE,EAAMnE,EAAQE,EAAK2B,GAAa,EAAOuC,GAAY,GAGxDpE,EAASA,EAAO,WAChB,MAAMqE,EAAYtB,GAAM/C,GAClBsE,EAASvB,GAAM7C,GACjBA,IAAQoE,IACPzC,GAAc9B,EAAMsE,EAAW,MAAiBnE,IAEpD2B,GAAc9B,EAAMsE,EAAW,MAAiBC,GACjD,MAAM,IAAE7D,GAAQuD,EAASK,GACnBE,EAAO1C,EAAaiC,EAAaM,EAAYL,EAAYF,EAC/D,OAAIpD,EAAI+D,KAAKH,EAAWnE,GACbqE,EAAKvE,EAAOI,IAAIF,IAElBO,EAAI+D,KAAKH,EAAWC,GAClBC,EAAKvE,EAAOI,IAAIkE,SADtB,EAIT,SAASG,EAAMvE,EAAK2B,GAAa,GAC7B,MAAM7B,EAASgD,KAAK,WACdqB,EAAYtB,GAAM/C,GAClBsE,EAASvB,GAAM7C,GAKrB,OAJIA,IAAQoE,IACPzC,GAAc9B,EAAMsE,EAAW,MAAiBnE,IAEpD2B,GAAc9B,EAAMsE,EAAW,MAAiBC,GAC1CpE,IAAQoE,EACTtE,EAAOS,IAAIP,GACXF,EAAOS,IAAIP,IAAQF,EAAOS,IAAI6D,GAExC,SAASI,EAAK1E,EAAQ6B,GAAa,GAG/B,OAFA7B,EAASA,EAAO,YACf6B,GAAc9B,EAAMgD,GAAM/C,GAAS,UAAyBjC,GACtDoE,QAAQ/B,IAAIJ,EAAQ,OAAQA,GAEvC,SAAS,EAAIuC,GACTA,EAAQQ,GAAMR,GACd,MAAMvC,EAAS+C,GAAMC,MACf2B,EAAQX,EAAShE,GACjBqD,EAASsB,EAAMlE,IAAI+D,KAAKxE,EAAQuC,GAKtC,OAJAvC,EAAOU,IAAI6B,GACNc,GACD1C,EAAQX,EAAQ,MAAiBuC,EAAOA,GAErCS,KAEX,SAAS4B,EAAM1E,EAAKqC,GAChBA,EAAQQ,GAAMR,GACd,MAAMvC,EAAS+C,GAAMC,OACf,IAAEvC,EAAG,IAAEL,GAAQ4D,EAAShE,GAC9B,IAAIqD,EAAS5C,EAAI+D,KAAKxE,EAAQE,GACzBmD,IACDnD,EAAM6C,GAAM7C,GACZmD,EAAS5C,EAAI+D,KAAKxE,EAAQE,IAK9B,MAAMW,EAAWT,EAAIoE,KAAKxE,EAAQE,GAQlC,OAPAF,EAAOK,IAAIH,EAAKqC,GACXc,EAGI,eAAWd,EAAO1B,IACvBF,EAAQX,EAAQ,MAAiBE,EAAKqC,EAAO1B,GAH7CF,EAAQX,EAAQ,MAAiBE,EAAKqC,GAKnCS,KAEX,SAAS6B,EAAY3E,GACjB,MAAMF,EAAS+C,GAAMC,OACf,IAAEvC,EAAG,IAAEL,GAAQ4D,EAAShE,GAC9B,IAAIqD,EAAS5C,EAAI+D,KAAKxE,EAAQE,GACzBmD,IACDnD,EAAM6C,GAAM7C,GACZmD,EAAS5C,EAAI+D,KAAKxE,EAAQE,IAK9B,MAAMW,EAAWT,EAAMA,EAAIoE,KAAKxE,EAAQE,QAAOnB,EAEzCwE,EAASvD,EAAON,OAAOQ,GAI7B,OAHImD,GACA1C,EAAQX,EAAQ,SAAuBE,OAAKnB,EAAW8B,GAEpD0C,EAEX,SAASuB,IACL,MAAM9E,EAAS+C,GAAMC,MACf+B,EAA2B,IAAhB/E,EAAO0E,KAClB5D,OAIA/B,EAEAwE,EAASvD,EAAO8E,QAItB,OAHIC,GACApE,EAAQX,EAAQ,aAAqBjB,OAAWA,EAAW+B,GAExDyC,EAEX,SAASyB,EAAcnD,EAAYuC,GAC/B,OAAO,SAAiBa,EAAUC,GAC9B,MAAMC,EAAWnC,KACXhD,EAASmF,EAAS,WAClBd,EAAYtB,GAAM/C,GAClBuE,EAAO1C,EAAaiC,EAAaM,EAAYL,EAAYF,EAE/D,OADChC,GAAc9B,EAAMsE,EAAW,UAAyBtG,GAClDiC,EAAOiB,QAAQ,CAACsB,EAAOrC,IAInB+E,EAAST,KAAKU,EAASX,EAAKhC,GAAQgC,EAAKrE,GAAMiF,KAIlE,SAASC,EAAqB1C,EAAQb,EAAYuC,GAC9C,OAAO,YAAavB,GAChB,MAAM7C,EAASgD,KAAK,WACdqB,EAAYtB,GAAM/C,GAClBqF,EAAc,eAAMhB,GACpBiB,EAAoB,YAAX5C,GAAyBA,IAAW1E,OAAOuH,UAAYF,EAChEG,EAAuB,SAAX9C,GAAqB2C,EACjCI,EAAgBzF,EAAO0C,MAAWG,GAClC0B,EAAO1C,EAAaiC,EAAaM,EAAYL,EAAYF,EAK/D,OAJChC,GACG9B,EAAMsE,EAAW,UAAyBmB,EAAYvH,EAAsBF,GAGzE,CAEH,OACI,MAAM,MAAEwE,EAAK,KAAEmD,GAASD,EAAcE,OACtC,OAAOD,EACD,CAAEnD,QAAOmD,QACT,CACEnD,MAAO+C,EAAS,CAACf,EAAKhC,EAAM,IAAKgC,EAAKhC,EAAM,KAAOgC,EAAKhC,GACxDmD,SAIZ,CAAC1H,OAAOuH,YACJ,OAAOvC,QAKvB,SAAS4C,EAAqB3F,GAC1B,OAAO,YAAa4C,GAKhB,MAAgB,WAAT5C,GAAyC+C,MAGxD,MAAM6C,EAA0B,CAC5B,IAAI3F,GACA,OAAOiE,EAAMnB,KAAM9C,IAEvB,WACI,OAAOwE,EAAK1B,OAEhBvC,IAAKgE,EACL/D,IAAG,EACHL,IAAKuE,EACLlF,OAAQmF,EACRC,QACA7D,QAAS+D,GAAc,GAAO,IAE5Bc,EAA0B,CAC5B,IAAI5F,GACA,OAAOiE,EAAMnB,KAAM9C,GAAK,GAAO,IAEnC,WACI,OAAOwE,EAAK1B,OAEhBvC,IAAKgE,EACL/D,IAAG,EACHL,IAAKuE,EACLlF,OAAQmF,EACRC,QACA7D,QAAS+D,GAAc,GAAO,IAE5Be,GAA2B,CAC7B,IAAI7F,GACA,OAAOiE,EAAMnB,KAAM9C,GAAK,IAE5B,WACI,OAAOwE,EAAK1B,MAAM,IAEtB,IAAI9C,GACA,OAAOuE,EAAMD,KAAKxB,KAAM9C,GAAK,IAEjCQ,IAAKkF,EAAqB,OAC1BvF,IAAKuF,EAAqB,OAC1BlG,OAAQkG,EAAqB,UAC7Bd,MAAOc,EAAqB,SAC5B3E,QAAS+D,GAAc,GAAM,IAE3BgB,GAAkB,CAAC,OAAQ,SAAU,UAAWhI,OAAOuH,UAM7D,SAASU,GAA4BpE,EAAYC,GAC7C,MAAMoE,EAAmBpE,EACnBgE,EACAjE,EACIkE,GACAF,EACV,MAAO,CAAC7F,EAAQE,EAAK6B,IACL,mBAAR7B,GACQ2B,EAEK,mBAAR3B,EACE2B,EAEM,YAAR3B,EACEF,EAEJmC,QAAQ/B,IAAI,eAAO8F,EAAkBhG,IAAQA,KAAOF,EACrDkG,EACAlG,EAAQE,EAAK6B,GAvB3BiE,GAAgB/E,QAAQyB,IACpBmD,EAAwBnD,GAAU0C,EAAqB1C,GAAQ,GAAO,GACtEqD,GAAyBrD,GAAU0C,EAAqB1C,GAAQ,GAAM,GACtEoD,EAAwBpD,GAAU0C,EAAqB1C,GAAQ,GAAO,KAuB1E,MAAMyD,GAA4B,CAC9B/F,IAAK6F,IAA4B,GAAO,IAEtCG,GAA4B,CAC9BhG,IAAK6F,IAA4B,GAAO,IAEtCI,GAA6B,CAC/BjG,IAAK6F,IAA4B,GAAM,IAc3C,MAAMhE,GAAc,IAAIrE,QAClBoE,GAAc,IAAIpE,QACxB,SAAS0I,GAAcC,GACnB,OAAQA,GACJ,IAAK,SACL,IAAK,QACD,OAAO,EACX,IAAK,MACL,IAAK,MACL,IAAK,UACL,IAAK,UACD,OAAO,EACX,QACI,OAAO,GAGnB,SAASC,GAAcjE,GACnB,OAAOA,EAAM,cAA2BnB,OAAOqF,aAAalE,GACtD,EACA+D,GAAc,eAAU/D,IAElC,SAASE,GAASzC,GAEd,OAAIA,GAAUA,EAAO,kBACVA,EAEJ0G,GAAqB1G,GAAQ,EAAO0D,EAAiByC,IAOhE,SAASQ,GAAgB3G,GACrB,OAAO0G,GAAqB1G,GAAQ,EAAO4D,EAAyBwC,IAMxE,SAAS5D,GAASxC,GACd,OAAO0G,GAAqB1G,GAAQ,EAAM2D,EAAkB0C,IAWhE,SAASK,GAAqB1G,EAAQ6B,EAAY+E,EAAcC,GAC5D,IAAK,eAAS7G,GAIV,OAAOA,EAIX,GAAIA,EAAO,cACL6B,IAAc7B,EAAO,mBACvB,OAAOA,EAGX,MAAM8G,EAAWjF,EAAaG,GAAcC,GACtC8E,EAAgBD,EAAS1G,IAAIJ,GACnC,GAAI+G,EACA,OAAOA,EAGX,MAAMC,EAAaR,GAAcxG,GACjC,GAAmB,IAAfgH,EACA,OAAOhH,EAEX,MAAMiH,EAAQ,IAAIC,MAAMlH,EAAuB,IAAfgH,EAAoCH,EAAqBD,GAEzF,OADAE,EAASzG,IAAIL,EAAQiH,GACdA,EAEX,SAASE,GAAW5E,GAChB,OAAI,GAAWA,GACJ4E,GAAW5E,EAAM,eAElBA,IAASA,EAAM,mBAE7B,SAAS,GAAWA,GAChB,SAAUA,IAASA,EAAM,mBAE7B,SAAS6E,GAAQ7E,GACb,OAAO4E,GAAW5E,IAAU,GAAWA,GAE3C,SAASQ,GAAMoC,GACX,OAASA,GAAYpC,GAAMoC,EAAS,aAA0BA,EAQlE,SAAS9C,GAAMgF,GACX,OAAOC,QAAQD,IAAqB,IAAhBA,EAAEE,WAoC1B,SAASC,GAAMC,GACX,OAAOpF,GAAMoF,GAAOA,EAAIlF,MAAQkF,EAEpC,MAAMC,GAAwB,CAC1BtH,IAAK,CAACJ,EAAQE,EAAK6B,IAAayF,GAAMrF,QAAQ/B,IAAIJ,EAAQE,EAAK6B,IAC/D1B,IAAK,CAACL,EAAQE,EAAKqC,EAAOR,KACtB,MAAMlB,EAAWb,EAAOE,GACxB,OAAImC,GAAMxB,KAAcwB,GAAME,IAC1B1B,EAAS0B,MAAQA,GACV,GAGAJ,QAAQ9B,IAAIL,EAAQE,EAAKqC,EAAOR,KAInD,SAAS4F,GAAUC,GACf,OAAOT,GAAWS,GACZA,EACA,IAAIV,MAAMU,EAAgBF,IA6BpC,MAAMG,GACF,YAAYC,EAASC,GACjB/E,KAAK8E,QAAUA,EACf9E,KAAK+E,KAAOA,EACZ/E,KAAKuE,WAAY,EAErB,YACI,OAAOvE,KAAK8E,QAAQ9E,KAAK+E,MAE7B,UAAUC,GACNhF,KAAK8E,QAAQ9E,KAAK+E,MAAQC,GAGlC,SAASC,GAAMC,EAAQhI,GACnB,OAAOmC,GAAM6F,EAAOhI,IACdgI,EAAOhI,GACP,IAAI2H,GAAcK,EAAQhI,GAGpC,MAAMiI,GACF,YAAYC,EAAQC,EAASxG,GACzBmB,KAAKqF,QAAUA,EACfrF,KAAKsF,QAAS,EACdtF,KAAKuE,WAAY,EACjBvE,KAAKzE,OAAS,EAAO6J,EAAQ,CACzB3J,MAAM,EACNK,UAAW,KACFkE,KAAKsF,SACNtF,KAAKsF,QAAS,EACd3H,EAAQoC,GAAMC,MAAO,MAAiB,aAIlDA,KAAK,kBAAsCnB,EAE/C,YAMI,OALImB,KAAKsF,SACLtF,KAAKuF,OAASvF,KAAKzE,SACnByE,KAAKsF,QAAS,GAElBvI,EAAMgD,GAAMC,MAAO,MAAiB,SAC7BA,KAAKuF,OAEhB,UAAU3H,GACNoC,KAAKqF,QAAQzH,IAGrB,SAAS,GAAS4H,GACd,IAAIJ,EACAK,EAaJ,OAZI,eAAWD,IACXJ,EAASI,EACTC,EAIM,SAGNL,EAASI,EAAgBpI,IACzBqI,EAASD,EAAgBnI,KAEtB,IAAI8H,GAAgBC,EAAQK,EAAQ,eAAWD,KAAqBA,EAAgBnI,KC7rB/F,SAASqI,GAAsBvK,EAAIwK,EAAU1I,EAAM4C,GAC/C,IAAIT,EACJ,IACIA,EAAMS,EAAO1E,KAAM0E,GAAQ1E,IAE/B,MAAOyK,GACHC,GAAYD,EAAKD,EAAU1I,GAE/B,OAAOmC,EAEX,SAAS0G,GAA2B3K,EAAIwK,EAAU1I,EAAM4C,GACpD,GAAI,eAAW1E,GAAK,CAChB,MAAMiE,EAAMsG,GAAsBvK,EAAIwK,EAAU1I,EAAM4C,GAMtD,OALIT,GAAO,eAAUA,IACjBA,EAAI2G,MAAMH,IACNC,GAAYD,EAAKD,EAAU1I,KAG5BmC,EAEX,MAAM4G,EAAS,GACf,IAAK,IAAIvJ,EAAI,EAAGA,EAAItB,EAAGkB,OAAQI,IAC3BuJ,EAAO9J,KAAK4J,GAA2B3K,EAAGsB,GAAIkJ,EAAU1I,EAAM4C,IAElE,OAAOmG,EAEX,SAASH,GAAYD,EAAKD,EAAU1I,EAAMgJ,GAAa,GACnD,MAAMC,EAAeP,EAAWA,EAASQ,MAAQ,KACjD,GAAIR,EAAU,CACV,IAAIS,EAAMT,EAASU,OAEnB,MAAMC,EAAkBX,EAAS1B,MAE3BsC,EAA+EtJ,EACrF,MAAOmJ,EAAK,CACR,MAAMI,EAAqBJ,EAAIK,GAC/B,GAAID,EACA,IAAK,IAAI/J,EAAI,EAAGA,EAAI+J,EAAmBnK,OAAQI,IAC3C,IAA+D,IAA3D+J,EAAmB/J,GAAGmJ,EAAKU,EAAiBC,GAC5C,OAIZH,EAAMA,EAAIC,OAGd,MAAMK,EAAkBf,EAASgB,WAAWC,OAAOC,aACnD,GAAIH,EAEA,YADAhB,GAAsBgB,EAAiB,KAAM,GAA4B,CAACd,EAAKU,EAAiBC,IAIxGO,GAASlB,EAAK3I,EAAMiJ,EAAcD,GAEtC,SAASa,GAASlB,EAAK3I,EAAMiJ,EAAcD,GAAa,GAoBhDc,QAAQC,MAAMpB,GAItB,IAAIqB,IAAa,EACbC,IAAiB,EACrB,MAAMC,GAAQ,GACd,IAAIC,GAAa,EACjB,MAAMC,GAAqB,GAC3B,IAAIC,GAAoB,KACpBC,GAAgB,EACpB,MAAMC,GAAsB,GAC5B,IAAIC,GAAqB,KACrBC,GAAiB,EACrB,MAAMC,GAAkBC,QAAQC,UAChC,IAAIC,GAAsB,KACtBC,GAA2B,KAE/B,SAASC,GAAS7M,GACd,MAAM8M,EAAIH,IAAuBH,GACjC,OAAOxM,EAAK8M,EAAEC,KAAKlI,KAAO7E,EAAGgN,KAAKnI,MAAQ7E,GAAM8M,EAEpD,SAASG,GAASC,GAORlB,GAAM9K,QACP8K,GAAMnL,SAASqM,EAAKpB,IAAcoB,EAAI9L,aAAe6K,GAAa,EAAIA,KACvEiB,IAAQN,KACRZ,GAAMjL,KAAKmM,GACXC,MAGR,SAASA,KACArB,IAAeC,KAChBA,IAAiB,EACjBY,GAAsBH,GAAgBO,KAAKK,KAGnD,SAASC,GAAcH,GACnB,MAAM5L,EAAI0K,GAAMsB,QAAQJ,GACpB5L,GAAK,GACL0K,GAAMuB,OAAOjM,EAAG,GAGxB,SAASkM,GAAQC,EAAIC,EAAaC,EAAcC,GACvC,eAAQH,GAUTE,EAAa5M,QAAQ0M,GAThBC,GACAA,EAAY7M,SAAS4M,EAAIA,EAAGrM,aAAewM,EAAQ,EAAIA,IACxDD,EAAa5M,KAAK0M,GAS1BN,KAEJ,SAASU,GAAgBJ,GACrBD,GAAQC,EAAItB,GAAmBD,GAAoBE,IAEvD,SAAS0B,GAAiBL,GACtBD,GAAQC,EAAInB,GAAoBD,GAAqBE,IAEzD,SAASwB,GAAiBC,EAAMC,EAAY,MACxC,GAAI/B,GAAmBhL,OAAQ,CAO3B,IANA0L,GAA2BqB,EAC3B9B,GAAoB,IAAI,IAAI9J,IAAI6J,KAChCA,GAAmBhL,OAAS,EAIvBkL,GAAgB,EAAGA,GAAgBD,GAAkBjL,OAAQkL,KAI9DD,GAAkBC,MAEtBD,GAAoB,KACpBC,GAAgB,EAChBQ,GAA2B,KAE3BmB,GAAiBC,EAAMC,IAG/B,SAASC,GAAkBF,GACvB,GAAI3B,GAAoBnL,OAAQ,CAC5B,MAAMiN,EAAU,IAAI,IAAI9L,IAAIgK,KAG5B,GAFAA,GAAoBnL,OAAS,EAEzBoL,GAEA,YADAA,GAAmBvL,QAAQoN,GAQ/B,IALA7B,GAAqB6B,EAIrB7B,GAAmB8B,KAAK,CAACC,EAAGC,IAAMC,GAAMF,GAAKE,GAAMD,IAC9C/B,GAAiB,EAAGA,GAAiBD,GAAmBpL,OAAQqL,KAIjED,GAAmBC,MAEvBD,GAAqB,KACrBC,GAAiB,GAGzB,MAAMgC,GAASrB,GAAkB,MAAVA,EAAI/L,GAAaqN,IAAWtB,EAAI/L,GACvD,SAASiM,GAAUY,GACfjC,IAAiB,EACjBD,IAAa,EAIbiC,GAAiBC,GAQjBhC,GAAMoC,KAAK,CAACC,EAAGC,IAAMC,GAAMF,GAAKE,GAAMD,IACtC,IACI,IAAKrC,GAAa,EAAGA,GAAaD,GAAM9K,OAAQ+K,KAAc,CAC1D,MAAMiB,EAAMlB,GAAMC,IACdiB,GAIA3C,GAAsB2C,EAAK,KAAM,KAI7C,QACIjB,GAAa,EACbD,GAAM9K,OAAS,EACfgN,GAAkBF,GAClBlC,IAAa,EACba,GAAsB,MAGlBX,GAAM9K,QAAUmL,GAAoBnL,SACpCkM,GAAUY,IAyBK,IAAI3L,IAoBnB,IAAIF,IA6IhB,SAAS,GAAKqI,EAAUiE,KAAUC,GAC9B,MAAMC,EAAQnE,EAASQ,MAAM2D,OAAS,OAqBtC,IAAIjK,EAAOgK,EACX,MAAME,EAAkBH,EAAMI,WAAW,WAEnCC,EAAWF,GAAmBH,EAAMM,MAAM,GAChD,GAAID,GAAYA,KAAYH,EAAO,CAC/B,MAAMK,GAA+B,eAAbF,EAA4B,QAAUA,GAAzC,aACf,OAAEG,EAAM,KAAEC,GAASP,EAAMK,IAAiB,OAC5CE,EACAxK,EAAOgK,EAAQvL,IAAIkL,GAAKA,EAAEa,QAErBD,IACLvK,EAAOgK,EAAQvL,IAAI,SAiB3B,IAAIgM,EAAc,eAAa,eAASV,IACpCW,EAAUT,EAAMQ,IAGfC,GAAWR,IACZO,EAAc,eAAa,eAAUV,IACrCW,EAAUT,EAAMQ,IAEhBC,GACAzE,GAA2ByE,EAAS5E,EAAU,EAAiC9F,GAEnF,MAAM2K,EAAcV,EAAMQ,EAAc,QACxC,GAAIE,EAAa,CACb,GAAK7E,EAAS8E,SAGT,GAAI9E,EAAS8E,QAAQH,GACtB,YAHC3E,EAAS8E,QAAU,IAAIH,IAAe,EAK3CxE,GAA2B0E,EAAa7E,EAAU,EAAiC9F,IAG3F,SAAS6K,GAAsBC,EAAMhE,EAAYiE,GAAU,GACvD,IAAKjE,EAAWkE,YAA0B9O,IAAjB4O,EAAKG,QAC1B,OAAOH,EAAKG,QAEhB,MAAMxP,EAAMqP,EAAKI,MACjB,IAAIC,EAAa,GAEbC,GAAa,EACjB,IAA4B,eAAWN,GAAO,CAC1C,MAAMO,EAAe5P,IACjB2P,GAAa,EACb,eAAOD,EAAYN,GAAsBpP,EAAKqL,GAAY,MAEzDiE,GAAWjE,EAAWwE,OAAO9O,QAC9BsK,EAAWwE,OAAOlN,QAAQiN,GAE1BP,EAAKS,SACLF,EAAYP,EAAKS,SAEjBT,EAAKQ,QACLR,EAAKQ,OAAOlN,QAAQiN,GAG5B,OAAK5P,GAAQ2P,GAGT,eAAQ3P,GACRA,EAAI2C,QAAQf,GAAQ8N,EAAW9N,GAAO,MAGtC,eAAO8N,EAAY1P,GAEfqP,EAAKG,QAAUE,GARXL,EAAKG,QAAU,KAa/B,SAASO,GAAehQ,EAAS6B,GAC7B,SAAK7B,IAAY,eAAK6B,MAGtBA,EAAMA,EAAIgN,MAAM,GAAGoB,QAAQ,QAAS,IAC5B,eAAOjQ,EAAS6B,EAAI,GAAGqO,cAAgBrO,EAAIgN,MAAM,KACrD,eAAO7O,EAAS,eAAU6B,KAC1B,eAAO7B,EAAS6B,IAOxB,IAAIsO,GAA2B,KAC/B,SAASC,GAA4B9F,GACjC6F,GAA2B7F,EAW/B,SAAS+F,GAAoB/F,GACzB,MAAQ1I,KAAM0O,EAAS,MAAExF,EAAK,MAAElC,EAAK,UAAE2H,EAAS,MAAE9B,EAAO+B,cAAeA,GAAa,MAAEC,EAAK,MAAEC,EAAK,KAAEC,EAAI,OAAEC,EAAM,YAAEC,EAAW,KAAEC,EAAI,WAAEC,EAAU,IAAEC,GAAQ1G,EAC1J,IAAIpF,EACJiL,GAA2B7F,EAI3B,IACI,IAAI2G,EACJ,GAAsB,EAAlBnG,EAAMoG,UAAwC,CAG9C,MAAMC,EAAaZ,GAAa3H,EAChC1D,EAASkM,GAAeR,EAAOzK,KAAKgL,EAAYA,EAAYN,EAAapC,EAAOsC,EAAYD,EAAME,IAClGC,EAAmBP,MAElB,CAED,MAAME,EAASN,EAEX,EAGJpL,EAASkM,GAAeR,EAAO5P,OAAS,EAClC4P,EAAOnC,EASH,CAAEiC,QAAOD,QAAOE,SACpBC,EAAOnC,EAAO,OACpBwC,EAAmBX,EAAU7B,MACvBiC,EACAW,GAAyBX,GAKnC,IAAIY,EAAOpM,EAMX,IAA+B,IAA3BoL,EAAUiB,cAA0BN,EAAkB,CACtD,MAAMO,EAAOzO,OAAOyO,KAAKP,IACnB,UAAEC,GAAcI,EAClBE,EAAKxQ,SACW,EAAZkQ,GACY,EAAZA,KACIV,GAAgBgB,EAAKC,KAAK,UAK1BR,EAAmBS,GAAqBT,EAAkBT,IAE9Dc,EAAOK,GAAWL,EAAML,IAsChCnG,EAAM8G,OAKNN,EAAKM,KAAON,EAAKM,KAAON,EAAKM,KAAKC,OAAO/G,EAAM8G,MAAQ9G,EAAM8G,MAG7D9G,EAAMgH,aAKNR,EAAKQ,WAAahH,EAAMgH,YAMxB5M,EAASoM,EAGjB,MAAO/G,GACHC,GAAYD,EAAKD,EAAU,GAC3BpF,EAAS6M,GAAYC,IAGzB,OADA7B,GAA2B,KACpBjL,EA8BX,SAAS+M,GAAiBC,GACtB,IAAIC,EACJ,IAAK,IAAI/Q,EAAI,EAAGA,EAAI8Q,EAASlR,OAAQI,IAAK,CACtC,MAAMgR,EAAQF,EAAS9Q,GACvB,IAAIiR,GAAQD,GAaR,OAXA,GAAIA,EAAMxQ,OAASoQ,IAA8B,SAAnBI,EAAMF,SAAqB,CACrD,GAAIC,EAEA,OAGAA,EAAaC,GAQ7B,OAAOD,EAEX,MAAMd,GAA4BX,IAC9B,IAAI3M,EACJ,IAAK,MAAMlC,KAAO6O,GACF,UAAR7O,GAA2B,UAARA,GAAmB,eAAKA,OAC1CkC,IAAQA,EAAM,KAAKlC,GAAO6O,EAAM7O,IAGzC,OAAOkC,GAEL2N,GAAuB,CAAChB,EAAOjC,KACjC,MAAM1K,EAAM,GACZ,IAAK,MAAMlC,KAAO6O,EACT,eAAgB7O,IAAUA,EAAIgN,MAAM,KAAMJ,IAC3C1K,EAAIlC,GAAO6O,EAAM7O,IAGzB,OAAOkC,GAQX,SAASuO,GAAsBC,EAAWC,EAAWC,GACjD,MAAQhE,MAAOiE,EAAWR,SAAUS,EAAY,UAAEC,GAAcL,GACxD9D,MAAOoE,EAAWX,SAAUY,EAAY,UAAEC,GAAcP,EAC1D9C,EAAQkD,EAAUI,aAQxB,GAAIR,EAAUZ,MAAQY,EAAUV,WAC5B,OAAO,EAEX,KAAIW,GAAaM,GAAa,GA2B1B,SAAIJ,IAAgBG,GACXA,GAAiBA,EAAaG,UAInCP,IAAcG,IAGbH,GAGAG,GAGEK,GAAgBR,EAAWG,EAAWnD,KALhCmD,GAnCb,GAAgB,KAAZE,EAGA,OAAO,EAEX,GAAgB,GAAZA,EACA,OAAKL,EAIEQ,GAAgBR,EAAWG,EAAWnD,KAHhCmD,EAKZ,GAAgB,EAAZE,EAA2B,CAChC,MAAMI,EAAeX,EAAUW,aAC/B,IAAK,IAAI/R,EAAI,EAAGA,EAAI+R,EAAanS,OAAQI,IAAK,CAC1C,MAAMS,EAAMsR,EAAa/R,GACzB,GAAIyR,EAAUhR,KAAS6Q,EAAU7Q,KAC5BmO,GAAeN,EAAO7N,GACvB,OAAO,GAwBvB,OAAO,EAEX,SAASqR,GAAgBR,EAAWG,EAAWG,GAC3C,MAAMI,EAAWrQ,OAAOyO,KAAKqB,GAC7B,GAAIO,EAASpS,SAAW+B,OAAOyO,KAAKkB,GAAW1R,OAC3C,OAAO,EAEX,IAAK,IAAII,EAAI,EAAGA,EAAIgS,EAASpS,OAAQI,IAAK,CACtC,MAAMS,EAAMuR,EAAShS,GACrB,GAAIyR,EAAUhR,KAAS6Q,EAAU7Q,KAC5BmO,GAAegD,EAAcnR,GAC9B,OAAO,EAGf,OAAO,EAEX,SAASwR,IAAgB,MAAEvI,EAAK,OAAEE,GAAUsI,GAExC,MAAOtI,GAAUA,EAAOuI,UAAYzI,GAC/BA,EAAQE,EAAOF,OAAOwI,GAAKA,EAC5BtI,EAASA,EAAOA,OAIxB,MAAMwI,GAAc5R,GAASA,EAAK6R,aA4WlC,SAASC,GAA0B5I,GAC/B,MAAM,UAAEoG,EAAS,SAAEgB,GAAapH,EAChC,IAAI6I,EACAC,EASJ,OARgB,GAAZ1C,GACAyC,EAAUE,GAAsB3B,EAAS4B,SACzCF,EAAWC,GAAsB3B,EAAS0B,YAG1CD,EAAUE,GAAsB3B,GAChC0B,EAAWxC,GAAe,OAEvB,CACHuC,UACAC,YAGR,SAASC,GAAsBE,GAI3B,GAHI,eAAWA,KACXA,EAAIA,KAEJ,eAAQA,GAAI,CACZ,MAAMC,EAAc/B,GAAiB8B,GACjC,EAGJA,EAAIC,EAER,OAAO5C,GAAe2C,GAE1B,SAASE,GAAwBnU,EAAIoU,GAC7BA,GAAYA,EAASC,cACjB,eAAQrU,GACRoU,EAASxR,QAAQ7B,QAAQf,GAGzBoU,EAASxR,QAAQ7B,KAAKf,GAI1B8N,GAAiB9N,GAezB,IAAIsU,GAA0B,EAC9B,MAAMC,GAA4BC,GAAOF,IAA2BE,EAgDpE,SAASC,GAAQzU,EAAIkR,EAAMb,IACvB,IAAKa,EACD,OAAOlR,EACX,MAAM0U,EAAsB,IAAIhQ,KAIvB4P,IACDK,IAAU,GAEd,MAAMC,EAAQvE,GACdC,GAA4BY,GAC5B,MAAMjN,EAAMjE,KAAM0E,GAKlB,OAJA4L,GAA4BsE,GACvBN,IACDO,KAEG5Q,GAGX,OADAyQ,EAAoBI,IAAK,EAClBJ,EAIX,IAAIK,GAAiB,KACrB,MAAMC,GAAe,GAIrB,SAASC,GAAY9T,GACjB6T,GAAajU,KAAMgU,GAAiB5T,GAKxC,SAAS+T,KACLF,GAAahU,MACb+T,GAAiBC,GAAaA,GAAa9T,OAAS,IAAM,KAK9D,SAASiU,GAAYhU,GACjB,OAASnB,GAAOyU,IAAQ,WACpBQ,GAAY9T,GACZ,MAAM8C,EAAMjE,EAAG+E,MAAMF,KAAMuQ,WAE3B,OADAF,KACOjR,KAIf,SAASoR,GAAU7K,EAAU8K,EAAUC,EACvCC,GAAQ,GACJ,MAAM7G,EAAQ,GACRiC,EAAQ,GACd,eAAIA,EAAO6E,GAAmB,GAC9BC,GAAalL,EAAU8K,EAAU3G,EAAOiC,GAKpC2E,EAEA/K,EAASmE,MAAQ6G,EAAQ7G,EAAQnG,GAAgBmG,GAG5CnE,EAAS1I,KAAK6M,MAMfnE,EAASmE,MAAQA,EAJjBnE,EAASmE,MAAQiC,EAOzBpG,EAASoG,MAAQA,EAErB,SAAS+E,GAAYnL,EAAU8K,EAAUM,EAAcjD,GACnD,MAAM,MAAEhE,EAAK,MAAEiC,EAAO5F,OAAO,UAAEiI,IAAgBzI,EACzCqL,EAAkBjR,GAAM+J,IACvBzO,GAAWsK,EAASkG,aAC3B,KAOKiC,GAAaM,EAAY,IACZ,GAAZA,EA0BD,CAKD,IAAI6C,EAHJJ,GAAalL,EAAU8K,EAAU3G,EAAOiC,GAIxC,IAAK,MAAM7O,KAAO8T,EACTP,IAEC,eAAOA,EAAUvT,KAGb+T,EAAW,eAAU/T,MAAUA,GAAQ,eAAOuT,EAAUQ,MAC1D5V,GACI0V,QAEuBhV,IAAtBgV,EAAa7T,SAEiBnB,IAA3BgV,EAAaE,KACjBnH,EAAM5M,GAAOgU,GAAiB7V,EAASoV,GAAY,OAAWvT,OAAKnB,EAAW4J,WAI3EmE,EAAM5M,IAMzB,GAAI6O,IAAUiF,EACV,IAAK,MAAM9T,KAAO6O,EACT0E,GAAa,eAAOA,EAAUvT,WACxB6O,EAAM7O,QAzDzB,GAAgB,EAAZkR,EAA2B,CAG3B,MAAM+C,EAAgBxL,EAASQ,MAAMqI,aACrC,IAAK,IAAI/R,EAAI,EAAGA,EAAI0U,EAAc9U,OAAQI,IAAK,CAC3C,MAAMS,EAAMiU,EAAc1U,GAEpB8C,EAAQkR,EAASvT,GACvB,GAAI7B,EAGA,GAAI,eAAO0Q,EAAO7O,GACd6O,EAAM7O,GAAOqC,MAEZ,CACD,MAAM6R,EAAe,eAASlU,GAC9B4M,EAAMsH,GAAgBF,GAAiB7V,EAAS2V,EAAiBI,EAAc7R,EAAOoG,QAI1FoG,EAAM7O,GAAOqC,GA2C7B5B,EAAQgI,EAAU,MAAiB,UAKvC,SAASkL,GAAalL,EAAU8K,EAAU3G,EAAOiC,GAC7C,MAAO1Q,EAASgW,GAAgB1L,EAASkG,aACzC,GAAI4E,EACA,IAAK,MAAMvT,KAAOuT,EAAU,CACxB,MAAMlR,EAAQkR,EAASvT,GAEvB,GAAI,eAAeA,GACf,SAIJ,IAAIoU,EACAjW,GAAW,eAAOA,EAAUiW,EAAW,eAASpU,IAChD4M,EAAMwH,GAAY/R,EAEZ8L,GAAe1F,EAAS0I,aAAcnR,KAI5C6O,EAAM7O,GAAOqC,GAIzB,GAAI8R,EAAc,CACd,MAAML,EAAkBjR,GAAM+J,GAC9B,IAAK,IAAIrN,EAAI,EAAGA,EAAI4U,EAAahV,OAAQI,IAAK,CAC1C,MAAMS,EAAMmU,EAAa5U,GACzBqN,EAAM5M,GAAOgU,GAAiB7V,EAAS2V,EAAiB9T,EAAK8T,EAAgB9T,GAAMyI,KAI/F,SAASuL,GAAiB7V,EAASyO,EAAO5M,EAAKqC,EAAOoG,GAClD,MAAM4L,EAAMlW,EAAQ6B,GACpB,GAAW,MAAPqU,EAAa,CACb,MAAMC,EAAa,eAAOD,EAAK,WAE/B,GAAIC,QAAwBzV,IAAVwD,EAAqB,CACnC,MAAMkS,EAAeF,EAAIpC,QACrBoC,EAAItU,OAASyU,UAAY,eAAWD,IACpCE,GAAmBhM,GACnBpG,EAAQkS,EAAa3H,GACrB6H,GAAmB,OAGnBpS,EAAQkS,EAIZF,EAAI,KACC,eAAOzH,EAAO5M,IAASsU,GAGnBD,EAAI,IACE,KAAVhS,GAAgBA,IAAU,eAAUrC,KACrCqC,GAAQ,GAJRA,GAAQ,GAQpB,OAAOA,EAEX,SAASqS,GAAsBjH,EAAMhE,EAAYiE,GAAU,GACvD,IAAKjE,EAAWkE,OAASF,EAAKkH,QAC1B,OAAOlH,EAAKkH,QAEhB,MAAMvW,EAAMqP,EAAKb,MACXkB,EAAa,GACbqG,EAAe,GAErB,IAAIpG,GAAa,EACjB,IAA4B,eAAWN,GAAO,CAC1C,MAAMmH,EAAexW,IACjB2P,GAAa,EACb,MAAOnB,EAAO+C,GAAQ+E,GAAsBtW,EAAKqL,GAAY,GAC7D,eAAOqE,EAAYlB,GACf+C,GACAwE,EAAanV,QAAQ2Q,KAExBjC,GAAWjE,EAAWwE,OAAO9O,QAC9BsK,EAAWwE,OAAOlN,QAAQ6T,GAE1BnH,EAAKS,SACL0G,EAAYnH,EAAKS,SAEjBT,EAAKQ,QACLR,EAAKQ,OAAOlN,QAAQ6T,GAG5B,IAAKxW,IAAQ2P,EACT,OAAQN,EAAKkH,QAAU,OAE3B,GAAI,eAAQvW,GACR,IAAK,IAAImB,EAAI,EAAGA,EAAInB,EAAIe,OAAQI,IAAK,CAC7B,EAGJ,MAAMsV,EAAgB,eAASzW,EAAImB,IAC/BuV,GAAiBD,KACjB/G,EAAW+G,GAAiB,aAInC,GAAIzW,EAAK,CACN,EAGJ,IAAK,MAAM4B,KAAO5B,EAAK,CACnB,MAAMyW,EAAgB,eAAS7U,GAC/B,GAAI8U,GAAiBD,GAAgB,CACjC,MAAMR,EAAMjW,EAAI4B,GACV+U,EAAQjH,EAAW+G,GACrB,eAAQR,IAAQ,eAAWA,GAAO,CAAEtU,KAAMsU,GAAQA,EACtD,GAAIU,EAAM,CACN,MAAMC,EAAeC,GAAa7N,QAAS2N,EAAKhV,MAC1CmV,EAAcD,GAAaE,OAAQJ,EAAKhV,MAC9CgV,EAAK,GAAsBC,GAAgB,EAC3CD,EAAK,GACDG,EAAc,GAAKF,EAAeE,GAElCF,GAAgB,GAAK,eAAOD,EAAM,aAClCZ,EAAanV,KAAK6V,MAMtC,OAAQpH,EAAKkH,QAAU,CAAC7G,EAAYqG,GAExC,SAASW,GAAiB9U,GACtB,MAAe,MAAXA,EAAI,GAUZ,SAASoV,GAAQC,GACb,MAAMC,EAAQD,GAAQA,EAAKE,WAAWD,MAAM,sBAC5C,OAAOA,EAAQA,EAAM,GAAK,GAE9B,SAASE,GAAWlJ,EAAGC,GACnB,OAAO6I,GAAQ9I,KAAO8I,GAAQ7I,GAElC,SAAS0I,GAAalV,EAAM0V,GACxB,GAAI,eAAQA,IACR,IAAK,IAAIlW,EAAI,EAAGmW,EAAMD,EAActW,OAAQI,EAAImW,EAAKnW,IACjD,GAAIiW,GAAWC,EAAclW,GAAIQ,GAC7B,OAAOR,OAId,GAAI,eAAWkW,GAChB,OAAOD,GAAWC,EAAe1V,GAAQ,GAAK,EAElD,OAAQ,EAkIZ,SAAS4V,GAAW5V,EAAM6V,EAAM9V,EAAS+V,GAAiBC,GAAU,GAChE,GAAIhW,EAAQ,CACR,MAAMiW,EAAQjW,EAAOC,KAAUD,EAAOC,GAAQ,IAIxCiW,EAAcJ,EAAKK,QACpBL,EAAKK,MAAQ,IAAItT,KACd,GAAI7C,EAAOoW,YACP,OAIJvW,IAIA8U,GAAmB3U,GACnB,MAAMoC,EAAM0G,GAA2BgN,EAAM9V,EAAQC,EAAM4C,GAG3D,OAFA8R,GAAmB,MACnBvV,IACOgD,IAQf,OANI4T,EACAC,EAAMI,QAAQH,GAGdD,EAAM/W,KAAKgX,GAERA,GAYf,MAAMI,GAAcC,GAAc,CAACT,EAAM9V,EAAS+V,MAEjDS,IAAyBX,GAAWU,EAAWT,EAAM9V,GAChDyW,GAAgBH,GAAW,MAC3BI,GAAYJ,GAAW,KACvBK,GAAiBL,GAAW,MAC5BM,GAAYN,GAAW,KACvBO,GAAkBP,GAAW,OAC7BQ,GAAcR,GAAW,MACzBS,GAAoBT,GAAW,OAC/BU,GAAkBV,GAAW,OAC7BW,GAAkB,CAACnB,EAAM9V,EAAS+V,MACpCF,GAAW,KAA2BC,EAAM9V,IAQhD,MAAMkX,GAAwB,GAE9B,SAASC,GAAMC,EAAQxL,EAAIvN,GAMvB,OAAOgZ,GAAQD,EAAQxL,EAAIvN,GAE/B,SAASgZ,GAAQD,EAAQxL,GAAI,UAAE0L,EAAS,KAAEC,EAAI,MAAEC,EAAK,QAAEC,EAAO,UAAEC,GAAc,OAAW/O,EAAWoN,IAehG,IAAI3N,EAoDAuP,EAnDAC,GAAe,EA+CnB,GA9CIvV,GAAM+U,IACNhP,EAAS,IAAMgP,EAAO7U,MACtBqV,IAAiBR,EAAOS,UAEnB1Q,GAAWiQ,IAChBhP,EAAS,IAAMgP,EACfG,GAAO,GAGPnP,EADK,eAAQgP,GACJ,IAAMA,EAAO9V,IAAI8Q,GAClB/P,GAAM+P,GACCA,EAAE7P,MAEJ4E,GAAWiL,GACT0F,GAAS1F,GAEX,eAAWA,GACT1J,GAAsB0J,EAAGzJ,EAAU,QADzC,GAQJ,eAAWyO,GACZxL,EAES,IAAMlD,GAAsB0O,EAAQzO,EAAU,GAI9C,KACL,IAAIA,IAAYA,EAASyN,YAMzB,OAHIuB,GACAA,IAEGjP,GAAsB0O,EAAQzO,EAAU,EAAwB,CAACoP,KAKvE,OAGTnM,GAAM2L,EAAM,CACZ,MAAMS,EAAa5P,EACnBA,EAAS,IAAM0P,GAASE,KAG5B,MAAMD,EAAgB5Z,IAClBwZ,EAAUM,EAAO5Z,QAAQO,OAAS,KAC9B8J,GAAsBvK,EAAIwK,EAAU,KAG5C,IAAI9H,EAAW,eAAQuW,GAAU,GAAKF,GACtC,MAAM7L,EAAM,KACR,GAAK4M,EAAOtZ,OAGZ,GAAIiN,EAAI,CAEJ,MAAMhL,EAAWqX,KACbV,GAAQK,GAAgB,eAAWhX,EAAUC,MAEzC8W,GACAA,IAEJ7O,GAA2B8C,EAAIjD,EAAU,EAAwB,CAC7D/H,EAEAC,IAAaqW,QAAwBnY,EAAY8B,EACjDkX,IAEJlX,EAAWD,QAKfqX,KAMR,IAAInZ,EADJuM,EAAI9L,eAAiBqM,EAGjB9M,EADU,SAAV0Y,EACYnM,EAEG,SAAVmM,EACO,IAAMU,GAAsB7M,EAAK1C,GAAYA,EAAS4J,UAItD,MACH5J,GAAYA,EAASwP,UACtBnM,GAAgBX,GAKhBA,KAIZ,MAAM4M,EAAS,EAAO7P,EAAQ,CAC1B3J,MAAM,EACNgZ,UACAC,YACA5Y,cAkBJ,OAhBAsZ,GAA0BH,EAAQtP,GAE9BiD,EACI0L,EACAjM,IAGAxK,EAAWoX,IAGA,SAAVT,EACLU,GAAsBD,EAAQtP,GAAYA,EAAS4J,UAGnD0F,IAEG,KACHvZ,EAAKuZ,GACDtP,GACA,eAAOA,EAAS5H,QAASkX,IAKrC,SAASI,GAAcjB,EAAQxL,EAAIvN,GAC/B,MAAMia,EAAatV,KAAKiE,MAClBmB,EAAS,eAASgP,GAClB,IAAMkB,EAAWlB,GACjBA,EAAOjM,KAAKmN,GAClB,OAAOjB,GAAQjP,EAAQwD,EAAGT,KAAKmN,GAAaja,EAAS2E,MAEzD,SAAS8U,GAASvV,EAAO4J,EAAO,IAAI3L,KAChC,IAAK,eAAS+B,IAAU4J,EAAK1L,IAAI8B,GAC7B,OAAOA,EAGX,GADA4J,EAAKzL,IAAI6B,GACLF,GAAME,GACNuV,GAASvV,EAAMA,MAAO4J,QAErB,GAAI,eAAQ5J,GACb,IAAK,IAAI9C,EAAI,EAAGA,EAAI8C,EAAMlD,OAAQI,IAC9BqY,GAASvV,EAAM9C,GAAI0M,QAGtB,GAAI,eAAM5J,IAAU,eAAMA,GAC3BA,EAAMtB,QAASgD,IACX6T,GAAS7T,EAAGkI,UAIhB,IAAK,MAAMjM,KAAOqC,EACduV,GAASvV,EAAMrC,GAAMiM,GAG7B,OAAO5J,EAGX,SAASgW,KACL,MAAMC,EAAQ,CACVL,WAAW,EACXM,WAAW,EACXC,cAAc,EACdC,cAAe,IAAIrY,KAQvB,OANAoW,GAAU,KACN8B,EAAML,WAAY,IAEtBtB,GAAgB,KACZ2B,EAAME,cAAe,IAElBF,EAEX,MAAMI,GAA0B,CAAClE,SAAU/R,OACrCkW,GAAqB,CACvBC,KAAM,iBACNhM,MAAO,CACHiM,KAAM1D,OACN2D,OAAQ1R,QACR2R,UAAW3R,QAEX4R,cAAeN,GACfO,QAASP,GACTQ,aAAcR,GACdS,iBAAkBT,GAElBU,cAAeV,GACfW,QAASX,GACTY,aAAcZ,GACda,iBAAkBb,GAElBc,eAAgBd,GAChBe,SAAUf,GACVgB,cAAehB,GACfiB,kBAAmBjB,IAEvB,MAAM9L,GAAO,MAAEgC,IACX,MAAMnG,EAAWmR,KACXtB,EAAQD,KACd,IAAIwB,EACJ,MAAO,KACH,MAAMxJ,EAAWzB,EAAMqD,SAAW6H,GAAyBlL,EAAMqD,WAAW,GAC5E,IAAK5B,IAAaA,EAASlR,OACvB,OASJ,MAAMoU,EAAW1Q,GAAM+J,IACjB,KAAEiM,GAAStF,EAMjB,MAAMhD,EAAQF,EAAS,GACvB,GAAIiI,EAAMC,UACN,OAAOwB,GAAiBxJ,GAI5B,MAAMyJ,EAAaC,GAAkB1J,GACrC,IAAKyJ,EACD,OAAOD,GAAiBxJ,GAE5B,MAAM2J,EAAaC,GAAuBH,EAAYzG,EAAU+E,EAAO7P,GACvE2R,GAAmBJ,EAAYE,GAC/B,MAAMG,EAAW5R,EAASiJ,QACpB4I,EAAgBD,GAAYJ,GAAkBI,GACpD,IAAIE,GAAuB,EAC3B,MAAM,iBAAEC,GAAqBR,EAAWja,KACxC,GAAIya,EAAkB,CAClB,MAAMxa,EAAMwa,SACc3b,IAAtBgb,EACAA,EAAoB7Z,EAEfA,IAAQ6Z,IACbA,EAAoB7Z,EACpBua,GAAuB,GAI/B,GAAID,GACAA,EAAcva,OAASoQ,MACrBsK,GAAgBT,EAAYM,IAAkBC,GAAuB,CACvE,MAAMG,EAAeP,GAAuBG,EAAe/G,EAAU+E,EAAO7P,GAI5E,GAFA2R,GAAmBE,EAAeI,GAErB,WAAT7B,EAOA,OANAP,EAAMC,WAAY,EAElBmC,EAAaC,WAAa,KACtBrC,EAAMC,WAAY,EAClB9P,EAASmS,UAENb,GAAiBxJ,GAEV,WAATsI,IACL6B,EAAaG,WAAa,CAACpJ,EAAIqJ,EAAaC,KACxC,MAAMC,EAAqBC,GAAuB3C,EAAOgC,GACzDU,EAAmB7F,OAAOmF,EAActa,MAAQsa,EAEhD7I,EAAGyJ,SAAW,KACVJ,IACArJ,EAAGyJ,cAAWrc,SACPqb,EAAWa,cAEtBb,EAAWa,aAAeA,IAItC,OAAOxK,KAMb4K,GAAiBxC,GACvB,SAASsC,GAAuB3C,EAAOrP,GACnC,MAAM,cAAEwP,GAAkBH,EAC1B,IAAI0C,EAAqBvC,EAAcvY,IAAI+I,EAAMlJ,MAKjD,OAJKib,IACDA,EAAqB9Z,OAAOka,OAAO,MACnC3C,EAActY,IAAI8I,EAAMlJ,KAAMib,IAE3BA,EAIX,SAASb,GAAuBlR,EAAO2D,EAAO0L,EAAO7P,GACjD,MAAM,OAAEqQ,EAAM,KAAED,EAAI,UAAEE,GAAY,EAAK,cAAEC,EAAa,QAAEC,EAAO,aAAEC,EAAY,iBAAEC,EAAgB,cAAEC,EAAa,QAAEC,EAAO,aAAEC,EAAY,iBAAEC,EAAgB,eAAEC,EAAc,SAAEC,EAAQ,cAAEC,EAAa,kBAAEC,GAAsB/M,EAClN5M,EAAMmV,OAAOlM,EAAMjJ,KACnBgb,EAAqBC,GAAuB3C,EAAOrP,GACnDoS,EAAW,CAACzF,EAAMjT,KACpBiT,GACIhN,GAA2BgN,EAAMnN,EAAU,EAAyB9F,IAEtEoT,EAAQ,CACV8C,OACAE,YACA,YAAYtH,GACR,IAAImE,EAAOoD,EACX,IAAKV,EAAML,UAAW,CAClB,IAAIa,EAIA,OAHAlD,EAAO4D,GAAkBR,EAO7BvH,EAAGyJ,UACHzJ,EAAGyJ,UAAS,GAGhB,MAAMI,EAAeN,EAAmBhb,GACpCsb,GACAb,GAAgBxR,EAAOqS,IACvBA,EAAa7J,GAAGyJ,UAEhBI,EAAa7J,GAAGyJ,WAEpBG,EAASzF,EAAM,CAACnE,KAEpB,MAAMA,GACF,IAAImE,EAAOqD,EACPsC,EAAYrC,EACZsC,EAAarC,EACjB,IAAKb,EAAML,UAAW,CAClB,IAAIa,EAMA,OALAlD,EAAO6D,GAAYR,EACnBsC,EAAY7B,GAAiBR,EAC7BsC,EAAa7B,GAAqBR,EAM1C,IAAIsC,GAAS,EACb,MAAMjW,EAAQiM,EAAGiK,SAAYC,IACrBF,IAEJA,GAAS,EAELJ,EADAM,EACSH,EAGAD,EAHY,CAAC9J,IAKtBsE,EAAMgF,cACNhF,EAAMgF,eAEVtJ,EAAGiK,cAAW7c,IAEd+W,GACAA,EAAKnE,EAAIjM,GACLoQ,EAAKzW,QAAU,GACfqG,KAIJA,KAGR,MAAMiM,EAAImK,GACN,MAAM5b,EAAMmV,OAAOlM,EAAMjJ,KAIzB,GAHIyR,EAAGiK,UACHjK,EAAGiK,UAAS,GAEZpD,EAAME,aACN,OAAOoD,IAEXP,EAASjC,EAAe,CAAC3H,IACzB,IAAIgK,GAAS,EACb,MAAMjW,EAAQiM,EAAGyJ,SAAYS,IACrBF,IAEJA,GAAS,EACTG,IAEIP,EADAM,EACSpC,EAGAD,EAHkB,CAAC7H,IAKhCA,EAAGyJ,cAAWrc,EACVmc,EAAmBhb,KAASiJ,UACrB+R,EAAmBhb,KAGlCgb,EAAmBhb,GAAOiJ,EACtBoQ,GACAA,EAAQ5H,EAAIjM,GACR6T,EAAQla,QAAU,GAClBqG,KAIJA,KAGR,MAAMyD,GACF,OAAOkR,GAAuBlR,EAAO2D,EAAO0L,EAAO7P,KAG3D,OAAOsN,EAMX,SAASgE,GAAiB9Q,GACtB,GAAI4S,GAAY5S,GAGZ,OAFAA,EAAQ6G,GAAW7G,GACnBA,EAAMoH,SAAW,KACVpH,EAGf,SAASgR,GAAkBhR,GACvB,OAAO4S,GAAY5S,GACbA,EAAMoH,SACFpH,EAAMoH,SAAS,QACfxR,EACJoK,EAEV,SAASmR,GAAmBnR,EAAO8M,GACT,EAAlB9M,EAAMoG,WAAiCpG,EAAM8H,UAC7CqJ,GAAmBnR,EAAM8H,UAAUW,QAASqE,GAEpB,IAAlB9M,EAAMoG,WACZpG,EAAM6S,UAAU7L,WAAa8F,EAAMgG,MAAM9S,EAAM6S,WAC/C7S,EAAM+S,WAAW/L,WAAa8F,EAAMgG,MAAM9S,EAAM+S,aAGhD/S,EAAMgH,WAAa8F,EAG3B,SAAS+D,GAAyBzJ,EAAU4L,GAAc,GACtD,IAAIC,EAAM,GACNC,EAAqB,EACzB,IAAK,IAAI5c,EAAI,EAAGA,EAAI8Q,EAASlR,OAAQI,IAAK,CACtC,MAAMgR,EAAQF,EAAS9Q,GAEnBgR,EAAMxQ,OAASqc,IACO,IAAlB7L,EAAMW,WACNiL,IACJD,EAAMA,EAAIlM,OAAO8J,GAAyBvJ,EAAMF,SAAU4L,MAGrDA,GAAe1L,EAAMxQ,OAASoQ,KACnC+L,EAAIld,KAAKuR,GAOjB,GAAI4L,EAAqB,EACrB,IAAK,IAAI5c,EAAI,EAAGA,EAAI2c,EAAI/c,OAAQI,IAC5B2c,EAAI3c,GAAG2R,WAAa,EAG5B,OAAOgL,EAGX,MAAML,GAAe5S,GAAUA,EAAMlJ,KAAKsc,cAShBC,OACAA,OAoL1B,SAASC,GAAQ9O,GACb,OAAOA,EAAK+O,aAAe/O,EAAKmL,KAEpC,SAAS6D,GAAQC,EAAS9D,GACtB,OAAI,eAAQ8D,GACDA,EAAQ9M,KAAM7E,GAAM0R,GAAQ1R,EAAG6N,IAEjC,eAAS8D,GACPA,EAAQC,MAAM,KAAKpR,QAAQqN,IAAS,IAEtC8D,EAAQE,MACNF,EAAQE,KAAKhE,GAK5B,SAASiE,GAAYjH,EAAM9V,GACvBgd,GAAsBlH,EAAM,IAAqB9V,GAErD,SAASid,GAAcnH,EAAM9V,GACzBgd,GAAsBlH,EAAM,KAAwB9V,GAExD,SAASgd,GAAsBlH,EAAM7V,EAAMD,EAAS+V,IAIhD,MAAMG,EAAcJ,EAAKoH,QACpBpH,EAAKoH,MAAQ,KAEV,IAAIC,EAAUnd,EACd,MAAOmd,EAAS,CACZ,GAAIA,EAAQC,cACR,OAEJD,EAAUA,EAAQ9T,OAEtByM,MAQR,GANAD,GAAW5V,EAAMiW,EAAalW,GAM1BA,EAAQ,CACR,IAAImd,EAAUnd,EAAOqJ,OACrB,MAAO8T,GAAWA,EAAQ9T,OAClB0S,GAAYoB,EAAQ9T,OAAOF,QAC3BkU,GAAsBnH,EAAajW,EAAMD,EAAQmd,GAErDA,EAAUA,EAAQ9T,QAI9B,SAASgU,GAAsBvH,EAAM7V,EAAMD,EAAQsd,GAG/C,MAAMC,EAAW1H,GAAW5V,EAAM6V,EAAMwH,GAAe,GACvDxG,GAAY,KACR,eAAOwG,EAAcrd,GAAOsd,IAC7Bvd,GAEP,SAASwd,GAAerU,GACpB,IAAIoG,EAAYpG,EAAMoG,UACN,IAAZA,IACAA,GAAa,KAED,IAAZA,IACAA,GAAa,KAEjBpG,EAAMoG,UAAYA,EAEtB,SAASkO,GAActU,GACnB,OAAyB,IAAlBA,EAAMoG,UAAiCpG,EAAM6S,UAAY7S,EAGpE,MAAMuU,GAAiBxd,GAAmB,MAAXA,EAAI,IAAsB,YAARA,EAC3Cyd,GAAsBpb,GAAU,eAAQA,GACxCA,EAAMjB,IAAImO,IACV,CAACA,GAAelN,IAChBqb,GAAgB,CAAC1d,EAAK2d,EAASxO,IAAQuD,GAAS9F,GAM3C6Q,GAAmBE,EAAQ/Q,IACnCuC,GACGyO,GAAuB,CAACC,EAAUjP,KACpC,MAAMO,EAAM0O,EAASC,KACrB,IAAK,MAAM9d,KAAO6d,EAAU,CACxB,GAAIL,GAAcxd,GACd,SACJ,MAAMqC,EAAQwb,EAAS7d,GACvB,GAAI,eAAWqC,GACXuM,EAAM5O,GAAO0d,GAAc1d,EAAKqC,EAAO8M,QAEtC,GAAa,MAAT9M,EAAe,CAChB,EAIJ,MAAMyL,EAAa2P,GAAmBpb,GACtCuM,EAAM5O,GAAO,IAAM8N,KAIzBiQ,GAAsB,CAACtV,EAAU4H,KAKnC,MAAMvC,EAAa2P,GAAmBpN,GACtC5H,EAASmG,MAAMqD,QAAU,IAAMnE,GAE7BkQ,GAAY,CAACvV,EAAU4H,KACzB,GAA+B,GAA3B5H,EAASQ,MAAMoG,UAAqC,CACpD,MAAMtP,EAAOsQ,EAAS4N,EAClBle,GACA0I,EAASmG,MAAQyB,EAEjB,eAAIA,EAAU,IAAKtQ,IAGnB6d,GAAqBvN,EAAW5H,EAASmG,MAAQ,SAIrDnG,EAASmG,MAAQ,GACbyB,GACA0N,GAAoBtV,EAAU4H,GAGtC,eAAI5H,EAASmG,MAAO8E,GAAmB,IAErCwK,GAAc,CAACzV,EAAU4H,KAC3B,MAAM,MAAEpH,EAAK,MAAE2F,GAAUnG,EACzB,IAAI0V,GAAoB,EACpBC,EAA2B,OAC/B,GAAsB,GAAlBnV,EAAMoG,UAAqC,CAC3C,MAAMtP,EAAOsQ,EAAS4N,EAClBle,EAOkB,IAATA,EAGLoe,GAAoB,EAKpB,eAAOvP,EAAOyB,IAIlB8N,GAAqB9N,EAASe,QAC9BwM,GAAqBvN,EAAUzB,IAEnCwP,EAA2B/N,OAEtBA,IAEL0N,GAAoBtV,EAAU4H,GAC9B+N,EAA2B,CAAEnM,QAAS,IAG1C,GAAIkM,EACA,IAAK,MAAMne,KAAO4O,EACT4O,GAAcxd,IAAUA,KAAOoe,UACzBxP,EAAM5O,IAsD7B,SAASqe,GAAoBpV,EAAOyH,EAAWjI,EAAUmQ,GACrD,MAAM0F,EAAWrV,EAAM8G,KACjBwO,EAAc7N,GAAaA,EAAUX,KAC3C,IAAK,IAAIxQ,EAAI,EAAGA,EAAI+e,EAASnf,OAAQI,IAAK,CACtC,MAAMif,EAAUF,EAAS/e,GACrBgf,IACAC,EAAQ7d,SAAW4d,EAAYhf,GAAG8C,OAEtC,MAAMuT,EAAO4I,EAAQC,IAAI7F,GACrBhD,GACAhN,GAA2BgN,EAAMnN,EAAU,EAAwB,CAC/DQ,EAAMwI,GACN+M,EACAvV,EACAyH,KAMhB,SAASgO,KACL,MAAO,CACHC,IAAK,KACLjV,OAAQ,CACJkV,YAAa,OACbC,aAAa,EACbC,iBAAkB,GAClBC,sBAAuB,GACvBC,gBAAiB,OACjBrV,kBAAc9K,EACdogB,iBAAapgB,GAEjBoP,OAAQ,GACRiR,WAAY,GACZC,WAAY,GACZC,SAAUle,OAAOka,OAAO,OAGhC,IAAI,GAAM,EACV,SAASiE,GAAatQ,EAAQuQ,GAC1B,OAAO,SAAmBC,EAAeC,EAAY,MAChC,MAAbA,GAAsB,eAASA,KAE/BA,EAAY,MAEhB,MAAMC,EAAUf,KACVgB,EAAmB,IAAIpf,IAC7B,IAAI2X,GAAY,EAChB,MAAM0G,EAAOc,EAAQd,IAAM,CACvBgB,KAAM,KACNC,WAAYL,EACZM,OAAQL,EACRM,WAAY,KACZC,SAAUN,EACVO,WACA,aACI,OAAOP,EAAQ/V,QAEnB,WAAW3F,GACH,GAIR,IAAIkc,KAAW9hB,GAgBX,OAfIuhB,EAAiBnf,IAAI0f,KAGhBA,GAAU,eAAWA,EAAOC,UACjCR,EAAiBlf,IAAIyf,GACrBA,EAAOC,QAAQvB,KAAQxgB,IAElB,eAAW8hB,KAChBP,EAAiBlf,IAAIyf,GACrBA,EAAOtB,KAAQxgB,KAMZwgB,GAEX,MAAMwB,GAkBF,OAhBSV,EAAQxR,OAAOnP,SAASqhB,KACzBV,EAAQxR,OAAOjP,KAAKmhB,IAGhBA,EAAMvT,OAASuT,EAAMtS,SACrB4R,EAAQ9R,OAAQ,IAWrBgR,GAEX,UAAU/F,EAAM7H,GAIZ,OAAKA,GAML0O,EAAQP,WAAWtG,GAAQ7H,EACpB4N,GANIc,EAAQP,WAAWtG,IAQlC,UAAUA,EAAMwH,GAIZ,OAAKA,GAMLX,EAAQN,WAAWvG,GAAQwH,EACpBzB,GANIc,EAAQN,WAAWvG,IAQlC,MAAMyH,EAAeC,GACjB,IAAKrI,EAAW,CACZ,MAAMhP,EAAQiH,GAAYqP,EAAeC,GAsBzC,OAnBAvW,EAAMQ,WAAagW,EAOfa,GAAahB,EACbA,EAAQrW,EAAOoX,GAGftR,EAAO9F,EAAOoX,GAElBpI,GAAY,EACZ0G,EAAImB,WAAaO,EACjBA,EAAcE,YAAc5B,EAIrB1V,EAAM8H,UAAUhK,QAS/B,UACQkR,GACAlJ,EAAO,KAAM4P,EAAImB,aASzB,QAAQ9f,EAAKqC,GAQT,OADAod,EAAQL,SAASpf,GAAOqC,EACjBsc,IAGf,OAAOA,GAwVf,SAAS6B,MAuBT,MAAMC,GAAkBlhB,KAAQA,EAAEQ,KAAK2gB,cAiIvC,MAAMC,GAAoB,CACtB/hB,UAAWsM,GAEX7L,cAAc,GAUlB,MAAM2Y,GAAyB5F,GAEzBwO,GAAS,CAACC,EAAQC,EAAWC,EAAgB9X,KAC/C,GAAI,eAAQ4X,GAER,YADAA,EAAO9f,QAAQ,CAACoG,EAAG5H,IAAMqhB,GAAOzZ,EAAG2Z,IAAc,eAAQA,GAAaA,EAAUvhB,GAAKuhB,GAAYC,EAAgB9X,IAGrH,IAAI5G,EAEAA,GADC4G,GAASwX,GAAexX,GACjB,KAGc,EAAlBA,EAAMoG,UACEpG,EAAM8H,UAAUiQ,SAAW/X,EAAM8H,UAAUhK,MAG3CkC,EAAMwI,GAGtB,MAAQlS,EAAGsT,EAAO1L,EAAGI,GAAQsZ,EAM7B,MAAMI,EAASH,GAAaA,EAAU3Z,EAChC+Z,EAAOrO,EAAMqO,OAAS,OAAarO,EAAMqO,KAAO,GAAMrO,EAAMqO,KAC5DhS,EAAa2D,EAAM3D,WAazB,GAXc,MAAV+R,GAAkBA,IAAW1Z,IACzB,eAAS0Z,IACTC,EAAKD,GAAU,KACX,eAAO/R,EAAY+R,KACnB/R,EAAW+R,GAAU,OAGpB9e,GAAM8e,KACXA,EAAO5e,MAAQ,OAGnB,eAASkF,GAAM,CACf,MAAM4Z,EAAQ,KACVD,EAAK3Z,GAAOlF,EACR,eAAO6M,EAAY3H,KACnB2H,EAAW3H,GAAOlF,IAMtBA,GACA8e,EAAM/hB,IAAM,EACZ4Y,GAAsBmJ,EAAOJ,IAG7BI,SAGH,GAAIhf,GAAMoF,GAAM,CACjB,MAAM4Z,EAAQ,KACV5Z,EAAIlF,MAAQA,GAEZA,GACA8e,EAAM/hB,IAAM,EACZ4Y,GAAsBmJ,EAAOJ,IAG7BI,SAGC,eAAW5Z,IAChBiB,GAAsBjB,EAAKsL,EAAO,GAAuB,CAACxQ,EAAO6e,KAqBzE,SAASE,GAAejjB,GACpB,OAAOkjB,GAAmBljB,GAS9B,SAASkjB,GAAmBljB,EAASmjB,GAG7Bd,KAEJ,MAAQe,OAAQC,EAAY5F,OAAQ6F,EAAYC,UAAWC,EAAeC,eAAgBC,EAAoBC,cAAeC,EAAmBC,WAAYC,EAAgBC,cAAeC,EAAmBC,QAASC,EAAaC,eAAgBC,EAAoBC,WAAYC,EAAgBC,YAAaC,EAAiBC,WAAYC,EAAiB,OAAMC,UAAWC,EAAeC,oBAAqBC,GAA4B9kB,EAG1a+kB,EAAQ,CAACC,EAAIC,EAAIC,EAAWC,EAAS,KAAMC,EAAkB,KAAMxC,EAAiB,KAAMyC,GAAQ,EAAO5S,GAAY,KAEnHuS,IAAO1I,GAAgB0I,EAAIC,KAC3BE,EAASG,EAAgBN,GACzBO,EAAQP,EAAII,EAAiBxC,GAAgB,GAC7CoC,EAAK,OAEa,IAAlBC,EAAGlS,YACHN,GAAY,EACZwS,EAAGO,gBAAkB,MAEzB,MAAM,KAAE5jB,EAAI,IAAEwH,EAAG,UAAE8H,GAAc+T,EACjC,OAAQrjB,GACJ,KAAK6jB,GACDC,EAAYV,EAAIC,EAAIC,EAAWC,GAC/B,MACJ,KAAKnT,GACD2T,EAAmBX,EAAIC,EAAIC,EAAWC,GACtC,MACJ,KAAKS,GACS,MAANZ,GACAa,EAAgBZ,EAAIC,EAAWC,EAAQE,GAK3C,MACJ,KAAKpH,GACD6H,EAAgBd,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,GACnF,MACJ,QACoB,EAAZvB,EACA6U,EAAef,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,GAEjE,EAAZvB,EACL8U,EAAiBhB,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,IAEnE,GAAZvB,GAGa,IAAZA,IAFNtP,EAAKqkB,QAAQjB,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,EAAWyT,GAU5F,MAAP9c,GAAegc,GACf3C,GAAOrZ,EAAK4b,GAAMA,EAAG5b,IAAKwZ,EAAgBqC,IAG5CS,EAAc,CAACV,EAAIC,EAAIC,EAAWC,KACpC,GAAU,MAANH,EACA3B,EAAY4B,EAAG3R,GAAKwQ,EAAemB,EAAG/S,UAAYgT,EAAWC,OAE5D,CACD,MAAM7R,EAAM2R,EAAG3R,GAAK0R,EAAG1R,GACnB2R,EAAG/S,WAAa8S,EAAG9S,UACnBgS,EAAY5Q,EAAI2R,EAAG/S,YAIzByT,EAAqB,CAACX,EAAIC,EAAIC,EAAWC,KACjC,MAANH,EACA3B,EAAY4B,EAAG3R,GAAK0Q,EAAkBiB,EAAG/S,UAAY,IAAMgT,EAAWC,GAItEF,EAAG3R,GAAK0R,EAAG1R,IAGbuS,EAAkB,CAACZ,EAAIC,EAAWC,EAAQE,MAC3CJ,EAAG3R,GAAI2R,EAAGE,QAAUL,EAAwBG,EAAG/S,SAAUgT,EAAWC,EAAQE,IAkB3Ec,EAAiB,EAAG7S,KAAI6R,UAAUD,EAAWX,KAC/C,IAAIjd,EACJ,MAAOgM,GAAMA,IAAO6R,EAChB7d,EAAOkd,EAAgBlR,GACvB+P,EAAW/P,EAAI4R,EAAWX,GAC1BjR,EAAKhM,EAET+b,EAAW8B,EAAQD,EAAWX,IAE5B6B,EAAmB,EAAG9S,KAAI6R,aAC5B,IAAI7d,EACJ,MAAOgM,GAAMA,IAAO6R,EAChB7d,EAAOkd,EAAgBlR,GACvBgQ,EAAWhQ,GACXA,EAAKhM,EAETgc,EAAW6B,IAETY,EAAiB,CAACf,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,KACvF4S,EAAQA,GAAqB,QAAZJ,EAAGrjB,KACV,MAANojB,EACAqB,EAAapB,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,GAG5E6T,EAAatB,EAAIC,EAAIG,EAAiBxC,EAAgByC,EAAO5S,IAG/D4T,EAAe,CAACvb,EAAOoa,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,KACpF,IAAIa,EACAiT,EACJ,MAAM,KAAE3kB,EAAI,MAAE6M,EAAK,UAAEyC,EAAS,WAAEY,EAAU,QAAE0U,EAAO,UAAEzT,EAAS,KAAEnB,GAAS9G,EACzE,GACIA,EAAMwI,SACY5S,IAAlBkkB,IACe,IAAf7R,EAKAO,EAAKxI,EAAMwI,GAAKsR,EAAc9Z,EAAMwI,QAEnC,CAcD,GAbAA,EAAKxI,EAAMwI,GAAKsQ,EAAkB9Y,EAAMlJ,KAAMyjB,EAAO5W,GAASA,EAAMgY,IAGpD,EAAZvV,EACAkT,EAAmB9Q,EAAIxI,EAAMoH,UAEZ,GAAZhB,GACLwV,EAAc5b,EAAMoH,SAAUoB,EAAI,KAAM8R,EAAiBxC,EAAgByC,GAAkB,kBAATzjB,EAA0B6Q,KAAe3H,EAAM0a,iBAEjI5T,GACAsO,GAAoBpV,EAAO,KAAMsa,EAAiB,WAGlD3W,EAAO,CACP,IAAK,MAAM5M,KAAO4M,EACT,eAAe5M,IAChB2hB,EAAclQ,EAAIzR,EAAK,KAAM4M,EAAM5M,GAAMwjB,EAAOva,EAAMoH,SAAUkT,EAAiBxC,EAAgB+D,IAGpGJ,EAAY9X,EAAMmY,qBACnBC,GAAgBN,EAAWnB,EAAiBta,GAIpD2Z,EAAWnR,EAAIkT,EAAS1b,EAAOsa,GAY/BxT,GACAsO,GAAoBpV,EAAO,KAAMsa,EAAiB,eAItD,MAAM0B,IAA4BlE,GAAmBA,IAAmBA,EAAezO,gBACnFrC,IACCA,EAAW8I,UACZkM,GACAhV,EAAWiV,YAAYzT,GAE3B+P,EAAW/P,EAAI4R,EAAWC,KACrBoB,EAAY9X,GAASA,EAAMuY,iBAC5BF,GACAlV,IACAiI,GAAsB,KAClB0M,GAAaM,GAAgBN,EAAWnB,EAAiBta,GACzDgc,GAA2BhV,EAAWmV,MAAM3T,GAC5C1B,GAAQsO,GAAoBpV,EAAO,KAAMsa,EAAiB,YAC3DxC,IAGL6B,EAAa,CAACnR,EAAIkT,EAAS1b,EAAOsa,KAIpC,GAHIoB,GACA9B,EAAepR,EAAIkT,GAEnBpB,EAAiB,CACjB,MAAM8B,EAAc9B,EAAgBxjB,KAAKulB,UAGrCD,GAAeA,IAAgBV,GAC/B9B,EAAepR,EAAI4T,EAAc,MAErC,IAAI3T,EAAU6R,EAAgB7R,QAC1B,EAIAzI,IAAUyI,GACVkR,EAAWnR,EAAI8R,EAAgBta,MAAM0b,QAASpB,EAAgBta,MAAOsa,EAAgBpa,UAI3F0b,EAAgB,CAACxU,EAAUgT,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,EAAW2U,EAAQ,KAC3G,IAAK,IAAIhmB,EAAIgmB,EAAOhmB,EAAI8Q,EAASlR,OAAQI,IAAK,CAC1C,MAAMgR,EAASF,EAAS9Q,GAAKqR,EACvB4U,GAAenV,EAAS9Q,IACxBgQ,GAAec,EAAS9Q,IAC9B2jB,EAAM,KAAM3S,EAAO8S,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,KAGhF6T,EAAe,CAACtB,EAAIC,EAAIG,EAAiBxC,EAAgByC,EAAO5S,KAClE,MAAMa,EAAM2R,EAAG3R,GAAK0R,EAAG1R,GACvB,IAAI,UAAEP,EAAS,gBAAEyS,EAAe,KAAE5T,GAASqT,EAG3ClS,GAA4B,GAAfiS,EAAGjS,UAChB,MAAMuU,EAAWtC,EAAGvW,OAAS,OACvB8Y,EAAWtC,EAAGxW,OAAS,OAC7B,IAAI8X,EAaJ,IAZKA,EAAYgB,EAASC,sBACtBX,GAAgBN,EAAWnB,EAAiBH,EAAID,GAEhDpT,GACAsO,GAAoB+E,EAAID,EAAII,EAAiB,gBAQ7CrS,EAAY,EAAG,CAKf,GAAgB,GAAZA,EAEA0U,EAAWnU,EAAI2R,EAAIqC,EAAUC,EAAUnC,EAAiBxC,EAAgByC,QAqBxE,GAhBgB,EAAZtS,GACIuU,EAASI,QAAUH,EAASG,OAC5BlE,EAAclQ,EAAI,QAAS,KAAMiU,EAASG,MAAOrC,GAKzC,EAAZtS,GACAyQ,EAAclQ,EAAI,QAASgU,EAASK,MAAOJ,EAASI,MAAOtC,GAQ/C,EAAZtS,EAA2B,CAE3B,MAAM+C,EAAgBmP,EAAG9R,aACzB,IAAK,IAAI/R,EAAI,EAAGA,EAAI0U,EAAc9U,OAAQI,IAAK,CAC3C,MAAMS,EAAMiU,EAAc1U,GACpBwmB,EAAON,EAASzlB,GAChByF,EAAOigB,EAAS1lB,IAClByF,IAASsgB,GACRlE,GAAsBA,EAAmBpQ,EAAIzR,KAC9C2hB,EAAclQ,EAAIzR,EAAK+lB,EAAMtgB,EAAM+d,EAAOL,EAAG9S,SAAUkT,EAAiBxC,EAAgB+D,IAOxF,EAAZ5T,GACIiS,EAAG9S,WAAa+S,EAAG/S,UACnBkS,EAAmB9Q,EAAI2R,EAAG/S,eAI5BO,GAAgC,MAAnB+S,GAEnBiC,EAAWnU,EAAI2R,EAAIqC,EAAUC,EAAUnC,EAAiBxC,EAAgByC,GAE5E,MAAMwC,EAAiBxC,GAAqB,kBAAZJ,EAAGrjB,KAC/B4jB,EACAsC,EAAmB9C,EAAGQ,gBAAiBA,EAAiBlS,EAAI8R,EAAiBxC,EAAgBiF,GAKvFpV,GAENsV,EAAc/C,EAAIC,EAAI3R,EAAI,KAAM8R,EAAiBxC,EAAgBiF,KAEhEtB,EAAYgB,EAASS,iBAAmBpW,IACzCiI,GAAsB,KAClB0M,GAAaM,GAAgBN,EAAWnB,EAAiBH,EAAID,GAC7DpT,GAAQsO,GAAoB+E,EAAID,EAAII,EAAiB,YACtDxC,IAILkF,EAAqB,CAACG,EAAaC,EAAaC,EAAmB/C,EAAiBxC,EAAgByC,KACtG,IAAK,IAAIjkB,EAAI,EAAGA,EAAI8mB,EAAYlnB,OAAQI,IAAK,CACzC,MAAMgnB,EAAWH,EAAY7mB,GACvBinB,EAAWH,EAAY9mB,GAEvB8jB,EAGNkD,EAASxmB,OAASqc,KAGb3B,GAAgB8L,EAAUC,IAEN,EAArBD,EAASlX,WACY,GAArBkX,EAASlX,UACPoT,EAAe8D,EAAS9U,IAGtB6U,EACRpD,EAAMqD,EAAUC,EAAUnD,EAAW,KAAME,EAAiBxC,EAAgByC,GAAO,KAGrFoC,EAAa,CAACnU,EAAIxI,EAAOwc,EAAUC,EAAUnC,EAAiBxC,EAAgByC,KAChF,GAAIiC,IAAaC,EAAU,CACvB,IAAK,MAAM1lB,KAAO0lB,EAAU,CAExB,GAAI,eAAe1lB,GACf,SACJ,MAAMyF,EAAOigB,EAAS1lB,GAChB+lB,EAAON,EAASzlB,IAClByF,IAASsgB,GACRlE,GAAsBA,EAAmBpQ,EAAIzR,KAC9C2hB,EAAclQ,EAAIzR,EAAK+lB,EAAMtgB,EAAM+d,EAAOva,EAAMoH,SAAUkT,EAAiBxC,EAAgB+D,GAGnG,GAAIW,IAAa,OACb,IAAK,MAAMzlB,KAAOylB,EACT,eAAezlB,IAAUA,KAAO0lB,GACjC/D,EAAclQ,EAAIzR,EAAKylB,EAASzlB,GAAM,KAAMwjB,EAAOva,EAAMoH,SAAUkT,EAAiBxC,EAAgB+D,KAMlHb,EAAkB,CAACd,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,KACxF,MAAM6V,EAAuBrD,EAAG3R,GAAK0R,EAAKA,EAAG1R,GAAKwQ,EAAe,IAC3DyE,EAAqBtD,EAAGE,OAASH,EAAKA,EAAGG,OAASrB,EAAe,IACvE,IAAI,UAAE/Q,EAAS,gBAAEyS,GAAoBP,EACjClS,EAAY,IACZN,GAAY,GAQN,MAANuS,GACA3B,EAAWiF,EAAqBpD,EAAWC,GAC3C9B,EAAWkF,EAAmBrD,EAAWC,GAIzCuB,EAAczB,EAAG/S,SAAUgT,EAAWqD,EAAmBnD,EAAiBxC,EAAgByC,EAAO5S,IAG7FM,EAAY,GACA,GAAZA,GACAyS,GAGAsC,EAAmB9C,EAAGQ,gBAAiBA,EAAiBN,EAAWE,EAAiBxC,EAAgByC,IAS1F,MAAVJ,EAAGpjB,KACEujB,GAAmBH,IAAOG,EAAgB7R,UAC3CiV,GAAuBxD,EAAIC,GAAI,IAQnC8C,EAAc/C,EAAIC,EAAIC,EAAWqD,EAAmBnD,EAAiBxC,EAAgByC,EAAO5S,IAIlGuT,EAAmB,CAAChB,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,KAC/E,MAANuS,EACmB,IAAfC,EAAG/T,UACHkU,EAAgBpU,IAAIyX,SAASxD,EAAIC,EAAWC,EAAQE,EAAO5S,GAG3DiW,EAAezD,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,GAIlFkW,EAAgB3D,EAAIC,EAAIxS,IAG1BiW,EAAiB,CAACE,EAAc1D,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,KAC7F,MAAMnI,EAAYse,EAAahW,UAAYiW,GAAwBD,EAAcxD,EAAiBxC,GAsBlG,GAbIlF,GAAYkL,KACZte,EAAS0G,IAAI8X,SAAW5C,GAM5B6C,GAAeze,GAMVA,EAAS0e,UAIV,GAHApG,GAAkBA,EAAeqG,YAAY3e,EAAU4e,IAGlDN,EAAatV,GAAI,CAClB,MAAM6V,EAAe7e,EAASiJ,QAAUxB,GAAYC,IACpD2T,EAAmB,KAAMwD,EAAajE,EAAWC,SAIzD+D,EAAkB5e,EAAUse,EAAc1D,EAAWC,EAAQvC,EAAgByC,EAAO5S,IAMlFkW,EAAkB,CAAC3D,EAAIC,EAAIxS,KAC7B,MAAMnI,EAAY2a,EAAGrS,UAAYoS,EAAGpS,UACpC,GAAIN,GAAsB0S,EAAIC,EAAIxS,GAAY,CAC1C,GACInI,EAAS0e,WACR1e,EAAS8e,cAUV,YAJAC,EAAyB/e,EAAU2a,EAAIxS,GAQvCnI,EAAShD,KAAO2d,EAGhB9X,GAAc7C,EAASmS,QAEvBnS,EAASmS,cAKbwI,EAAGrS,UAAYoS,EAAGpS,UAClBqS,EAAG3R,GAAK0R,EAAG1R,GACXhJ,EAASQ,MAAQma,GAGnBiE,EAAoB,CAAC5e,EAAUse,EAAc1D,EAAWC,EAAQvC,EAAgByC,EAAO5S,KAEzFnI,EAASmS,OAAS,GAAO,WACrB,GAAKnS,EAASwP,UA4DT,CAID,IAEIyM,GAFA,KAAEjf,EAAI,GAAEgiB,EAAE,EAAEC,EAAC,OAAEve,EAAM,MAAEF,GAAUR,EACjCkf,EAAaliB,EAEb,EAGAA,GACAA,EAAKgM,GAAKxI,EAAMwI,GAChB+V,EAAyB/e,EAAUhD,EAAMmL,IAGzCnL,EAAOwD,EAGPwe,GACA,eAAeA,IAGd/C,EAAYjf,EAAKmH,OAASnH,EAAKmH,MAAM+Y,sBACtCX,GAAgBN,EAAWvb,EAAQ1D,EAAMwD,GAM7C,MAAM2e,EAAWpZ,GAAoB/F,GACjC,EAGJ,MAAMof,EAAWpf,EAASiJ,QAC1BjJ,EAASiJ,QAAUkW,EAInB1E,EAAM2E,EAAUD,EAEhBnF,EAAeoF,EAASpW,IAExBgS,EAAgBoE,GAAWpf,EAAUsY,EAAgByC,GAIrD/d,EAAKgM,GAAKmW,EAASnW,GACA,OAAfkW,GAIAnW,GAAgB/I,EAAUmf,EAASnW,IAGnCiW,GACA1P,GAAsB0P,EAAG3G,IAGxB2D,EAAYjf,EAAKmH,OAASnH,EAAKmH,MAAMuZ,iBACtCnO,GAAsB,KAClBgN,GAAgBN,EAAWvb,EAAQ1D,EAAMwD,IAC1C8X,OAzHc,CACrB,IAAI2D,EACJ,MAAM,GAAEjT,EAAE,MAAE7E,GAAUma,GAChB,GAAEe,EAAE,EAAEC,EAAC,OAAE5e,GAAWV,EAEtBqf,GACA,eAAeA,IAGdpD,EAAY9X,GAASA,EAAMmY,qBAC5BC,GAAgBN,EAAWvb,EAAQ4d,GAMvC,MAAMrV,EAAWjJ,EAASiJ,QAAUlD,GAAoB/F,GACpD,EAGAgJ,GAAMuW,EAKNA,EAAYjB,EAAatV,GAAIC,EAASjJ,EAAUsY,IAShDmC,EAAM,KAAMxR,EAAS2R,EAAWC,EAAQ7a,EAAUsY,EAAgByC,GAIlEuD,EAAatV,GAAKC,EAAQD,IAG1BsW,GACA/P,GAAsB+P,EAAGhH,IAGxB2D,EAAY9X,GAASA,EAAMuY,iBAC5BnN,GAAsB,KAClBgN,GAAgBN,EAAWvb,EAAQ4d,IACpChG,GAKP,MAAM,EAAEzU,GAAM7D,EACV6D,GACyB,IAAzBya,EAAa1X,WACb2I,GAAsB1L,EAAGyU,GAE7BtY,EAASwP,WAAY,KAwEmD0I,KAE9E6G,EAA2B,CAAC/e,EAAUkI,EAAWC,KACnDD,EAAUI,UAAYtI,EACtB,MAAMoI,EAAYpI,EAASQ,MAAM2D,MACjCnE,EAASQ,MAAQ0H,EACjBlI,EAAShD,KAAO,KAChBmO,GAAYnL,EAAUkI,EAAU/D,MAAOiE,EAAWD,GAClDsN,GAAYzV,EAAUkI,EAAUN,UAGhCrE,QAAiBnN,EAAW4J,EAASmS,SAEnCsL,EAAgB,CAAC/C,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,GAAY,KAClG,MAAMqX,EAAK9E,GAAMA,EAAG9S,SACd6X,EAAgB/E,EAAKA,EAAG9T,UAAY,EACpC8Y,EAAK/E,EAAG/S,UACR,UAAEa,EAAS,UAAE7B,GAAc+T,EAEjC,GAAIlS,EAAY,EAAG,CACf,GAAgB,IAAZA,EAIA,YADAkX,EAAmBH,EAAIE,EAAI9E,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,GAGrF,GAAgB,IAAZM,EAGL,YADAmX,EAAqBJ,EAAIE,EAAI9E,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,GAKhF,EAAZvB,GAEoB,GAAhB6Y,GACApD,EAAgBmD,EAAI1E,EAAiBxC,GAErCoH,IAAOF,GACP1F,EAAmBc,EAAW8E,IAId,GAAhBD,EAEgB,GAAZ7Y,EAEA+Y,EAAmBH,EAAIE,EAAI9E,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,GAItFkU,EAAgBmD,EAAI1E,EAAiBxC,GAAgB,IAMrC,EAAhBmH,GACA3F,EAAmBc,EAAW,IAGlB,GAAZhU,GACAwV,EAAcsD,EAAI9E,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,KAKvFyX,EAAuB,CAACJ,EAAIE,EAAI9E,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,KAC7FqX,EAAKA,GAAM,OACXE,EAAKA,GAAM,OACX,MAAMG,EAAYL,EAAG9oB,OACfopB,EAAYJ,EAAGhpB,OACfqpB,EAAeC,KAAKC,IAAIJ,EAAWC,GACzC,IAAIhpB,EACJ,IAAKA,EAAI,EAAGA,EAAIipB,EAAcjpB,IAAK,CAC/B,MAAMopB,EAAaR,EAAG5oB,GAAKqR,EACrB4U,GAAe2C,EAAG5oB,IAClBgQ,GAAe4Y,EAAG5oB,IACxB2jB,EAAM+E,EAAG1oB,GAAIopB,EAAWtF,EAAW,KAAME,EAAiBxC,EAAgByC,EAAO5S,GAEjF0X,EAAYC,EAEZzD,EAAgBmD,EAAI1E,EAAiBxC,GAAgB,GAAM,EAAOyH,GAIlE3D,EAAcsD,EAAI9E,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAO5S,EAAW4X,IAI1FJ,EAAqB,CAACH,EAAIE,EAAI9E,EAAWuF,EAAcrF,EAAiBxC,EAAgByC,EAAO5S,KACjG,IAAIrR,EAAI,EACR,MAAMspB,EAAKV,EAAGhpB,OACd,IAAI2pB,EAAKb,EAAG9oB,OAAS,EACjB4pB,EAAKF,EAAK,EAId,MAAOtpB,GAAKupB,GAAMvpB,GAAKwpB,EAAI,CACvB,MAAM5F,EAAK8E,EAAG1oB,GACR6jB,EAAM+E,EAAG5oB,GAAKqR,EACd4U,GAAe2C,EAAG5oB,IAClBgQ,GAAe4Y,EAAG5oB,IACxB,IAAIkb,GAAgB0I,EAAIC,GAIpB,MAHAF,EAAMC,EAAIC,EAAIC,EAAW,KAAME,EAAiBxC,EAAgByC,EAAO5S,GAK3ErR,IAKJ,MAAOA,GAAKupB,GAAMvpB,GAAKwpB,EAAI,CACvB,MAAM5F,EAAK8E,EAAGa,GACR1F,EAAM+E,EAAGY,GAAMnY,EACf4U,GAAe2C,EAAGY,IAClBxZ,GAAe4Y,EAAGY,IACxB,IAAItO,GAAgB0I,EAAIC,GAIpB,MAHAF,EAAMC,EAAIC,EAAIC,EAAW,KAAME,EAAiBxC,EAAgByC,EAAO5S,GAK3EkY,IACAC,IASJ,GAAIxpB,EAAIupB,GACJ,GAAIvpB,GAAKwpB,EAAI,CACT,MAAMC,EAAUD,EAAK,EACfzF,EAAS0F,EAAUH,EAAKV,EAAGa,GAASvX,GAAKmX,EAC/C,MAAOrpB,GAAKwpB,EACR7F,EAAM,KAAOiF,EAAG5oB,GAAKqR,EACf4U,GAAe2C,EAAG5oB,IAClBgQ,GAAe4Y,EAAG5oB,IAAM8jB,EAAWC,EAAQC,EAAiBxC,EAAgByC,GAClFjkB,UAWP,GAAIA,EAAIwpB,EACT,MAAOxpB,GAAKupB,EACRpF,EAAQuE,EAAG1oB,GAAIgkB,EAAiBxC,GAAgB,GAChDxhB,QAOH,CACD,MAAM0pB,EAAK1pB,EACL2pB,EAAK3pB,EAEL4pB,EAAmB,IAAI/oB,IAC7B,IAAKb,EAAI2pB,EAAI3pB,GAAKwpB,EAAIxpB,IAAK,CACvB,MAAMopB,EAAaR,EAAG5oB,GAAKqR,EACrB4U,GAAe2C,EAAG5oB,IAClBgQ,GAAe4Y,EAAG5oB,IACH,MAAjBopB,EAAU3oB,KAIVmpB,EAAiBhpB,IAAIwoB,EAAU3oB,IAAKT,GAK5C,IAAI6pB,EACAC,EAAU,EACd,MAAMC,EAAcP,EAAKG,EAAK,EAC9B,IAAIK,GAAQ,EAERC,EAAmB,EAMvB,MAAMC,EAAwB,IAAIhnB,MAAM6mB,GACxC,IAAK/pB,EAAI,EAAGA,EAAI+pB,EAAa/pB,IACzBkqB,EAAsBlqB,GAAK,EAC/B,IAAKA,EAAI0pB,EAAI1pB,GAAKupB,EAAIvpB,IAAK,CACvB,MAAMmqB,EAAYzB,EAAG1oB,GACrB,GAAI8pB,GAAWC,EAAa,CAExB5F,EAAQgG,EAAWnG,EAAiBxC,GAAgB,GACpD,SAEJ,IAAI4I,EACJ,GAAqB,MAAjBD,EAAU1pB,IACV2pB,EAAWR,EAAiBjpB,IAAIwpB,EAAU1pB,UAI1C,IAAKopB,EAAIF,EAAIE,GAAKL,EAAIK,IAClB,GAAsC,IAAlCK,EAAsBL,EAAIF,IAC1BzO,GAAgBiP,EAAWvB,EAAGiB,IAAK,CACnCO,EAAWP,EACX,WAIKvqB,IAAb8qB,EACAjG,EAAQgG,EAAWnG,EAAiBxC,GAAgB,IAGpD0I,EAAsBE,EAAWT,GAAM3pB,EAAI,EACvCoqB,GAAYH,EACZA,EAAmBG,EAGnBJ,GAAQ,EAEZrG,EAAMwG,EAAWvB,EAAGwB,GAAWtG,EAAW,KAAME,EAAiBxC,EAAgByC,EAAO5S,GACxFyY,KAKR,MAAMO,EAA6BL,EAC7BM,GAAYJ,GACZ,OAGN,IAFAL,EAAIQ,EAA2BzqB,OAAS,EAEnCI,EAAI+pB,EAAc,EAAG/pB,GAAK,EAAGA,IAAK,CACnC,MAAMuqB,EAAYZ,EAAK3pB,EACjBopB,EAAYR,EAAG2B,GACfxG,EAASwG,EAAY,EAAIjB,EAAKV,EAAG2B,EAAY,GAAGrY,GAAKmX,EAC1B,IAA7Ba,EAAsBlqB,GAEtB2jB,EAAM,KAAMyF,EAAWtF,EAAWC,EAAQC,EAAiBxC,EAAgByC,GAEtE+F,IAIDH,EAAI,GAAK7pB,IAAMqqB,EAA2BR,GAC1CW,EAAKpB,EAAWtF,EAAWC,EAAQ,GAGnC8F,QAMdW,EAAO,CAAC9gB,EAAOoa,EAAWC,EAAQ0G,EAAUjJ,EAAiB,QAC/D,MAAM,GAAEtP,EAAE,KAAE1R,EAAI,WAAEkQ,EAAU,SAAEI,EAAQ,UAAEhB,GAAcpG,EACtD,GAAgB,EAAZoG,EAEA,YADA0a,EAAK9gB,EAAM8H,UAAUW,QAAS2R,EAAWC,EAAQ0G,GAGrD,GAAiB,IAAZ3a,EAED,YADApG,EAAMoJ,SAAS0X,KAAK1G,EAAWC,EAAQ0G,GAG3C,GAAgB,GAAZ3a,EAEA,YADAtP,EAAKgqB,KAAK9gB,EAAOoa,EAAWC,EAAQe,GAGxC,GAAItkB,IAASqc,GAAU,CACnBoF,EAAW/P,EAAI4R,EAAWC,GAC1B,IAAK,IAAI/jB,EAAI,EAAGA,EAAI8Q,EAASlR,OAAQI,IACjCwqB,EAAK1Z,EAAS9Q,GAAI8jB,EAAWC,EAAQ0G,GAGzC,YADAxI,EAAWvY,EAAMqa,OAAQD,EAAWC,GAGxC,GAAIvjB,IAASgkB,GAET,YADAO,EAAerb,EAAOoa,EAAWC,GAIrC,MAAM2G,EAA8B,IAAbD,GACP,EAAZ3a,GACAY,EACJ,GAAIga,EACA,GAAiB,IAAbD,EACA/Z,EAAWiV,YAAYzT,GACvB+P,EAAW/P,EAAI4R,EAAWC,GAC1BtL,GAAsB,IAAM/H,EAAWmV,MAAM3T,GAAKsP,OAEjD,CACD,MAAM,MAAEmJ,EAAK,WAAErP,EAAU,WAAEF,GAAe1K,EACpC2L,EAAS,IAAM4F,EAAW/P,EAAI4R,EAAWC,GACzC6G,EAAe,KACjBD,EAAMzY,EAAI,KACNmK,IACAjB,GAAcA,OAGlBE,EACAA,EAAWpJ,EAAImK,EAAQuO,GAGvBA,SAKR3I,EAAW/P,EAAI4R,EAAWC,IAG5BI,EAAU,CAACza,EAAOsa,EAAiBxC,EAAgBqJ,GAAW,EAAOxZ,GAAY,KACnF,MAAM,KAAE7Q,EAAI,MAAE6M,EAAK,IAAErF,EAAG,SAAE8I,EAAQ,gBAAEsT,EAAe,UAAEtU,EAAS,UAAE6B,EAAS,KAAEnB,GAAS9G,EAKpF,GAHW,MAAP1B,GACAqZ,GAAOrZ,EAAK,KAAMwZ,EAAgB,MAEtB,IAAZ1R,EAEA,YADAkU,EAAgBpU,IAAIkb,WAAWphB,GAGnC,MAAMqhB,EAA+B,EAAZjb,GAA+BU,EACxD,IAAI2U,EAIJ,IAHKA,EAAY9X,GAASA,EAAM2d,uBAC5BvF,GAAgBN,EAAWnB,EAAiBta,GAEhC,EAAZoG,EACAmb,EAAiBvhB,EAAM8H,UAAWgQ,EAAgBqJ,OAEjD,CACD,GAAiB,IAAZ/a,EAED,YADApG,EAAMoJ,SAASqR,QAAQ3C,EAAgBqJ,GAGvCE,GACAjM,GAAoBpV,EAAO,KAAMsa,EAAiB,iBAElDI,IAEC5jB,IAASqc,IACLlL,EAAY,GAAiB,GAAZA,GAEtB4T,EAAgBnB,EAAiBJ,EAAiBxC,GAAgB,GAAO,IAEnEhhB,IAASqc,KACF,IAAZlL,GACe,IAAZA,KACFN,GAAyB,GAAZvB,IACfyV,EAAgBzU,EAAUkT,EAAiBxC,GAG/B,GAAZ1R,IACC+a,IAAaK,GAAmBxhB,EAAM2D,SACvC3D,EAAMlJ,KAAK6b,OAAO3S,EAAOob,GAEzB+F,GACAxO,EAAO3S,KAGVyb,EAAY9X,GAASA,EAAM8d,mBAAqBJ,IACjDtS,GAAsB,KAClB0M,GAAaM,GAAgBN,EAAWnB,EAAiBta,GACzDqhB,GACIjM,GAAoBpV,EAAO,KAAMsa,EAAiB,cACvDxC,IAGLnF,EAAS3S,IACX,MAAM,KAAElJ,EAAI,GAAE0R,EAAE,OAAE6R,EAAM,WAAErT,GAAehH,EACzC,GAAIlJ,IAASqc,GAET,YADAuO,EAAelZ,EAAI6R,GAGvB,GAAIvjB,IAASgkB,GAET,YADAQ,EAAiBtb,GAGrB,MAAM2hB,EAAgB,KAClBnJ,EAAWhQ,GACPxB,IAAeA,EAAW8I,WAAa9I,EAAW0K,YAClD1K,EAAW0K,cAGnB,GAAsB,EAAlB1R,EAAMoG,WACNY,IACCA,EAAW8I,UAAW,CACvB,MAAM,MAAEmR,EAAK,WAAErP,GAAe5K,EACxBka,EAAe,IAAMD,EAAMzY,EAAImZ,GACjC/P,EACAA,EAAW5R,EAAMwI,GAAImZ,EAAeT,GAGpCA,SAIJS,KAGFD,EAAiB,CAACzhB,EAAK2hB,KAGzB,IAAIplB,EACJ,MAAOyD,IAAQ2hB,EACXplB,EAAOkd,EAAgBzZ,GACvBuY,EAAWvY,GACXA,EAAMzD,EAEVgc,EAAWoJ,IAETL,EAAmB,CAAC/hB,EAAUsY,EAAgBqJ,KAIhD,MAAM,IAAEU,EAAG,QAAEjqB,EAAO,OAAE+Z,EAAM,QAAElJ,EAAO,GAAEqZ,GAAOtiB,EAK9C,GAHIqiB,GACA,eAAeA,GAEfjqB,EACA,IAAK,IAAItB,EAAI,EAAGA,EAAIsB,EAAQ1B,OAAQI,IAChCf,EAAKqC,EAAQtB,IAKjBqb,IACApc,EAAKoc,GACL8I,EAAQhS,EAASjJ,EAAUsY,EAAgBqJ,IAG3CW,GACA/S,GAAsB+S,EAAIhK,GAE9B/I,GAAsB,KAClBvP,EAASyN,aAAc,GACxB6K,GAKCA,GACAA,EAAezO,gBACdyO,EAAe7K,aAChBzN,EAAS0e,WACR1e,EAAS8e,eACV9e,EAASuiB,aAAejK,EAAekK,YACvClK,EAAezhB,OACa,IAAxByhB,EAAezhB,MACfyhB,EAAepW,YAOrBma,EAAkB,CAACzU,EAAUkT,EAAiBxC,EAAgBqJ,GAAW,EAAOxZ,GAAY,EAAO2U,EAAQ,KAC7G,IAAK,IAAIhmB,EAAIgmB,EAAOhmB,EAAI8Q,EAASlR,OAAQI,IACrCmkB,EAAQrT,EAAS9Q,GAAIgkB,EAAiBxC,EAAgBqJ,EAAUxZ,IAGlE6S,EAAkBxa,GACE,EAAlBA,EAAMoG,UACCoU,EAAgBxa,EAAM8H,UAAUW,SAEpB,IAAlBzI,EAAMoG,UACApG,EAAMoJ,SAAS5M,OAEnBkd,EAAiB1Z,EAAMqa,QAAUra,EAAMwI,IAE5C1C,EAAS,CAAC9F,EAAOoa,KACN,MAATpa,EACIoa,EAAU6H,QACVxH,EAAQL,EAAU6H,OAAQ,KAAM,MAAM,GAI1ChI,EAAMG,EAAU6H,QAAU,KAAMjiB,EAAOoa,GAE3ClX,KACAkX,EAAU6H,OAASjiB,GAEjBob,EAAY,CACdtZ,EAAGmY,EACH6H,GAAIrH,EACJqE,EAAGgC,EACH5iB,EAAGyU,EACHuP,GAAItE,EACJuE,GAAIvG,EACJwG,GAAInF,EACJoF,IAAKrF,EACLxT,EAAGgR,EACH8H,EAAGptB,GAEP,IAAImhB,EACA0I,EAIJ,OAHI1G,KACChC,EAAS0I,GAAe1G,EAAmB+C,IAEzC,CACHtV,SACAuQ,UACAkM,UAAWnM,GAAatQ,EAAQuQ,IAGxC,SAAS0F,GAAgBpP,EAAMnN,EAAUQ,EAAOyH,EAAY,MACxD9H,GAA2BgN,EAAMnN,EAAU,EAAoB,CAC3DQ,EACAyH,IAcR,SAASiW,GAAuBxD,EAAIC,EAAIxhB,GAAU,GAC9C,MAAM6pB,EAAMtI,EAAG9S,SACTqb,EAAMtI,EAAG/S,SACf,GAAI,eAAQob,IAAQ,eAAQC,GACxB,IAAK,IAAInsB,EAAI,EAAGA,EAAIksB,EAAItsB,OAAQI,IAAK,CAGjC,MAAM0oB,EAAKwD,EAAIlsB,GACf,IAAI4oB,EAAKuD,EAAInsB,GACM,EAAf4oB,EAAG9Y,YAAgC8Y,EAAGxE,mBAClCwE,EAAGjX,WAAa,GAAsB,KAAjBiX,EAAGjX,aACxBiX,EAAKuD,EAAInsB,GAAKimB,GAAekG,EAAInsB,IACjC4oB,EAAG1W,GAAKwW,EAAGxW,IAEV7P,GACD+kB,GAAuBsB,EAAIE,KAW/C,SAAS0B,GAAYjnB,GACjB,MAAMmI,EAAInI,EAAIoK,QACR3J,EAAS,CAAC,GAChB,IAAI9D,EAAG6pB,EAAG1B,EAAG3jB,EAAG4nB,EAChB,MAAMjW,EAAM9S,EAAIzD,OAChB,IAAKI,EAAI,EAAGA,EAAImW,EAAKnW,IAAK,CACtB,MAAMqsB,EAAOhpB,EAAIrD,GACjB,GAAa,IAATqsB,EAAY,CAEZ,GADAxC,EAAI/lB,EAAOA,EAAOlE,OAAS,GACvByD,EAAIwmB,GAAKwC,EAAM,CACf7gB,EAAExL,GAAK6pB,EACP/lB,EAAOrE,KAAKO,GACZ,SAEJmoB,EAAI,EACJ3jB,EAAIV,EAAOlE,OAAS,EACpB,MAAOuoB,EAAI3jB,EACP4nB,GAAMjE,EAAI3jB,GAAK,EAAK,EAChBnB,EAAIS,EAAOsoB,IAAMC,EACjBlE,EAAIiE,EAAI,EAGR5nB,EAAI4nB,EAGRC,EAAOhpB,EAAIS,EAAOqkB,MACdA,EAAI,IACJ3c,EAAExL,GAAK8D,EAAOqkB,EAAI,IAEtBrkB,EAAOqkB,GAAKnoB,IAIxBmoB,EAAIrkB,EAAOlE,OACX4E,EAAIV,EAAOqkB,EAAI,GACf,MAAOA,KAAM,EACTrkB,EAAOqkB,GAAK3jB,EACZA,EAAIgH,EAAEhH,GAEV,OAAOV,EAGX,MAAMwoB,GAAc9rB,GAASA,EAAK+rB,aAC5BrB,GAAsB7d,GAAUA,IAAUA,EAAMmf,UAA+B,KAAnBnf,EAAMmf,UAkLxE,MAEMC,GAAa,aAKnB,SAASC,GAAiBrT,GACtB,OAAOsT,GAAaF,GAAYpT,IAASA,EAE7C,MAAMuT,GAAyBruB,SAoB/B,SAASouB,GAAansB,EAAM6Y,EAAMwT,GAAc,GAC5C,MAAM3jB,EAAW6F,IAA4BuH,GAC7C,GAAIpN,EAAU,CACV,MAAMgG,EAAYhG,EAAS1I,KAE3B,GAAIA,IAASisB,GAAY,CAGrB,GAAa,UAATpT,EACA,OAAOnK,EAEX,MAAM4d,EAAW5d,EAAU+N,aAAe/N,EAAUmK,KACpD,GAAIyT,IACCA,IAAazT,GACVyT,IAAa,eAASzT,IACtByT,IAAa,eAAW,eAASzT,KACrC,OAAOnK,EAGf,MAAMvM,EAGNyI,GAAQlC,EAAS1I,IAAS0O,EAAU1O,GAAO6Y,IAEvCjO,GAAQlC,EAASgB,WAAW1J,GAAO6Y,GAIvC,OAAO1W,GAOf,SAASyI,GAAQ2hB,EAAU1T,GACvB,OAAQ0T,IACHA,EAAS1T,IACN0T,EAAS,eAAS1T,KAClB0T,EAAS,eAAW,eAAS1T,MAGzC,MAAMwD,GAAWte,YAA8De,GACzE+kB,GAAO9lB,YAA0De,GACjEsR,GAAUrS,YAA6De,GACvEklB,GAASjmB,YAA4De,GAMrE0tB,GAAa,GACnB,IAAIC,GAAe,KAiBnB,SAAS5Z,GAAU6Z,GAAkB,GACjCF,GAAWvtB,KAAMwtB,GAAeC,EAAkB,KAAO,IAE7D,SAAS3Z,KACLyZ,GAAWttB,MACXutB,GAAeD,GAAWA,GAAWptB,OAAS,IAAM,KAMxD,IAAI,GAAc,EA2BlB,SAASutB,GAAY3sB,EAAM6M,EAAOyD,EAAUa,EAAWI,GACnD,MAAMrI,EAAQiH,GAAYnQ,EAAM6M,EAAOyD,EAAUa,EAAWI,GAAc,GAU1E,OARArI,EAAM0a,gBAAkB6I,IAAgB,OAExC1Z,KAGI,GAAc,GAAK0Z,IACnBA,GAAaxtB,KAAKiK,GAEfA,EAEX,SAASuH,GAAQnO,GACb,QAAOA,IAA8B,IAAtBA,EAAMsqB,YAEzB,SAASlS,GAAgB0I,EAAIC,GAOzB,OAAOD,EAAGpjB,OAASqjB,EAAGrjB,MAAQojB,EAAGnjB,MAAQojB,EAAGpjB,IAYhD,MAKM0T,GAAoB,cACpBkZ,GAAe,EAAG5sB,SAAiB,MAAPA,EAAcA,EAAM,KAChD6sB,GAAe,EAAGtlB,SACL,MAAPA,EACF,eAASA,IAAQpF,GAAMoF,IAAQ,eAAWA,GACtC,CAAEhI,EAAG+O,GAA0BnH,EAAGI,GAClCA,EACJ,KAEJ2I,GAEA4c,GACN,SAASA,GAAa/sB,EAAM6M,EAAQ,KAAMyD,EAAW,KAAMa,EAAY,EAAGI,EAAe,KAAMyb,GAAc,GAOzG,GANKhtB,GAAQA,IAASosB,KAIlBpsB,EAAOoQ,IAEPK,GAAQzQ,GAAO,CAIf,MAAMitB,EAASld,GAAW/P,EAAM6M,GAAO,GAIvC,OAHIyD,GACA4c,GAAkBD,EAAQ3c,GAEvB2c,EAOX,GAJIE,GAAiBntB,KACjBA,EAAOA,EAAKotB,WAGZvgB,EAAO,EAEH1F,GAAQ0F,IAAU8G,MAAqB9G,KACvCA,EAAQ,eAAO,GAAIA,IAEvB,IAAMiZ,MAAOuH,EAAK,MAAEtH,GAAUlZ,EAC1BwgB,IAAU,eAASA,KACnBxgB,EAAMiZ,MAAQ,eAAeuH,IAE7B,eAAStH,KAGL5e,GAAQ4e,KAAW,eAAQA,KAC3BA,EAAQ,eAAO,GAAIA,IAEvBlZ,EAAMkZ,MAAQ,eAAeA,IAIrC,MAAMzW,EAAY,eAAStP,GACrB,EACC4R,GAAW5R,GACR,IACA8rB,GAAW9rB,GACP,GACA,eAASA,GACL,EACA,eAAWA,GACP,EACA,EAQtB,MAAMkJ,EAAQ,CACV0jB,aAAa,EACb,CAAC,aAAwB,EACzB5sB,OACA6M,QACA5M,IAAK4M,GAASggB,GAAahgB,GAC3BrF,IAAKqF,GAASigB,GAAajgB,GAC3B+X,QAAS3R,GACT3C,SAAU,KACVU,UAAW,KACXsB,SAAU,KACVyJ,UAAW,KACXE,WAAY,KACZjM,KAAM,KACNE,WAAY,KACZwB,GAAI,KACJ6R,OAAQ,KACRxjB,OAAQ,KACRutB,aAAc,KACdC,YAAa,EACbje,YACA6B,YACAI,eACAqS,gBAAiB,KACjBla,WAAY,MAQhB,GAFAwjB,GAAkBhkB,EAAOoH,GAER,IAAZhB,EAAgC,CACjC,MAAM,QAAEyC,EAAO,SAAEC,GAAaF,GAA0B5I,GACxDA,EAAM6S,UAAYhK,EAClB7I,EAAM+S,WAAajK,EAiBvB,OAfI,GAAc,IAEbgb,GAEDP,KAKCtb,EAAY,GAAiB,EAAZ7B,IAGJ,KAAd6B,GACAsb,GAAaxtB,KAAKiK,GAEfA,EAEX,SAAS6G,GAAW7G,EAAOskB,EAAYC,GAAW,GAG9C,MAAM,MAAE5gB,EAAK,IAAErF,EAAG,UAAE2J,GAAcjI,EAC5BwkB,EAAcF,EAAaG,GAAW9gB,GAAS,GAAI2gB,GAAc3gB,EACvE,MAAO,CACH+f,aAAa,EACb,CAAC,aAAwB,EACzB5sB,KAAMkJ,EAAMlJ,KACZ6M,MAAO6gB,EACPztB,IAAKytB,GAAeb,GAAaa,GACjClmB,IAAKgmB,GAAcA,EAAWhmB,IAItBimB,GAAYjmB,EACN,eAAQA,GACJA,EAAIyI,OAAO6c,GAAaU,IACxB,CAAChmB,EAAKslB,GAAaU,IACvBV,GAAaU,GACrBhmB,EACNod,QAAS1b,EAAM0b,QACftU,SAAUpH,EAAMoH,SAChBvQ,OAAQmJ,EAAMnJ,OACdutB,aAAcpkB,EAAMokB,aACpBC,YAAarkB,EAAMqkB,YACnBje,UAAWpG,EAAMoG,UAKjB6B,UAAWqc,GAActkB,EAAMlJ,OAASqc,IACnB,IAAflL,EACI,GACY,GAAZA,EACJA,EACNI,aAAcrI,EAAMqI,aACpBqS,gBAAiB1a,EAAM0a,gBACvBla,WAAYR,EAAMQ,WAClBsG,KAAM9G,EAAM8G,KACZE,WAAYhH,EAAMgH,WAKlBc,UAAW9H,EAAM8H,UACjBsB,SAAUpJ,EAAMoJ,SAChByJ,UAAW7S,EAAM6S,WAAahM,GAAW7G,EAAM6S,WAC/CE,WAAY/S,EAAM+S,YAAclM,GAAW7G,EAAM+S,YACjDvK,GAAIxI,EAAMwI,GACV6R,OAAQra,EAAMqa,QAMtB,SAASqK,GAAgBC,EAAO,IAAKC,EAAO,GACxC,OAAO3d,GAAY0T,GAAM,KAAMgK,EAAMC,GAezC,SAASC,GAAmBF,EAAO,GAGnCG,GAAU,GACN,OAAOA,GACAnb,KAAa8Z,GAAYvc,GAAS,KAAMyd,IACzC1d,GAAYC,GAAS,KAAMyd,GAErC,SAASre,GAAegB,GACpB,OAAa,MAATA,GAAkC,mBAAVA,EAEjBL,GAAYC,IAEd,eAAQI,GAENL,GAAYkM,GAAU,KAAM7L,GAEb,kBAAVA,EAGQ,OAAbA,EAAMkB,GAAclB,EAAQT,GAAWS,GAIvCL,GAAY0T,GAAM,KAAMzO,OAAO5E,IAI9C,SAASiV,GAAejV,GACpB,OAAoB,OAAbA,EAAMkB,GAAclB,EAAQT,GAAWS,GAElD,SAAS0c,GAAkBhkB,EAAOoH,GAC9B,IAAItQ,EAAO,EACX,MAAM,UAAEsP,GAAcpG,EACtB,GAAgB,MAAZoH,EACAA,EAAW,UAEV,GAAI,eAAQA,GACbtQ,EAAO,QAEN,GAAwB,kBAAbsQ,EAAuB,CACnC,GAAgB,EAAZhB,GAA2C,GAAZA,EAA+B,CAE9D,MAAM2e,EAAO3d,EAAS4B,QAOtB,YANI+b,IAEAA,EAAKjb,IAAMP,GAAyB,GACpCya,GAAkBhkB,EAAO+kB,KACzBA,EAAKjb,IAAMP,IAA0B,KAIxC,CACDzS,EAAO,GACP,MAAMkuB,EAAW5d,EAAS4N,EACrBgQ,GAAcva,MAAqBrD,EAGlB,IAAb4d,GAAkC3f,KAGQ,KAA3CA,GAAyBrF,MAAMiI,WAC/Bb,EAAS4N,EAAI,EACbhV,EAAMiI,WAAa,MAGnBb,EAAS4N,EAAI,GAVjB5N,EAASyN,KAAOxP,SAenB,eAAW+B,IAChBA,EAAW,CAAE4B,QAAS5B,EAAUyN,KAAMxP,IACtCvO,EAAO,KAGPsQ,EAAW8E,OAAO9E,GAEF,GAAZhB,GACAtP,EAAO,GACPsQ,EAAW,CAACsd,GAAgBtd,KAG5BtQ,EAAO,GAGfkJ,EAAMoH,SAAWA,EACjBpH,EAAMoG,WAAatP,EAEvB,SAAS2tB,MAAc/qB,GACnB,MAAMuZ,EAAM,eAAO,GAAIvZ,EAAK,IAC5B,IAAK,IAAIpD,EAAI,EAAGA,EAAIoD,EAAKxD,OAAQI,IAAK,CAClC,MAAM2uB,EAAUvrB,EAAKpD,GACrB,IAAK,MAAMS,KAAOkuB,EACd,GAAY,UAARluB,EACIkc,EAAI2J,QAAUqI,EAAQrI,QACtB3J,EAAI2J,MAAQ,eAAe,CAAC3J,EAAI2J,MAAOqI,EAAQrI,cAGlD,GAAY,UAAR7lB,EACLkc,EAAI4J,MAAQ,eAAe,CAAC5J,EAAI4J,MAAOoI,EAAQpI,aAE9C,GAAI,eAAK9lB,GAAM,CAChB,MAAMmuB,EAAWjS,EAAIlc,GACfouB,EAAWF,EAAQluB,GACrBmuB,IAAaC,IACblS,EAAIlc,GAAOmuB,EACL,GAAGne,OAAOme,EAAUD,EAAQluB,IAC5BouB,OAGG,KAARpuB,IACLkc,EAAIlc,GAAOkuB,EAAQluB,IAI/B,OAAOkc,EAGX,SAASmS,GAAQruB,EAAKqC,GAClB,GAAKwT,GAKA,CACD,IAAIuJ,EAAWvJ,GAAgBuJ,SAM/B,MAAMkP,EAAiBzY,GAAgB1M,QAAU0M,GAAgB1M,OAAOiW,SACpEkP,IAAmBlP,IACnBA,EAAWvJ,GAAgBuJ,SAAWle,OAAOka,OAAOkT,IAGxDlP,EAASpf,GAAOqC,OAhBZ,EAmBZ,SAASksB,GAAOvuB,EAAKuU,EAAcia,GAAwB,GAGvD,MAAM/lB,EAAWoN,IAAmBvH,GACpC,GAAI7F,EAAU,CAIV,MAAM2W,EAA8B,MAAnB3W,EAASU,OACpBV,EAASQ,MAAMQ,YAAchB,EAASQ,MAAMQ,WAAW2V,SACvD3W,EAASU,OAAOiW,SACtB,GAAIA,GAAYpf,KAAOof,EAEnB,OAAOA,EAASpf,GAEf,GAAIqT,UAAUlU,OAAS,EACxB,OAAOqvB,GAAyB,eAAWja,GACrCA,IACAA,OAML,EAgBb,IAAIka,IAAmB,EACvB,SAASC,GAAajmB,EAAUtK,EAASwwB,EAAe,GAAIC,EAAgB,GAAIC,EAAkB,GAAInhB,GAAU,GAC5G,MAAM,OAENO,EAAQC,QAAS4gB,EAEjB7f,KAAM8f,EAAaC,SAAUC,EAAe,QAAEC,EAASjY,MAAOkY,EAAcd,QAASe,EAAgBb,OAAQc,EAAa,WAE1HnQ,EAAU,WAAEC,EAAU,YAEtBmQ,EAAW,QAAEC,EAAO,aAAEC,EAAY,QAAEC,EAAO,UAAEC,EAAS,YAAEC,EAAW,cAAEC,EAAa,cAAEC,EAAa,UAAEC,EAAS,UAAEC,EAAS,OAAEhhB,EAAM,cAAEihB,EAAa,gBAAEC,EAAe,cAAEC,EAAa,OAE9KC,GAAWhyB,EACLia,EAAa3P,EAAS1B,MACtBoI,EAAM1G,EAAS0G,IACfihB,EAAe3nB,EAASgB,WAAWwE,OACrCP,GAAWqB,GAAUtG,EAASsG,SAAW,SACzCtG,EAASsG,OAASA,GAGjBrB,IACD+gB,IAAmB,EACnB4B,GAAa,eAAgB,KAA0BlyB,EAASsK,EAAU2nB,GAC1E3B,IAAmB,EAEnB6B,GAAY7nB,EAAU2nB,EAAczB,EAAcC,EAAeC,IAGjEC,GACAJ,GAAajmB,EAAUqmB,EAAgBH,EAAcC,EAAeC,GAAiB,GAGrF5gB,GACAqiB,GAAY7nB,EAAUwF,EAAQ0gB,EAAcC,EAAeC,GAkB/D,GAAIQ,EACA,GAAI,eAAQA,GACR,IAAK,IAAI9vB,EAAI,EAAGA,EAAI8vB,EAAclwB,OAAQI,IAAK,CAC3C,MAAMS,EAAMqvB,EAAc9vB,GAC1B4P,EAAInP,GAAOuuB,GAAOvuB,QAOtB,IAAK,MAAMA,KAAOqvB,EAAe,CAC7B,MAAMhb,EAAMgb,EAAcrvB,GACtB,eAASqU,GACTlF,EAAInP,GAAOuuB,GAAOla,EAAIkc,MAAQvwB,EAAKqU,EAAIpC,SAAS,GAGhD9C,EAAInP,GAAOuuB,GAAOla,GAQlC,GAAI6a,EACA,IAAK,MAAMlvB,KAAOkvB,EAAS,CACvB,MAAMsB,EAAgBtB,EAAQlvB,GAC1B,eAAWwwB,KACXrhB,EAAInP,GAAOwwB,EAAcvlB,KAAKmN,IAqC1C,GA1BK1K,EAuBIqhB,GACLJ,EAAa3vB,KAAK+vB,IAvBdJ,EAAaxvB,QACbwvB,EAAa5tB,QAAQ0vB,GAAUC,GAAYjoB,EAAUgoB,EAAQrY,IAE7D2W,GACA2B,GAAYjoB,EAAUsmB,EAAa3W,IAqBvC6W,EACA,IAAK,MAAMjvB,KAAOivB,EAAiB,CAC/B,MAAM5a,EAAM4a,EAAgBjvB,GACtBE,EAAM,eAAWmU,GACjBA,EAAIpJ,KAAKmN,EAAYA,GACrB,eAAW/D,EAAInU,KACXmU,EAAInU,IAAI+K,KAAKmN,EAAYA,GACzB,OACN,EAGJ,MAAMjY,GAAO,eAAWkU,IAAQ,eAAWA,EAAIlU,KACzCkU,EAAIlU,IAAI8K,KAAKmN,GAKT,OACJuT,EAAI,GAAS,CACfzrB,MACAC,QAEJe,OAAOyvB,eAAexhB,EAAKnP,EAAK,CAC5B4wB,YAAY,EACZC,cAAc,EACd3wB,IAAK,IAAMyrB,EAAEtpB,MACblC,IAAK4D,GAAM4nB,EAAEtpB,MAAQ0B,IAsFjC,GA/EIorB,GACAP,EAAc5vB,KAAKmwB,IAElBzhB,GAAWkhB,EAAczvB,QAC1ByvB,EAAc7tB,QAAQouB,IAClB,IAAK,MAAMnvB,KAAOmvB,EACd2B,GAAc3B,EAAanvB,GAAMmP,EAAKiJ,EAAYpY,KAI1DovB,GACAP,EAAgB7vB,KAAKowB,IAEpB1hB,GAAWmhB,EAAgB1vB,QAC5B0vB,EAAgB9tB,QAAQquB,IACpB,MAAMhQ,EAAW,eAAWgQ,GACtBA,EAAe9qB,KAAK8T,GACpBgX,EACNntB,QAAQsB,QAAQ6b,GAAUre,QAAQf,IAC9BquB,GAAQruB,EAAKof,EAASpf,QAO9B0N,IACIwR,GACA,eAAOzW,EAASyW,aACXzW,EAASyW,WAAa,eAAO,GAAIzW,EAAS1I,KAAKmf,aAAcA,GAElEC,GACA,eAAO1W,EAAS0W,aACX1W,EAAS0W,WAAa,eAAO,GAAI1W,EAAS1I,KAAKof,aAAcA,IAIrEzR,GACD2iB,GAAa,UAAW,IAAmBlyB,EAASsK,EAAU2nB,GAE9Dd,GACA/Y,GAAc+Y,EAAYrkB,KAAKmN,IAE/BmX,GACA/Y,GAAU+Y,EAAQtkB,KAAKmN,IAEvBoX,GACA/Y,GAAe+Y,EAAavkB,KAAKmN,IAEjCqX,GACA/Y,GAAU+Y,EAAQxkB,KAAKmN,IAEvBsX,GACA7S,GAAY6S,EAAUzkB,KAAKmN,IAE3BuX,GACA5S,GAAc4S,EAAY1kB,KAAKmN,IAE/B8X,GACAnZ,GAAgBmZ,EAAcjlB,KAAKmN,IAEnC4X,GACAlZ,GAAgBkZ,EAAc/kB,KAAKmN,IAEnC6X,GACApZ,GAAkBoZ,EAAgBhlB,KAAKmN,IAKvCyX,GACAlZ,GAAgBkZ,EAAc5kB,KAAKmN,IAKnC2X,GACAnZ,GAAYmZ,EAAU9kB,KAAKmN,IAE3B,eAAQ+X,GACR,GAAKziB,EAWI,OAVL,GAAIyiB,EAAOhxB,OAAQ,CACf,MAAM6hB,EAAUvY,EAASuY,UAAYvY,EAASuY,QAAUvZ,GAAU,KAClE0oB,EAAOpvB,QAAQf,IACXghB,EAAQhhB,GAAO+H,GAAMqQ,EAAYpY,UAG/ByI,EAASuY,UACfvY,EAASuY,QAAU,QAQnC,SAASqP,GAAazX,EAAM7Y,EAAM5B,EAASsK,EAAU2nB,GACjDW,GAAmBnY,EAAM7Y,EAAMqwB,EAAc3nB,GAC7C,MAAQyF,QAAS8iB,EAAI,OAAE/iB,GAAW9P,EAC9B6yB,GACAC,GAAoBrY,EAAM7Y,EAAMixB,EAAMvoB,GAEtCwF,GACA8iB,GAAmBnY,EAAM7Y,EAAMkO,EAAQxF,GAE3C,MAAMyoB,EAAW/yB,EAAQya,GACrBsY,GACAtoB,GAA2BsoB,EAASjmB,KAAKxC,EAAS1B,OAAQ0B,EAAU1I,GAG5E,SAASkxB,GAAoBrY,EAAM7Y,EAAMixB,EAAMvoB,GACvCuoB,EAAK9iB,SACL+iB,GAAoBrY,EAAM7Y,EAAMixB,EAAK9iB,QAASzF,GAElD,MAAM0oB,EAAWH,EAAKpY,GAClBuY,GACAvoB,GAA2BuoB,EAASlmB,KAAKxC,EAAS1B,OAAQ0B,EAAU1I,GAG5E,SAASgxB,GAAmBnY,EAAM7Y,EAAMkO,EAAQxF,GAC5C,IAAK,IAAIlJ,EAAI,EAAGA,EAAI0O,EAAO9O,OAAQI,IAAK,CACpC,MAAM6xB,EAAgBnjB,EAAO1O,GAAG0O,OAC5BmjB,GACAL,GAAmBnY,EAAM7Y,EAAMqxB,EAAe3oB,GAElD,MAAMxK,EAAKgQ,EAAO1O,GAAGqZ,GACjB3a,GACA2K,GAA2B3K,EAAGgN,KAAKxC,EAAS1B,OAAQ0B,EAAU1I,IAI1E,SAASuwB,GAAY7nB,EAAUwF,EAAQ0gB,EAAcC,EAAeC,GAChE,IAAK,IAAItvB,EAAI,EAAGA,EAAI0O,EAAO9O,OAAQI,IAC/BmvB,GAAajmB,EAAUwF,EAAO1O,GAAIovB,EAAcC,EAAeC,GAAiB,GAGxF,SAAS6B,GAAYjoB,EAAUgoB,EAAQrY,GAKnC,MAAMnJ,EAAOwhB,EAAOnsB,KAAK8T,EAAYA,GAMhC,eAASnJ,KAGLxG,EAASwG,OAAS,OACvBxG,EAASwG,KAAO1M,GAAS0M,GAIzB,eAAOxG,EAASwG,KAAMA,IAG9B,SAAS6hB,GAAc1yB,EAAK+Q,EAAKiJ,EAAYpY,GACzC,MAAMkI,EAASlI,EAAIlB,SAAS,KACtBuyB,GAAiBjZ,EAAYpY,GAC7B,IAAMoY,EAAWpY,GACvB,GAAI,eAAS5B,GAAM,CACf,MAAMiP,EAAU8B,EAAI/Q,GAChB,eAAWiP,IACX4J,GAAM/O,EAAQmF,QAMjB,GAAI,eAAWjP,GAChB6Y,GAAM/O,EAAQ9J,EAAI6M,KAAKmN,SAEtB,GAAI,eAASha,GACd,GAAI,eAAQA,GACRA,EAAI2C,QAAQoG,GAAK2pB,GAAc3pB,EAAGgI,EAAKiJ,EAAYpY,QAElD,CACD,MAAMqN,EAAU,eAAWjP,EAAIiP,SACzBjP,EAAIiP,QAAQpC,KAAKmN,GACjBjJ,EAAI/Q,EAAIiP,SACV,eAAWA,IACX4J,GAAM/O,EAAQmF,EAASjP,QAO1B,EAIb,SAASizB,GAAiBliB,EAAKmiB,GAC3B,MAAMC,EAAWD,EAAK3U,MAAM,KAC5B,MAAO,KACH,IAAIzT,EAAMiG,EACV,IAAK,IAAI5P,EAAI,EAAGA,EAAIgyB,EAASpyB,QAAU+J,EAAK3J,IACxC2J,EAAMA,EAAIqoB,EAAShyB,IAEvB,OAAO2J,GAGf,SAASsoB,GAAqB/oB,GAC1B,MAAMrK,EAAMqK,EAAS1I,MACf,SAAE0xB,EAAQ,OAAExjB,EAAQC,QAAS4gB,GAAmB1wB,EACtD,GAAIqzB,EACA,OAAOA,EACX,MAAMrB,EAAe3nB,EAASgB,WAAWwE,OACzC,IAAKmiB,EAAajxB,SAAW8O,IAAW6gB,EACpC,OAAO1wB,EACX,MAAMD,EAAU,GAGhB,OAFAiyB,EAAarvB,QAAQgnB,GAAK2J,GAAavzB,EAAS4pB,EAAGtf,IACnDipB,GAAavzB,EAASC,EAAKqK,GACnBrK,EAAIqzB,SAAWtzB,EAE3B,SAASuzB,GAAaC,EAAIpB,EAAM9nB,GAC5B,MAAMmpB,EAASnpB,EAASgB,WAAWC,OAAOqV,uBACpC,OAAE9Q,EAAQC,QAAS4gB,GAAmByB,EAC5CzB,GAAkB4C,GAAaC,EAAI7C,EAAgBrmB,GACnDwF,GACIA,EAAOlN,QAASgnB,GAAM2J,GAAaC,EAAI5J,EAAGtf,IAC9C,IAAK,MAAMzI,KAAOuwB,EACVqB,GAAU,eAAOA,EAAQ5xB,GACzB2xB,EAAG3xB,GAAO4xB,EAAO5xB,GAAK2xB,EAAG3xB,GAAMuwB,EAAKvwB,GAAMyI,EAAS1B,MAAO/G,GAG1D2xB,EAAG3xB,GAAOuwB,EAAKvwB,GAU3B,MAAM6xB,GAAqBtyB,GAAMA,IAAMA,EAAEwH,MAAQxH,EAAEwH,MAAQ8qB,GAAkBtyB,EAAE4J,SACzE2oB,GAAsB,eAAO5wB,OAAOka,OAAO,MAAO,CACpD2W,EAAGxyB,GAAKA,EACRyyB,IAAKzyB,GAAKA,EAAE0J,MAAMwI,GAClBwgB,MAAO1yB,GAAKA,EAAE0P,KACdijB,OAAQ3yB,GAA2EA,EAAEqN,MACrFulB,OAAQ5yB,GAA2EA,EAAEsP,MACrFujB,OAAQ7yB,GAA2EA,EAAEqP,MACrFyjB,MAAO9yB,GAA0EA,EAAE2hB,KACnFoR,QAAS/yB,GAAKsyB,GAAkBtyB,EAAE4J,QAClCopB,MAAOhzB,GAAKA,EAAEkQ,MAAQlQ,EAAEkQ,KAAK1I,MAC7ByrB,MAAOjzB,GAAKA,EAAEuP,KACd2jB,SAAUlzB,GAA4BiyB,GAAqBjyB,GAC3DmzB,aAAcnzB,GAAK,IAAM2L,GAAS3L,EAAEqb,QACpC+X,UAAWpzB,GAAKuL,GAASG,KAAK1L,EAAEwH,OAChC6rB,OAAQrzB,GAA4B4Y,GAAclN,KAAK1L,KAErDszB,GAA8B,CAChC,KAAM5U,EAAGxV,GAAYzI,GACjB,MAAM,IAAEmP,EAAG,WAAED,EAAU,KAAED,EAAI,MAAErC,EAAK,YAAEkmB,EAAW,KAAE/yB,EAAI,WAAE0J,GAAehB,EAExE,GAAY,aAARzI,EACA,OAAO,EAYX,IAAI+yB,EACJ,GAAe,MAAX/yB,EAAI,GAAY,CAChB,MAAMyS,EAAIqgB,EAAY9yB,GACtB,QAAUnB,IAAN4T,EACA,OAAQA,GACJ,KAAK,EACD,OAAOvD,EAAWlP,GACtB,KAAK,EACD,OAAOiP,EAAKjP,GAChB,KAAK,EACD,OAAOmP,EAAInP,GACf,KAAK,EACD,OAAO4M,EAAM5M,OAIpB,IAAIkP,IAAe,QAAa,eAAOA,EAAYlP,GAEpD,OADA8yB,EAAY9yB,GAAO,EACZkP,EAAWlP,GAEjB,GAAIiP,IAAS,QAAa,eAAOA,EAAMjP,GAExC,OADA8yB,EAAY9yB,GAAO,EACZiP,EAAKjP,GAEX,IAGJ+yB,EAAkBtqB,EAASkG,aAAa,KACrC,eAAOokB,EAAiB/yB,GAExB,OADA8yB,EAAY9yB,GAAO,EACZ4M,EAAM5M,GAEZ,GAAImP,IAAQ,QAAa,eAAOA,EAAKnP,GAEtC,OADA8yB,EAAY9yB,GAAO,EACZmP,EAAInP,GAEmByuB,KAC9BqE,EAAY9yB,GAAO,IAG3B,MAAMgzB,EAAelB,GAAoB9xB,GACzC,IAAIizB,EAAWnU,EAEf,OAAIkU,GACY,WAARhzB,GACAH,EAAM4I,EAAU,MAAiBzI,GAG9BgzB,EAAavqB,KAIvBwqB,EAAYlzB,EAAKmzB,gBACbD,EAAYA,EAAUjzB,IAChBizB,EAEF9jB,IAAQ,QAAa,eAAOA,EAAKnP,IAEtC8yB,EAAY9yB,GAAO,EACZmP,EAAInP,KAIb8e,EAAmBrV,EAAWC,OAAOoV,iBACnC,eAAOA,EAAkB9e,GAClB8e,EAAiB9e,QAJvB,IAwBT,KAAMie,EAAGxV,GAAYzI,EAAKqC,GACtB,MAAM,KAAE4M,EAAI,WAAEC,EAAU,IAAEC,GAAQ1G,EAClC,GAAIyG,IAAe,QAAa,eAAOA,EAAYlP,GAC/CkP,EAAWlP,GAAOqC,OAEjB,GAAI4M,IAAS,QAAa,eAAOA,EAAMjP,GACxCiP,EAAKjP,GAAOqC,OAEX,GAAIrC,KAAOyI,EAASmE,MAGrB,OAAO,EAEX,OAAe,MAAX5M,EAAI,MAAcA,EAAIgN,MAAM,KAAMvE,MAe9B0G,EAAInP,GAAOqC,GAGZ,IAEX,KAAM4b,GAAG,KAAEhP,EAAI,WAAEC,EAAU,YAAE4jB,EAAW,IAAE3jB,EAAG,WAAE1F,EAAU,aAAEkF,IAAkB3O,GACzE,IAAI+yB,EACJ,YAA6Bl0B,IAArBi0B,EAAY9yB,IACfiP,IAAS,QAAa,eAAOA,EAAMjP,IACnCkP,IAAe,QAAa,eAAOA,EAAYlP,KAC9C+yB,EAAkBpkB,EAAa,KAAO,eAAOokB,EAAiB/yB,IAChE,eAAOmP,EAAKnP,IACZ,eAAO8xB,GAAqB9xB,IAC5B,eAAOyJ,EAAWC,OAAOoV,iBAAkB9e,KAUvD,MAAMmzB,GAA6C,eAAO,GAAIN,GAA6B,CACvF,IAAI/yB,EAAQE,GAER,GAAIA,IAAQlC,OAAOs1B,YAGnB,OAAOP,GAA4B3yB,IAAIJ,EAAQE,EAAKF,IAExD,IAAIme,EAAGje,GACH,MAAMO,EAAiB,MAAXP,EAAI,KAAe,eAAsBA,GAIrD,OAAOO,KAqEf,MAAM8yB,GAAkB3U,KACxB,IAAI4U,GAAQ,EACZ,SAAStM,GAAwB/d,EAAOE,EAAQkJ,GAC5C,MAAMtS,EAAOkJ,EAAMlJ,KAEb0J,GAAcN,EAASA,EAAOM,WAAaR,EAAMQ,aAAe4pB,GAChE5qB,EAAW,CACb9J,IAAK20B,KACLrqB,QACAlJ,OACAoJ,SACAM,aACAgG,KAAM,KACNhK,KAAM,KACNiM,QAAS,KACTkJ,OAAQ,KACR7L,OAAQ,KACRhI,MAAO,KACPia,QAAS,KACTtS,UAAW,KACX7N,QAAS,KACTue,SAAUjW,EAASA,EAAOiW,SAAWle,OAAOka,OAAO3R,EAAW2V,UAC9D0T,YAAa,KACb9jB,YAAa,GAEbkQ,WAAY,KACZC,WAAY,KAEZxQ,aAAc+F,GAAsB3U,EAAM0J,GAC1C0H,aAAc3D,GAAsBzN,EAAM0J,GAE1CqF,KAAM,KACNvB,QAAS,KAET4B,IAAK,OACLF,KAAM,OACNrC,MAAO,OACPiC,MAAO,OACPD,MAAO,OACPsS,KAAM,OACNhS,WAAY,OACZqkB,aAAc,KAEdlhB,WACA2Y,WAAY3Y,EAAWA,EAAS4Y,UAAY,EAC5C9D,SAAU,KACVI,eAAe,EAGftP,WAAW,EACX/B,aAAa,EACbgH,eAAe,EACfsW,GAAI,KACJ7H,EAAG,KACH7D,GAAI,KACJC,EAAG,KACHN,GAAI,KACJC,EAAG,KACHqD,GAAI,KACJD,IAAK,KACL2I,GAAI,KACJnnB,EAAG,KACHonB,IAAK,KACLC,IAAK,KACLpqB,GAAI,MAaR,OAPId,EAAS0G,IAAM,CAAE8O,EAAGxV,GAExBA,EAASgH,KAAOtG,EAASA,EAAOsG,KAAOhH,EACvCA,EAASqG,KAAO,GAAK7D,KAAK,KAAMxC,GAIzBA,EAEX,IAAIoN,GAAkB,KACtB,MAAM+D,GAAqB,IAAM/D,IAAmBvH,GAC9CmG,GAAsBhM,IACxBoN,GAAkBpN,GAStB,IAkGImrB,GAlGAtd,IAAwB,EAC5B,SAAS4Q,GAAeze,EAAUgL,GAAQ,GACtC6C,GAAwB7C,EACxB,MAAM,MAAE7G,EAAK,SAAEyD,EAAQ,UAAEhB,GAAc5G,EAASQ,MAC1CuK,EAAyB,EAAZnE,EACnBiE,GAAU7K,EAAUmE,EAAO4G,EAAYC,GACvCuK,GAAUvV,EAAU4H,GACpB,MAAMwjB,EAAcrgB,EACdsgB,GAAuBrrB,EAAUgL,QACjC5U,EAEN,OADAyX,IAAwB,EACjBud,EAEX,SAASC,GAAuBrrB,EAAUgL,GACtC,MAAMhF,EAAYhG,EAAS1I,KAmB3B0I,EAASqqB,YAAc5xB,OAAOka,OAAO,MAGrC3S,EAAS1B,MAAQ,IAAIC,MAAMyB,EAAS0G,IAAK0jB,IAKzC,MAAM,MAAEkB,GAAUtlB,EAClB,GAAIslB,EAAO,CACP,MAAMR,EAAgB9qB,EAAS8qB,aAC3BQ,EAAM50B,OAAS,EAAI60B,GAAmBvrB,GAAY,KACtDoN,GAAkBpN,EAClB9I,IACA,MAAMk0B,EAAcrrB,GAAsBurB,EAAOtrB,EAAU,EAAwB,CAA6EA,EAASmE,MAAO2mB,IAGhL,GAFAr0B,IACA2W,GAAkB,KACd,eAAUge,GAAc,CACxB,GAAIpgB,EAEA,OAAOogB,EAAY7oB,KAAMipB,IACrBC,GAAkBzrB,EAAUwrB,KAMhCxrB,EAAS0e,SAAW0M,OAIxBK,GAAkBzrB,EAAUorB,QAIhCM,GAAqB1rB,GAG7B,SAASyrB,GAAkBzrB,EAAUorB,EAAapgB,GAC1C,eAAWogB,GAGPprB,EAASsG,OAAS8kB,EAGjB,eAASA,KAUdprB,EAASyG,WAAazH,GAAUosB,IAQpCM,GAAqB1rB,GAUzB,SAAS0rB,GAAqB1rB,EAAUgL,GACpC,MAAMhF,EAAYhG,EAAS1I,KAEtB0I,EAASsG,SAEN6kB,IAAWnlB,EAAU2lB,WAAa3lB,EAAUM,SAI5CN,EAAUM,OAAS6kB,GAAQnlB,EAAU2lB,SAAU,CAC3CpV,gBAAiBvW,EAASgB,WAAWC,OAAOsV,gBAC5CqV,WAAY5lB,EAAU4lB,cAM9B5rB,EAASsG,OAAUN,EAAUM,QAAU,OAInCtG,EAASsG,OAAOulB,MAChB7rB,EAASiG,UAAY,IAAI1H,MAAMyB,EAAS0G,IAAKgkB,MAKjDtd,GAAkBpN,EAClB9I,IACA+uB,GAAajmB,EAAUgG,GACvBvP,IACA2W,GAAkB,KAgC1B,SAASme,GAAmBvrB,GACxB,MAAM0nB,EAASnP,IAIXvY,EAASuY,QAAUvZ,GAAUuZ,IAsB7B,MAAO,CACHnS,MAAOpG,EAASoG,MAChBD,MAAOnG,EAASmG,MAChBE,KAAMrG,EAASqG,KACfqhB,UAMZ,SAASjY,GAA0B7Z,EAAQoK,EAAWoN,IAC9CpN,IACCA,EAAS5H,UAAY4H,EAAS5H,QAAU,KAAK7B,KAAKX,GA+B3D,SAAS6uB,GAAiB7qB,GACtB,OAAO,eAAWA,IAAU,cAAeA,EAG/C,SAAS,GAASiG,GACd,MAAMqjB,EAAI,GAAWrjB,GAErB,OADA4P,GAA0ByT,EAAEttB,QACrBstB,EA8BX,SAAS4I,GAAEx0B,EAAMy0B,EAAiBnkB,GAC9B,MAAMtN,EAAIsQ,UAAUlU,OACpB,OAAU,IAAN4D,EACI,eAASyxB,KAAqB,eAAQA,GAElChkB,GAAQgkB,GACDtkB,GAAYnQ,EAAM,KAAM,CAACy0B,IAG7BtkB,GAAYnQ,EAAMy0B,GAIlBtkB,GAAYnQ,EAAM,KAAMy0B,IAI/BzxB,EAAI,EACJsN,EAAW5N,MAAMC,UAAUsK,MAAM1I,KAAK+O,UAAW,GAEtC,IAANtQ,GAAWyN,GAAQH,KACxBA,EAAW,CAACA,IAETH,GAAYnQ,EAAMy0B,EAAiBnkB,IAI5BvS,OAAgE,IAuRtF,MAAMkiB,GAAU,QCjyNVyU,GAAQ,6BACRC,GAA2B,qBAAbC,SAA2BA,SAAW,KAC1D,IAAIC,GACAC,GACJ,MAAMC,GAAU,CACZvT,OAAQ,CAAChR,EAAOpH,EAAQma,KACpBna,EAAO4rB,aAAaxkB,EAAO+S,GAAU,OAEzC1H,OAAQrL,IACJ,MAAMpH,EAASoH,EAAMiS,WACjBrZ,GACAA,EAAO6rB,YAAYzkB,IAG3BuR,cAAe,CAACmT,EAAKzR,EAAOoB,IAAOpB,EAC7BkR,GAAIQ,gBAAgBT,GAAOQ,GAC3BP,GAAI5S,cAAcmT,EAAKrQ,EAAK,CAAEA,WAAO/lB,GAC3CmjB,WAAY4L,GAAQ8G,GAAIS,eAAevH,GACvC1L,cAAe0L,GAAQ8G,GAAIxS,cAAc0L,GACzCxL,QAAS,CAACgT,EAAMxH,KACZwH,EAAKC,UAAYzH,GAErBtL,eAAgB,CAAC7Q,EAAImc,KACjBnc,EAAG6jB,YAAc1H,GAErBpL,WAAY4S,GAAQA,EAAK5S,WACzBE,YAAa0S,GAAQA,EAAK1S,YAC1B6S,cAAeC,GAAYd,GAAIa,cAAcC,GAC7C,WAAW/jB,EAAIrS,GACXqS,EAAGgkB,aAAar2B,EAAI,KAExB,UAAUqS,GACN,OAAOA,EAAGqR,WAAU,IAMxB,oBAAoBhR,EAAS3I,EAAQma,EAAQE,GACzC,MAAMkS,EAAOlS,EACPqR,KACGA,GAAmBH,GAAIQ,gBAAgBT,GAAO,QACjDG,KAAkBA,GAAgBF,GAAI5S,cAAc,QAC1D4T,EAAKC,UAAY7jB,EACjB,MAAM8jB,EAAQF,EAAKG,WACnB,IAAIT,EAAOQ,EACPh2B,EAAOw1B,EACX,MAAOA,EACHx1B,EAAOw1B,EACPN,GAAQvT,OAAO6T,EAAMjsB,EAAQma,GAC7B8R,EAAOM,EAAKG,WAEhB,MAAO,CAACD,EAAOh2B,KAMvB,SAASk2B,GAAWrkB,EAAIpP,EAAOmhB,GAI3B,GAHa,MAATnhB,IACAA,EAAQ,IAERmhB,EACA/R,EAAGgkB,aAAa,QAASpzB,OAExB,CAID,MAAM0zB,EAAoBtkB,EAAGukB,KACzBD,IACA1zB,GAASA,EACH,CAACA,KAAU0zB,GACX,IAAIA,IAAoBE,KAAK,MAEvCxkB,EAAGykB,UAAY7zB,GAIvB,SAAS8zB,GAAW1kB,EAAIsU,EAAMtgB,GAC1B,MAAMqgB,EAAQrU,EAAGqU,MACjB,GAAKrgB,EAGA,GAAI,eAASA,GACVsgB,IAAStgB,IACTqgB,EAAMsQ,QAAU3wB,OAGnB,CACD,IAAK,MAAMzF,KAAOyF,EACd4wB,GAASvQ,EAAO9lB,EAAKyF,EAAKzF,IAE9B,GAAI+lB,IAAS,eAASA,GAClB,IAAK,MAAM/lB,KAAO+lB,EACG,MAAbtgB,EAAKzF,IACLq2B,GAASvQ,EAAO9lB,EAAK,SAdjCyR,EAAG6kB,gBAAgB,SAoB3B,MAAMC,GAAc,iBACpB,SAASF,GAASvQ,EAAOlN,EAAM4d,GAC3B,GAAI,eAAQA,GACRA,EAAIz1B,QAAQgD,GAAKsyB,GAASvQ,EAAOlN,EAAM7U,SAGvC,GAAI6U,EAAK9L,WAAW,MAEhBgZ,EAAM2Q,YAAY7d,EAAM4d,OAEvB,CACD,MAAME,EAAWC,GAAW7Q,EAAOlN,GAC/B2d,GAAY3Z,KAAK4Z,GAEjB1Q,EAAM2Q,YAAY,eAAUC,GAAWF,EAAIpoB,QAAQmoB,GAAa,IAAK,aAGrEzQ,EAAM4Q,GAAYF,GAKlC,MAAMI,GAAW,CAAC,SAAU,MAAO,MAC7BC,GAAc,GACpB,SAASF,GAAW7Q,EAAOgR,GACvB,MAAMC,EAASF,GAAYC,GAC3B,GAAIC,EACA,OAAOA,EAEX,IAAIne,EAAO,eAASke,GACpB,GAAa,WAATle,GAAqBA,KAAQkN,EAC7B,OAAQ+Q,GAAYC,GAAWle,EAEnCA,EAAO,eAAWA,GAClB,IAAK,IAAIrZ,EAAI,EAAGA,EAAIq3B,GAASz3B,OAAQI,IAAK,CACtC,MAAMm3B,EAAWE,GAASr3B,GAAKqZ,EAC/B,GAAI8d,KAAY5Q,EACZ,OAAQ+Q,GAAYC,GAAWJ,EAGvC,OAAOI,EAGX,MAAME,GAAU,+BAChB,SAASC,GAAUxlB,EAAIzR,EAAKqC,EAAOmhB,GAC/B,GAAIA,GAASxjB,EAAI8M,WAAW,UACX,MAATzK,EACAoP,EAAGylB,kBAAkBF,GAASh3B,EAAIgN,MAAM,EAAGhN,EAAIb,SAG/CsS,EAAG0lB,eAAeH,GAASh3B,EAAKqC,OAGnC,CAGD,MAAM+0B,EAAY,eAAqBp3B,GAC1B,MAATqC,GAAkB+0B,IAAuB,IAAV/0B,EAC/BoP,EAAG6kB,gBAAgBt2B,GAGnByR,EAAGgkB,aAAaz1B,EAAKo3B,EAAY,GAAK/0B,IAOlD,SAASg1B,GAAa5lB,EAAIzR,EAAKqC,EAI/ByO,EAAcyS,EAAiBxC,EAAgB+D,GAC3C,GAAY,cAAR9kB,GAA+B,gBAARA,EAKvB,OAJI8Q,GACAgU,EAAgBhU,EAAcyS,EAAiBxC,QAEnDtP,EAAGzR,GAAgB,MAATqC,EAAgB,GAAKA,GAGnC,GAAY,UAARrC,GAAkC,aAAfyR,EAAG6lB,QAA1B,CAUA,GAAc,KAAVj1B,GAAyB,MAATA,EAAe,CAC/B,MAAMtC,SAAc0R,EAAGzR,GACvB,GAAc,KAAVqC,GAAyB,YAATtC,EAGhB,YADA0R,EAAGzR,IAAO,GAGT,GAAa,MAATqC,GAA0B,WAATtC,EAItB,OAFA0R,EAAGzR,GAAO,QACVyR,EAAG6kB,gBAAgBt2B,GAGlB,GAAa,WAATD,EAIL,OAFA0R,EAAGzR,GAAO,OACVyR,EAAG6kB,gBAAgBt2B,GAK3B,IACIyR,EAAGzR,GAAOqC,EAEd,MAAOk1B,GACC,OAnCR,CAGI9lB,EAAGpJ,OAAShG,EACZ,MAAM3B,EAAoB,MAAT2B,EAAgB,GAAKA,EAClCoP,EAAGpP,QAAU3B,IACb+Q,EAAGpP,MAAQ3B,IAqCvB,IAAI82B,GAAUC,KAAKC,IAKK,qBAAb/C,UACP6C,KAAY7C,SAASgD,YAAY,SAASC,YAI1CJ,GAAU,IAAM3Y,YAAY6Y,OAIhC,IAAIG,GAAY,EAChB,MAAM9sB,GAAIL,QAAQC,UACZ,GAAQ,KACVktB,GAAY,GAEVC,GAAS,IAAMD,KAAc9sB,GAAEC,KAAK,IAAS6sB,GAAYL,MAC/D,SAASO,GAAiBtmB,EAAI/E,EAAOW,EAASlP,GAC1CsT,EAAGsmB,iBAAiBrrB,EAAOW,EAASlP,GAExC,SAAS65B,GAAoBvmB,EAAI/E,EAAOW,EAASlP,GAC7CsT,EAAGumB,oBAAoBtrB,EAAOW,EAASlP,GAE3C,SAAS85B,GAAWxmB,EAAIqlB,EAASoB,EAAWC,EAAW1vB,EAAW,MAE9D,MAAM2vB,EAAW3mB,EAAG4mB,OAAS5mB,EAAG4mB,KAAO,IACjCC,EAAkBF,EAAStB,GACjC,GAAIqB,GAAaG,EAEbA,EAAgBj2B,MAAQ81B,MAEvB,CACD,MAAOvf,EAAMza,GAAWo6B,GAAUzB,GAClC,GAAIqB,EAAW,CAEX,MAAMK,EAAWJ,EAAStB,GAAW2B,GAAcN,EAAW1vB,GAC9DsvB,GAAiBtmB,EAAImH,EAAM4f,EAASr6B,QAE/Bm6B,IAELN,GAAoBvmB,EAAImH,EAAM0f,EAAiBn6B,GAC/Ci6B,EAAStB,QAAWj4B,IAIhC,MAAM65B,GAAoB,4BAC1B,SAASH,GAAU3f,GACf,IAAIza,EACJ,GAAIu6B,GAAkB9b,KAAKhE,GAAO,CAE9B,IAAImP,EADJ5pB,EAAU,GAEV,MAAQ4pB,EAAInP,EAAKtD,MAAMojB,IACnB9f,EAAOA,EAAK5L,MAAM,EAAG4L,EAAKzZ,OAAS4oB,EAAE,GAAG5oB,QACxChB,EAAQ4pB,EAAE,GAAG1Z,gBAAiB,EAGtC,MAAO,CAACuK,EAAK5L,MAAM,GAAGqB,cAAelQ,GAEzC,SAASs6B,GAAcE,EAAclwB,GACjC,MAAM+vB,EAAWjB,IAOb,MAAMK,EAAYL,EAAEK,WAAaJ,KAC7BI,GAAaY,EAAQI,SAAW,GAChChwB,GAA2BiwB,GAA8BtB,EAAGiB,EAAQn2B,OAAQoG,EAAU,EAA8B,CAAC8uB,KAK7H,OAFAiB,EAAQn2B,MAAQs2B,EAChBH,EAAQI,SAAWd,KACZU,EAEX,SAASK,GAA8BtB,EAAGl1B,GACtC,GAAI,eAAQA,GAAQ,CAChB,MAAMy2B,EAAevB,EAAEwB,yBAKvB,OAJAxB,EAAEwB,yBAA2B,KACzBD,EAAax0B,KAAKizB,GAClBA,EAAEyB,UAAW,GAEV32B,EAAMjB,IAAInD,GAAOs5B,IAAOA,EAAEyB,UAAY/6B,EAAGs5B,IAGhD,OAAOl1B,EAIf,MAAM42B,GAAa,WACbrX,GAAiB,CAAC3D,EAAGje,IAAgB,UAARA,EAC7B,GAAY,CAACyR,EAAIzR,EAAKk4B,EAAWC,EAAW3U,GAAQ,EAAO1S,EAAcyS,EAAiBxC,EAAgB+D,KAC5G,OAAQ9kB,GAEJ,IAAK,QACD81B,GAAWrkB,EAAI0mB,EAAW3U,GAC1B,MACJ,IAAK,QACD2S,GAAW1kB,EAAIymB,EAAWC,GAC1B,MACJ,QACQ,eAAKn4B,GAEA,eAAgBA,IACjBi4B,GAAWxmB,EAAIzR,EAAKk4B,EAAWC,EAAW5U,GAGzC2V,GAAgBznB,EAAIzR,EAAKm4B,EAAW3U,GACzC6T,GAAa5lB,EAAIzR,EAAKm4B,EAAWrnB,EAAcyS,EAAiBxC,EAAgB+D,IAOpE,eAAR9kB,EACAyR,EAAG0nB,WAAahB,EAEH,gBAARn4B,IACLyR,EAAG2nB,YAAcjB,GAErBlB,GAAUxlB,EAAIzR,EAAKm4B,EAAW3U,IAElC,QAGZ,SAAS0V,GAAgBznB,EAAIzR,EAAKqC,EAAOmhB,GACrC,OAAIA,EAGY,cAARxjB,MAIAA,KAAOyR,GAAMwnB,GAAWrc,KAAK5c,IAAQ,eAAWqC,IAW5C,eAARrC,GAAgC,cAARA,KAKhB,SAARA,GAAmC,kBAAVqC,MAIjB,SAARrC,GAAiC,UAAfyR,EAAG6lB,aAIrB2B,GAAWrc,KAAK5c,KAAQ,eAASqC,KAG9BrC,KAAOyR,KAmElB,MAAM4nB,GAAa,aACbC,GAAY,YAGZC,GAAa,CAAC3sB,GAASgC,WAAY2lB,GAAEpZ,GAAgBqe,GAAuB5sB,GAAQgC,GAC1F2qB,GAAW/c,YAAc,aACzB,MAAMid,GAA+B,CACjC7gB,KAAMzD,OACNpV,KAAMoV,OACNukB,IAAK,CACD35B,KAAMqH,QACN6K,SAAS,GAEb0nB,SAAU,CAACxkB,OAAQ/R,OAAQlC,QAC3B04B,eAAgBzkB,OAChB0kB,iBAAkB1kB,OAClB2kB,aAAc3kB,OACd4kB,gBAAiB5kB,OACjB6kB,kBAAmB7kB,OACnB8kB,cAAe9kB,OACf+kB,eAAgB/kB,OAChBglB,iBAAkBhlB,OAClBilB,aAAcjlB,QAEiBokB,GAAW3sB,MAAsB,eAAO,GAAIuO,GAAevO,MAAO6sB,IACrG,SAASD,GAAuBjmB,GAC5B,IAAI,KAAEqF,EAAO,IAAG,KAAE7Y,EAAI,IAAE25B,GAAM,EAAI,SAAEC,EAAQ,eAAEC,EAAoBhhB,EAAH,cAAoB,iBAAEihB,EAAsBjhB,EAAH,gBAAsB,aAAEkhB,EAAkBlhB,EAAH,YAAkB,gBAAEmhB,EAAkBH,EAAc,kBAAEI,EAAoBH,EAAgB,cAAEI,EAAgBH,EAAY,eAAEI,EAAoBthB,EAAH,cAAoB,iBAAEuhB,EAAsBvhB,EAAH,gBAAsB,aAAEwhB,EAAkBxhB,EAAH,aAAuBrF,EACjY,MAAM8mB,EAAY,GAClB,IAAK,MAAMr6B,KAAOuT,EACRvT,KAAOy5B,KACTY,EAAUr6B,GAAOuT,EAASvT,IAGlC,IAAK05B,EACD,OAAOW,EAEX,MAAMC,EAAYC,GAAkBZ,GAC9Ba,EAAgBF,GAAaA,EAAU,GACvCG,EAAgBH,GAAaA,EAAU,IACvC,cAAEthB,EAAa,QAAEC,EAAO,iBAAEE,EAAgB,QAAEE,EAAO,iBAAEE,EAAgB,eAAEC,EAAiBR,EAAa,SAAES,EAAWR,EAAO,kBAAEU,EAAoBR,GAAqBkhB,EACpKK,EAAc,CAACjpB,EAAIkpB,EAAUn1B,KAC/Bo1B,GAAsBnpB,EAAIkpB,EAAWV,EAAgBH,GACrDc,GAAsBnpB,EAAIkpB,EAAWX,EAAoBH,GACzDr0B,GAAQA,KAENq1B,EAAc,CAACppB,EAAIjM,KACrBo1B,GAAsBnpB,EAAI2oB,GAC1BQ,GAAsBnpB,EAAI0oB,GAC1B30B,GAAQA,KAENs1B,EAAiBH,GACZ,CAAClpB,EAAIjM,KACR,MAAMoQ,EAAO+kB,EAAWlhB,EAAWR,EAC7BtO,EAAU,IAAM+vB,EAAYjpB,EAAIkpB,EAAUn1B,GAChDoQ,GAAQA,EAAKnE,EAAI9G,GACjBowB,GAAU,KACNH,GAAsBnpB,EAAIkpB,EAAWZ,EAAkBH,GACvDoB,GAAmBvpB,EAAIkpB,EAAWV,EAAgBH,GAC5ClkB,GAAQA,EAAKzW,OAAS,GACxB87B,GAAmBxpB,EAAI1R,EAAMy6B,EAAe7vB,MAK5D,OAAO,eAAO0vB,EAAW,CACrB,cAAc5oB,GACVuH,GAAiBA,EAAcvH,GAC/BupB,GAAmBvpB,EAAIooB,GACvBmB,GAAmBvpB,EAAImoB,IAE3B,eAAenoB,GACX+H,GAAkBA,EAAe/H,GACjCupB,GAAmBvpB,EAAIuoB,GACvBgB,GAAmBvpB,EAAIsoB,IAE3B9gB,QAAS6hB,GAAc,GACvBrhB,SAAUqhB,GAAc,GACxB,QAAQrpB,EAAIjM,GACR,MAAMmF,EAAU,IAAMkwB,EAAYppB,EAAIjM,GACtCw1B,GAAmBvpB,EAAI0oB,GACvBa,GAAmBvpB,EAAIyoB,GAMvB,MAAMgB,EAAmBzpB,EAAGqU,MAAMqV,mBAClC1pB,EAAGqU,MAAMqV,mBAAqB,OAC9BJ,GAAU,KACNtpB,EAAGqU,MAAMqV,mBAAqBD,EAC9BN,GAAsBnpB,EAAIyoB,GAC1Bc,GAAmBvpB,EAAI2oB,GACjB/gB,GAAWA,EAAQla,OAAS,GAC9B87B,GAAmBxpB,EAAI1R,EAAM06B,EAAe9vB,KAGpD0O,GAAWA,EAAQ5H,EAAI9G,IAE3B,iBAAiB8G,GACbipB,EAAYjpB,GAAI,GAChB0H,GAAoBA,EAAiB1H,IAEzC,kBAAkBA,GACdipB,EAAYjpB,GAAI,GAChBkI,GAAqBA,EAAkBlI,IAE3C,iBAAiBA,GACbopB,EAAYppB,GACZ8H,GAAoBA,EAAiB9H,MAIjD,SAAS8oB,GAAkBZ,GACvB,GAAgB,MAAZA,EACA,OAAO,KAEN,GAAI,eAASA,GACd,MAAO,CAACyB,GAASzB,EAASvU,OAAQgW,GAASzB,EAASzP,QAEnD,CACD,MAAMzX,EAAI2oB,GAASzB,GACnB,MAAO,CAAClnB,EAAGA,IAGnB,SAAS2oB,GAAS5E,GACd,MAAMt0B,EAAM,eAASs0B,GAGrB,OAAOt0B,EAYX,SAAS84B,GAAmBvpB,EAAI4pB,GAC5BA,EAAI1e,MAAM,OAAO5b,QAAQ4qB,GAAKA,GAAKla,EAAG6pB,UAAU96B,IAAImrB,KACnDla,EAAGukB,OACCvkB,EAAGukB,KAAO,IAAI11B,MAAQE,IAAI66B,GAEnC,SAAST,GAAsBnpB,EAAI4pB,GAC/BA,EAAI1e,MAAM,OAAO5b,QAAQ4qB,GAAKA,GAAKla,EAAG6pB,UAAU1f,OAAO+P,IACvD,MAAM,KAAEqK,GAASvkB,EACbukB,IACAA,EAAKx2B,OAAO67B,GACPrF,EAAKxxB,OACNiN,EAAGukB,UAAOn3B,IAItB,SAASk8B,GAAUrvB,GACf6vB,sBAAsB,KAClBA,sBAAsB7vB,KAG9B,IAAI8vB,GAAQ,EACZ,SAASP,GAAmBxpB,EAAIgqB,EAAcC,EAAiB/wB,GAC3D,MAAMvL,EAAMqS,EAAGkqB,SAAWH,GACpBI,EAAoB,KAClBx8B,IAAOqS,EAAGkqB,QACVhxB,KAGR,GAAI+wB,EACA,OAAOG,WAAWD,EAAmBF,GAEzC,MAAM,KAAE37B,EAAI,QAAE+7B,EAAO,UAAEC,GAAcC,GAAkBvqB,EAAIgqB,GAC3D,IAAK17B,EACD,OAAO4K,IAEX,MAAMsxB,EAAWl8B,EAAO,MACxB,IAAIm8B,EAAQ,EACZ,MAAMrR,EAAM,KACRpZ,EAAGumB,oBAAoBiE,EAAUE,GACjCP,KAEEO,EAAS5E,IACPA,EAAEz3B,SAAW2R,KAAQyqB,GAASH,GAC9BlR,KAGRgR,WAAW,KACHK,EAAQH,GACRlR,KAELiR,EAAU,GACbrqB,EAAGsmB,iBAAiBkE,EAAUE,GAElC,SAASH,GAAkBvqB,EAAIgqB,GAC3B,MAAMW,EAASC,OAAOC,iBAAiB7qB,GAEjC8qB,EAAsBv8B,IAASo8B,EAAOp8B,IAAQ,IAAI2c,MAAM,MACxD6f,EAAmBD,EAAmBlD,GAAa,SACnDoD,EAAsBF,EAAmBlD,GAAa,YACtDqD,EAAoBC,GAAWH,EAAkBC,GACjDG,EAAkBL,EAAmBjD,GAAY,SACjDuD,EAAqBN,EAAmBjD,GAAY,YACpDwD,EAAmBH,GAAWC,EAAiBC,GACrD,IAAI98B,EAAO,KACP+7B,EAAU,EACVC,EAAY,EAEZN,IAAiBpC,GACbqD,EAAoB,IACpB38B,EAAOs5B,GACPyC,EAAUY,EACVX,EAAYU,EAAoBt9B,QAG/Bs8B,IAAiBnC,GAClBwD,EAAmB,IACnB/8B,EAAOu5B,GACPwC,EAAUgB,EACVf,EAAYc,EAAmB19B,SAInC28B,EAAUrT,KAAKsU,IAAIL,EAAmBI,GACtC/8B,EACI+7B,EAAU,EACJY,EAAoBI,EAChBzD,GACAC,GACJ,KACVyC,EAAYh8B,EACNA,IAASs5B,GACLoD,EAAoBt9B,OACpB09B,EAAmB19B,OACvB,GAEV,MAAM69B,EAAej9B,IAASs5B,IAC1B,yBAAyBzc,KAAKwf,EAAO/C,GAAa,aACtD,MAAO,CACHt5B,OACA+7B,UACAC,YACAiB,gBAGR,SAASL,GAAWM,EAAQ3C,GACxB,MAAO2C,EAAO99B,OAASm7B,EAAUn7B,OAC7B89B,EAASA,EAAOjtB,OAAOitB,GAE3B,OAAOxU,KAAKsU,OAAOzC,EAAUl5B,IAAI,CAAC87B,EAAG39B,IAAM49B,GAAKD,GAAKC,GAAKF,EAAO19B,MAMrE,SAAS49B,GAAKjrB,GACV,OAAkD,IAA3C9O,OAAO8O,EAAElF,MAAM,GAAI,GAAGoB,QAAQ,IAAK,MAG1B,IAAI1Q,QACD,IAAIA,QAod3B,MAAM0/B,GAAkB,eAAO,CAAE1b,UAAS,sBAAoBoT,IAG9D,IAAI7N,GAEJ,SAASoW,KACL,OAAOpW,KAAaA,GAAW7F,GAAegc,KAUlD,MAMM,GAAY,IAAKz6B,KACnB,MAAMgc,EAAM0e,KAAiB7R,aAAa7oB,GAI1C,MAAM,MAAE26B,GAAU3e,EAgBlB,OAfAA,EAAI2e,MAASC,IACT,MAAMla,EAAYma,GAAmBD,GACrC,IAAKla,EACD,OACJ,MAAMtS,EAAY4N,EAAIiB,WACjB,eAAW7O,IAAeA,EAAUhC,QAAWgC,EAAUqjB,WAC1DrjB,EAAUqjB,SAAW/Q,EAAUsS,WAGnCtS,EAAUsS,UAAY,GACtB,MAAM5uB,EAAQu2B,EAAMja,GAGpB,OAFAA,EAAUiT,gBAAgB,WAC1BjT,EAAUoS,aAAa,aAAc,IAC9B1uB,GAEJ4X,GAwBX,SAAS6e,GAAmBna,GACxB,GAAI,eAASA,GAAY,CACrB,MAAMnhB,EAAMyyB,SAASY,cAAclS,GAInC,OAAOnhB,EAEX,OAAOmhB,I,qCC9uCX,YAOA,SAASoa,EAAQC,EAAKC,GAClB,MAAMv8B,EAAMF,OAAOka,OAAO,MACpBwiB,EAAOF,EAAI/gB,MAAM,KACvB,IAAK,IAAIpd,EAAI,EAAGA,EAAIq+B,EAAKz+B,OAAQI,IAC7B6B,EAAIw8B,EAAKr+B,KAAM,EAEnB,OAAOo+B,EAAmBnH,KAASp1B,EAAIo1B,EAAInoB,eAAiBmoB,KAASp1B,EAAIo1B,GAb7E,+wCAmBA,MA0BMqH,EAAuB,4LAGvBC,EAAsCL,EAAQI,GA+CpD,MAAME,EAAsB,8EACtBC,EAAqCP,EAAQM,GA4DnD,SAASE,EAAe57B,GACpB,GAAI67B,EAAQ77B,GAAQ,CAChB,MAAMH,EAAM,GACZ,IAAK,IAAI3C,EAAI,EAAGA,EAAI8C,EAAMlD,OAAQI,IAAK,CACnC,MAAM4+B,EAAO97B,EAAM9C,GACbuO,EAAamwB,EAAeG,EAASD,GAAQE,EAAiBF,GAAQA,GAC5E,GAAIrwB,EACA,IAAK,MAAM9N,KAAO8N,EACd5L,EAAIlC,GAAO8N,EAAW9N,GAIlC,OAAOkC,EAEN,GAAIo8B,EAASj8B,GACd,OAAOA,EAGf,MAAMk8B,EAAkB,gBAClBC,EAAsB,QAC5B,SAASH,EAAiBjI,GACtB,MAAMla,EAAM,GAOZ,OANAka,EAAQzZ,MAAM4hB,GAAiBx9B,QAAQo9B,IACnC,GAAIA,EAAM,CACN,MAAMM,EAAMN,EAAKxhB,MAAM6hB,GACvBC,EAAIt/B,OAAS,IAAM+c,EAAIuiB,EAAI,GAAGtxB,QAAUsxB,EAAI,GAAGtxB,WAGhD+O,EAkBX,SAASwiB,EAAer8B,GACpB,IAAIH,EAAM,GACV,GAAIk8B,EAAS/7B,GACTH,EAAMG,OAEL,GAAI67B,EAAQ77B,GACb,IAAK,IAAI9C,EAAI,EAAGA,EAAI8C,EAAMlD,OAAQI,IAC9B2C,GAAOw8B,EAAer8B,EAAM9C,IAAM,SAGrC,GAAI++B,EAASj8B,GACd,IAAK,MAAMuW,KAAQvW,EACXA,EAAMuW,KACN1W,GAAO0W,EAAO,KAI1B,OAAO1W,EAAIiL,OAKf,MAAMwxB,EAAY,qlBAUZC,EAAW,qpBAWXC,EAA0BpB,EAAQkB,GAClCG,EAAyBrB,EAAQmB,GAgDvC,SAASG,EAAmBzyB,EAAGC,GAC3B,GAAID,EAAEnN,SAAWoN,EAAEpN,OACf,OAAO,EACX,IAAI6/B,GAAQ,EACZ,IAAK,IAAIz/B,EAAI,EAAGy/B,GAASz/B,EAAI+M,EAAEnN,OAAQI,IACnCy/B,EAAQC,EAAW3yB,EAAE/M,GAAIgN,EAAEhN,IAE/B,OAAOy/B,EAEX,SAASC,EAAW3yB,EAAGC,GACnB,GAAID,IAAMC,EACN,OAAO,EACX,IAAI2yB,EAAaC,EAAO7yB,GACpB8yB,EAAaD,EAAO5yB,GACxB,GAAI2yB,GAAcE,EACd,SAAOF,IAAcE,IAAa9yB,EAAE+yB,YAAc9yB,EAAE8yB,UAIxD,GAFAH,EAAahB,EAAQ5xB,GACrB8yB,EAAalB,EAAQ3xB,GACjB2yB,GAAcE,EACd,SAAOF,IAAcE,IAAaL,EAAmBzyB,EAAGC,GAI5D,GAFA2yB,EAAaZ,EAAShyB,GACtB8yB,EAAad,EAAS/xB,GAClB2yB,GAAcE,EAAY,CAE1B,IAAKF,IAAeE,EAChB,OAAO,EAEX,MAAME,EAAap+B,OAAOyO,KAAKrD,GAAGnN,OAC5BogC,EAAar+B,OAAOyO,KAAKpD,GAAGpN,OAClC,GAAImgC,IAAeC,EACf,OAAO,EAEX,IAAK,MAAMv/B,KAAOsM,EAAG,CACjB,MAAMkzB,EAAUlzB,EAAEmzB,eAAez/B,GAC3B0/B,EAAUnzB,EAAEkzB,eAAez/B,GACjC,GAAKw/B,IAAYE,IACXF,GAAWE,IACZT,EAAW3yB,EAAEtM,GAAMuM,EAAEvM,IACtB,OAAO,GAInB,OAAOmV,OAAO7I,KAAO6I,OAAO5I,GAEhC,SAASozB,EAAa/8B,EAAK4zB,GACvB,OAAO5zB,EAAIg9B,UAAUzB,GAAQc,EAAWd,EAAM3H,IAOlD,MAsCMqJ,EAEA,GACAC,EAA0E,GAC1EC,EAAO,OAIPC,EAAK,KAAM,EACXC,EAAO,YACPC,EAAQlgC,GAAQigC,EAAKrjB,KAAK5c,GAC1B6M,EAAmB7M,GAAQA,EAAI8M,WAAW,aAC1CqzB,EAASj/B,OAAOk/B,OAChBxkB,EAAS,CAAChZ,EAAK6O,KACjB,MAAMlS,EAAIqD,EAAI2I,QAAQkG,GAClBlS,GAAK,GACLqD,EAAI4I,OAAOjM,EAAG,IAGhBkgC,EAAiBv+B,OAAOwB,UAAU+8B,eAClCY,EAAS,CAAC7J,EAAKx2B,IAAQy/B,EAAen7B,KAAKkyB,EAAKx2B,GAChDk+B,EAAUz7B,MAAMy7B,QAChBoC,EAAS9J,GAA8B,iBAAtB+J,EAAa/J,GAC9BgK,EAAShK,GAA8B,iBAAtB+J,EAAa/J,GAC9B2I,EAAU3I,GAAQA,aAAeiB,KACjCgJ,EAAcjK,GAAuB,oBAARA,EAC7B4H,EAAY5H,GAAuB,kBAARA,EAC3BkK,EAAYlK,GAAuB,kBAARA,EAC3B8H,EAAY9H,GAAgB,OAARA,GAA+B,kBAARA,EAC3CmK,EAAanK,GACR8H,EAAS9H,IAAQiK,EAAWjK,EAAIxrB,OAASy1B,EAAWjK,EAAI3tB,OAE7D+3B,EAAiB1/B,OAAOwB,UAAU6S,SAClCgrB,EAAgBl+B,GAAUu+B,EAAet8B,KAAKjC,GAC9Cw+B,EAAax+B,GAERk+B,EAAal+B,GAAO2K,MAAM,GAAI,GAGnC8zB,EAAgB9gC,GAAQo+B,EAASp+B,IAC3B,QAARA,GACW,MAAXA,EAAI,IACJ,GAAK+gC,SAAS/gC,EAAK,MAAQA,EACzBghC,EAA+BvD,EAErC,uHAIMwD,EAAuBhjC,IACzB,MAAMijC,EAAQhgC,OAAOka,OAAO,MAC5B,OAASsiB,IACL,MAAMyD,EAAMD,EAAMxD,GAClB,OAAOyD,IAAQD,EAAMxD,GAAOz/B,EAAGy/B,MAGjC0D,EAAa,SAIbC,EAAWJ,EAAqBvD,GAC3BA,EAAItvB,QAAQgzB,EAAY,CAACnjB,EAAG0N,IAAOA,EAAIA,EAAE2V,cAAgB,KAE9DC,EAAc,aAIdC,EAAYP,EAAqBvD,GAAQA,EAAItvB,QAAQmzB,EAAa,OAAOlzB,eAIzEozB,EAAaR,EAAqBvD,GAAQA,EAAIgE,OAAO,GAAGJ,cAAgB5D,EAAI1wB,MAAM,IAIlF20B,EAAeV,EAAqBvD,GAASA,EAAM,KAAK+D,EAAW/D,GAAS,IAE5EkE,EAAa,CAACv/B,EAAO1B,IAAa0B,IAAU1B,IAAa0B,IAAUA,GAAS1B,IAAaA,GACzFkhC,EAAiB,CAACC,EAAKC,KACzB,IAAK,IAAIxiC,EAAI,EAAGA,EAAIuiC,EAAI3iC,OAAQI,IAC5BuiC,EAAIviC,GAAGwiC,IAGTC,GAAM,CAACC,EAAKjiC,EAAKqC,KACnBnB,OAAOyvB,eAAesR,EAAKjiC,EAAK,CAC5B6wB,cAAc,EACdD,YAAY,EACZvuB,WAGF6/B,GAAY1L,IACd,MAAM/jB,EAAI0vB,WAAW3L,GACrB,OAAO4L,MAAM3vB,GAAK+jB,EAAM/jB,GAE5B,IAAI4vB,GACJ,MAAMC,GAAgB,IACVD,KACHA,GACyB,qBAAfE,WACDA,WACgB,qBAATC,KACHA,KACkB,qBAAXnG,OACHA,OACkB,qBAAXoG,EACHA,EACA,M,yCC5e9B,IAAIC,EAGJA,EAAI,WACH,OAAO5/B,KADJ,GAIJ,IAEC4/B,EAAIA,GAAK,IAAIluB,SAAS,cAAb,GACR,MAAO+iB,GAEc,kBAAX8E,SAAqBqG,EAAIrG,QAOrCsG,EAAOC,QAAUF,G,sBCnBjB,2BACiEC,EAAOC,QAAUC,KADlF,CAIE//B,GAAM,WAAe,aAErB,SAASggC,IACP,IAAIC,GAAQ,EAKZ,MAJyB,qBAAdC,YACTD,EACEC,UAAUC,UAAU3tB,MAAM,YAAc0tB,UAAUC,UAAU3tB,MAAM,SAE/DytB,EAET,IAAIG,EAAW,EACXC,EAAU,CAAC,KAAM,MAAO,SAAU,KAChB,qBAAX9G,SACToG,EAAOpG,OAAS,IAElB,IAAK,IAAI+G,EAAI,EAAGA,EAAID,EAAQhkC,SAAWk9B,OAAOd,wBAAyB6H,EACrE/G,OAAOd,sBAAwBc,OAAO8G,EAAQC,GAAK,yBACnD/G,OAAOgH,qBACLhH,OAAO8G,EAAQC,GAAK,yBACpB/G,OAAO8G,EAAQC,GAAK,+BAEnB/G,OAAOd,wBACVc,OAAOd,sBAAwB,SAASx2B,EAAUu+B,GAChD,IAAIC,GAAW,IAAI9L,MAAO4H,UACtBmE,EAAa/a,KAAKsU,IAAI,EAAG,IAAMwG,EAAWL,IAC1C9jC,EAAKi9B,OAAOR,YAAW,WACzB92B,EAASw+B,EAAWC,KACnBA,GAEH,OADAN,EAAWK,EAAWC,EACfpkC,IAGNi9B,OAAOgH,uBACVhH,OAAOgH,qBAAuB,SAASjkC,GACrCqkC,aAAarkC,KAGjB,IAAIskC,EAAyBrH,OAAOd,sBAChCoI,EAAwBtH,OAAOgH,qBAEnC,SAASO,EAAcl3B,GACrBA,EAAMm3B,kBAAoB/gC,KAAKghC,cAC/BhhC,KAAKihC,oBAAoBz/B,KACvBxB,KACA,CACEkhC,MAAOlhC,KAAKmhC,YACZC,OAAQphC,KAAKqhC,cAEfz3B,GAGJ,SAAS03B,EAAsB13B,GAC7B,IAAI23B,EAAiB33B,EAAM43B,eAAiB53B,EAAM63B,WAC9CF,EAAeG,6BACjBb,EAAsBU,EAAeG,6BAEvCH,EAAeG,4BAA8Bd,EAC3CE,EAAc34B,KAAKnI,KAAM4J,IAG7B,SAAS+3B,IACH9P,SAAS+P,YACX5hC,KAAKghC,cAAcY,YAAY,WAAYd,EAAc34B,KAAKnI,OAE9DA,KAAK6hC,gBAAgBC,YAAY7M,iBAC/B,SACAqM,EAAsBn5B,KAAKnI,OAIjC,SAAS+hC,IACP,IAAI78B,EAAS2sB,SAAS7S,cAAc,UACpC9Z,EAAOytB,aAAa,cAAe,QACnCztB,EAAOytB,aAAa,YAAa,GACjC,IAAIqP,EAAc,iUAGlB,OAFA98B,EAAOytB,aAAa,QAASqP,GAC7B98B,EAAOjI,KAAO,YACPiI,EAET,IAAI+8B,EAA0B,CAC5B95B,KAAM,SAAcwG,EAAI+M,EAASvV,EAAO+7B,GACtCvzB,EAAGwzB,kBAAoBJ,IACvBpzB,EAAGwzB,kBAAkBnB,cAAgBryB,EACrCA,EAAGwzB,kBAAkBlB,oBAAsBvlB,EAAQnc,MACnDoP,EAAGwzB,kBAAkBC,OAAST,EAC9B,IAAI1B,EAAQD,IACZC,GAAStxB,EAAG0zB,YAAY1zB,EAAGwzB,mBAC3BxzB,EAAGwzB,kBAAkBh2B,KAAO,eAC3B8zB,GAAStxB,EAAG0zB,YAAY1zB,EAAGwzB,oBAE9BG,SAAU,SAAkB3zB,GACY,WAAlC6qB,iBAAiB7qB,GAAI4zB,UACvB5zB,EAAGqU,MAAM2Q,YAAY,WAAY,WAAY,cAGjD6O,OAAQ,SAAgB7zB,GAClBkjB,SAAS+P,YACXjzB,EAAG8zB,YAAY,WAAY3B,GAClBnyB,EAAGwzB,mBAAqBxzB,EAAGwzB,kBAAkBN,kBACtDlzB,EAAGwzB,kBAAkBN,gBAAgBC,YAAY5M,oBAC/C,SACAoM,GAEF3yB,EAAGwzB,mBAAqBxzB,EAAGujB,YAAYvjB,EAAGwzB,sBAK5CO,EAAoB,CACtBtlB,QAAS,SAAiBulB,GACxBA,EAAIrlB,UAAU,SAAU2kB,KAc5B,OAVEpC,EAAOC,QAAU4C,EAUZA,O,mEChIR,SAASjO,EAAEmO,GAAqD/C,EAAOC,QAAQ8C,IAA/E,CAA0L5iC,GAAK,WAAW,OAAO,SAASy0B,GAAG,SAASmO,EAAEna,GAAG,GAAG9Y,EAAE8Y,GAAG,OAAO9Y,EAAE8Y,GAAGqX,QAAQ,IAAIrjC,EAAEkT,EAAE8Y,GAAG,CAACqX,QAAQ,GAAGxjC,GAAGmsB,EAAEoa,QAAO,GAAI,OAAOpO,EAAEhM,GAAGjnB,KAAK/E,EAAEqjC,QAAQrjC,EAAEA,EAAEqjC,QAAQ8C,GAAGnmC,EAAEomC,QAAO,EAAGpmC,EAAEqjC,QAAQ,IAAInwB,EAAE,GAAG,OAAOizB,EAAE3d,EAAEwP,EAAEmO,EAAE/Z,EAAElZ,EAAEizB,EAAE36B,EAAE,QAAQ26B,EAAE,GAAvM,CAA2M,CAAC,SAASnO,EAAEmO,EAAEjzB,GAAG,aAAa,SAAS8Y,EAAEgM,GAAG,OAAOA,GAAGA,EAAEqO,WAAWrO,EAAE,CAACtlB,QAAQslB,GAAG,IAAIh4B,EAAE2B,OAAOk/B,QAAQ,SAAS7I,GAAG,IAAI,IAAImO,EAAE,EAAEA,EAAEryB,UAAUlU,OAAOumC,IAAI,CAAC,IAAIjzB,EAAEY,UAAUqyB,GAAG,IAAI,IAAIna,KAAK9Y,EAAEvR,OAAOwB,UAAU+8B,eAAen7B,KAAKmO,EAAE8Y,KAAKgM,EAAEhM,GAAG9Y,EAAE8Y,IAAI,OAAOgM,GAAGpwB,EAAEsL,EAAE,GAAGnG,GAAGif,EAAEpkB,GAAGsL,EAAE,IAAIiV,EAAE6D,EAAEjf,GAAGqf,EAAElZ,EAAE,GAAGP,EAAEqZ,EAAEI,GAAGka,EAAEpzB,EAAE,GAAGyqB,EAAE3R,EAAEsa,GAAG9iC,EAAE0P,EAAE,GAAG1H,EAAEwgB,EAAExoB,GAAGglB,EAAEtV,EAAE,IAAIlG,EAAEgf,EAAExD,GAAGhkB,EAAE0O,EAAE,IAAIqzB,EAAEva,EAAExnB,GAAG2+B,EAAEjwB,EAAE,IAAI8hB,EAAEhJ,EAAEmX,GAAGqD,EAAE,GAAGC,GAAE,EAAG5C,EAAE,CAAC6C,OAAO,IAAIC,MAAM,EAAEC,OAAO,OAAOxM,SAAS,IAAIyM,SAAQ,EAAGC,MAAK,EAAGC,WAAW,mBAAmBC,cAAc,GAAGC,cAAc,GAAGC,yBAAwB,GAAIrd,EAAE,WAAW,IAAImO,EAAElkB,UAAUlU,OAAO,QAAG,IAASkU,UAAU,IAAIA,UAAU,GAAG,GAAGkkB,IAAIyO,GAAE,GAAIA,EAAE,OAAOD,GAAE,EAAGD,EAAE7zB,SAAS8zB,EAAE3C,IAAG,EAAG72B,EAAE0F,SAAS8zB,EAAE3C,EAAEiD,MAAMN,GAAGW,EAAE,WAAWX,GAAE,EAAGxR,EAAEtiB,WAAWmX,KAAKud,EAAE,WAAWZ,EAAEhlC,SAAQ,SAASw2B,EAAEmO,GAAGnO,EAAEnC,KAAKkB,gBAAgB,YAAYiB,EAAEnC,KAAKkB,gBAAgB,mBAAmBiB,EAAEnC,KAAKkB,gBAAgB,qBAAqBiB,EAAEnC,KAAKkB,gBAAgB,sBAAqBsQ,EAAE,SAASrP,GAAG,OAAW,IAAJA,GAAQ,WAAWA,GAAGxsB,EAAEkH,QAAQ40B,UAAU,UAAUtP,GAAGxsB,EAAEkH,QAAQ60B,SAAS,WAAWvP,GAAGxsB,EAAEkH,QAAQ80B,UAAU,mBAAmBxP,IAAS,IAANA,KAAUtZ,EAAE,SAASsZ,GAAG6L,EAAE7jC,EAAE6jC,EAAE7L,GAAGwO,GAAE,EAAGxR,EAAEtiB,WAAW,IAAIyzB,EAAE/Q,SAASqS,MAAM3K,OAAO4K,KAAK,OAAOL,EAAExD,EAAEgD,UAAUV,EAAEiB,KAAKvD,EAAEqD,yBAAyBvJ,EAAEjrB,QAAQi1B,gBAAgBr9B,QAAQs9B,KAAK,qLAAqL/D,EAAEqD,yBAAwB,GAAI9R,SAASY,cAAc,QAAQE,aAAa,kBAAkB2N,EAAE+C,QAAQxR,SAASY,cAAc,QAAQE,aAAa,oBAAoB2N,EAAEzJ,UAAUhF,SAASY,cAAc,QAAQE,aAAa,iBAAiB2N,EAAE8C,OAAO,qBAAqB9C,EAAEkD,YAAY,CAAC,WAAW,eAAe/6B,QAAQopB,SAASyS,aAAa,EAAEhe,GAAE,GAAI,SAASga,EAAEkD,WAAWjK,OAAOtE,iBAAiBqL,EAAEkD,YAAW,WAAWld,GAAE,MAAMuL,SAASoD,iBAAiBqL,EAAEkD,YAAW,WAAWld,GAAE,MAAMiT,OAAOtE,iBAAiB,UAAS,EAAG7lB,EAAED,SAASmX,EAAEga,EAAEoD,eAAc,IAAKnK,OAAOtE,iBAAiB,qBAAoB,EAAG7lB,EAAED,SAASmX,EAAEga,EAAEoD,eAAc,IAAKnK,OAAOtE,iBAAiB,UAAS,EAAGrQ,EAAEzV,UAAS,YAAW,EAAG1F,EAAE0F,SAAS8zB,EAAE3C,EAAEiD,QAAOjD,EAAEmD,gBAAgBnD,EAAEqD,yBAAyBvJ,EAAEjrB,QAAQo1B,MAAM,aAAaX,GAAGX,IAAIxO,EAAEqL,QAAQ,CAAC0E,KAAKrpB,EAAEspB,QAAQne,EAAEoe,YAAYd,IAAI,SAASnP,EAAEmO,KAAK,CAAC,CAAC,CAAC,CAAC,SAASnO,EAAEmO,IAAG,SAAUA,GAAG,aAAa,SAASjzB,EAAE8kB,EAAEmO,EAAEjzB,GAAG,SAAS8Y,EAAEma,GAAG,IAAIjzB,EAAElG,EAAEgf,EAAExnB,EAAE,OAAOwI,EAAExI,OAAE,EAAOiiC,EAAEN,EAAEhD,EAAEnL,EAAEv0B,MAAMuoB,EAAE9Y,GAAG,SAAStL,EAAEowB,GAAG,OAAOyO,EAAEzO,EAAEhD,EAAEsH,WAAWgK,EAAEH,GAAGiB,EAAEpb,EAAEgM,GAAGmL,EAAE,SAASp2B,EAAEirB,GAAG,IAAI9kB,EAAE8kB,EAAEwO,EAAExa,EAAEgM,EAAEyO,EAAEzmC,EAAEmmC,EAAEjzB,EAAE,OAAOm0B,EAAExd,EAAE7pB,EAAEumC,EAAEva,GAAGhsB,EAAE,SAASosB,EAAE4L,GAAG,IAAI9kB,EAAE8kB,EAAEwO,EAAExa,EAAEgM,EAAEyO,EAAE,YAAO,IAASD,GAAGtzB,GAAGizB,GAAGjzB,EAAE,GAAGm0B,GAAGrb,GAAGua,EAAE,SAASD,IAAI,IAAItO,EAAEmP,IAAI,OAAO/a,EAAE4L,GAAG2F,EAAE3F,QAAQhD,EAAEsH,WAAWgK,EAAEv5B,EAAEirB,KAAK,SAAS2F,EAAE3F,GAAG,OAAOhD,OAAE,EAAOtW,GAAG1R,EAAEgf,EAAEgM,IAAIhrB,EAAExI,OAAE,EAAO2+B,GAAG,SAAS3/B,SAAI,IAASwxB,GAAGkP,aAAalP,GAAGyR,EAAE,EAAEz5B,EAAEw5B,EAAEhiC,EAAEwwB,OAAE,EAAO,SAASxpB,IAAI,YAAO,IAASwpB,EAAEmO,EAAExF,EAAEwJ,KAAK,SAAS3e,IAAI,IAAIwP,EAAEmP,IAAIj0B,EAAEkZ,EAAE4L,GAAG,GAAGhrB,EAAE8G,UAAUtP,EAAEjB,KAAKijC,EAAExO,EAAE9kB,EAAE,CAAC,QAAG,IAAS8hB,EAAE,OAAOptB,EAAE4+B,GAAG,GAAGa,EAAE,OAAOrS,EAAEsH,WAAWgK,EAAEH,GAAGna,EAAEwa,GAAG,YAAO,IAASxR,IAAIA,EAAEsH,WAAWgK,EAAEH,IAAIhD,EAAE,IAAIn2B,EAAExI,EAAE+hC,EAAEpD,EAAEnO,EAAEwR,EAAEC,EAAE,EAAEW,GAAE,EAAGC,GAAE,EAAG3oB,GAAE,EAAG,GAAG,mBAAmBsZ,EAAE,MAAM,IAAIkQ,UAAUv1B,GAAG,OAAOwzB,EAAEhe,EAAEge,IAAI,EAAEnmC,EAAEkT,KAAKk0B,IAAIl0B,EAAEi1B,QAAQd,EAAE,YAAYn0B,EAAEqzB,EAAEc,EAAExD,EAAE1b,EAAEjV,EAAEk1B,UAAU,EAAEjC,GAAGI,EAAE7nB,EAAE,aAAaxL,IAAIA,EAAEm1B,SAAS3pB,GAAG8J,EAAE8f,OAAO9kC,EAAEglB,EAAEzQ,MAAMvM,EAAEgd,EAAE,SAASwD,EAAEgM,EAAEmO,EAAEna,GAAG,IAAIpkB,GAAE,EAAGmF,GAAE,EAAG,GAAG,mBAAmBirB,EAAE,MAAM,IAAIkQ,UAAUv1B,GAAG,OAAO3S,EAAEgsB,KAAKpkB,EAAE,YAAYokB,IAAIA,EAAEmc,QAAQvgC,EAAEmF,EAAE,aAAaif,IAAIA,EAAEqc,SAASt7B,GAAGmG,EAAE8kB,EAAEmO,EAAE,CAACgC,QAAQvgC,EAAEwgC,QAAQjC,EAAEkC,SAASt7B,IAAI,SAAS/M,EAAEg4B,GAAG,IAAImO,EAAE,oBAAoBnO,EAAE,YAAY5L,EAAE4L,GAAG,QAAQA,IAAI,UAAUmO,GAAG,YAAYA,GAAG,SAASv+B,EAAEowB,GAAG,QAAQA,GAAG,WAAW,oBAAoBA,EAAE,YAAY5L,EAAE4L,IAAI,SAASjrB,EAAEirB,GAAG,MAAM,WAAW,oBAAoBA,EAAE,YAAY5L,EAAE4L,KAAKpwB,EAAEowB,IAAIyO,EAAE1hC,KAAKizB,IAAI2F,EAAE,SAASxV,EAAE6P,GAAG,GAAG,iBAAiBA,EAAE,OAAOA,EAAE,GAAGjrB,EAAEirB,GAAG,OAAOsO,EAAE,GAAGtmC,EAAEg4B,GAAG,CAAC,IAAImO,EAAE,mBAAmBnO,EAAEuQ,QAAQvQ,EAAEuQ,UAAUvQ,EAAEA,EAAEh4B,EAAEmmC,GAAGA,EAAE,GAAGA,EAAE,GAAG,iBAAiBnO,EAAE,OAAO,IAAIA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEnpB,QAAQrL,EAAE,IAAI,IAAI0P,EAAEsV,EAAEnL,KAAK2a,GAAG,OAAO9kB,GAAGlG,EAAEqQ,KAAK2a,GAAGxzB,EAAEwzB,EAAEvqB,MAAM,GAAGyF,EAAE,EAAE,GAAG1H,EAAE6R,KAAK2a,GAAGsO,GAAGtO,EAAE,IAAI5L,EAAE,mBAAmB7tB,QAAQ,iBAAiBA,OAAOuH,SAAS,SAASkyB,GAAG,cAAcA,GAAG,SAASA,GAAG,OAAOA,GAAG,mBAAmBz5B,QAAQy5B,EAAEwQ,cAAcjqC,QAAQy5B,IAAIz5B,OAAO4E,UAAU,gBAAgB60B,GAAGrlB,EAAE,sBAAsB2zB,EAAEmC,IAAI9K,EAAE,kBAAkBn6B,EAAE,aAAagI,EAAE,qBAAqBgd,EAAE,aAAaxb,EAAE,cAAcxI,EAAEg9B,SAAS+E,EAAE,WAAW,oBAAoBJ,EAAE,YAAY/Z,EAAE+Z,KAAKA,GAAGA,EAAExkC,SAASA,QAAQwkC,EAAEhD,EAAE,WAAW,oBAAoBF,KAAK,YAAY7W,EAAE6W,QAAQA,MAAMA,KAAKthC,SAASA,QAAQshC,KAAKjO,EAAEuR,GAAGpD,GAAGluB,SAAS,cAATA,GAA0BuxB,EAAE7kC,OAAOwB,UAAUsjC,EAAED,EAAExwB,SAAS6tB,EAAE3a,KAAKsU,IAAI3T,EAAEX,KAAKC,IAAIge,EAAE,WAAW,OAAOnS,EAAEkD,KAAKC,OAAOH,EAAEqL,QAAQrX,IAAIjnB,KAAKohC,EAAE,WAAW,OAAO5iC,KAAlB,KAA4B,SAASy0B,EAAEmO,IAAG,SAAUA,GAAG,aAAa,SAASjzB,EAAE8kB,EAAEmO,EAAEjzB,GAAG,SAASlT,EAAEmmC,GAAG,IAAIjzB,EAAElG,EAAEgf,EAAExnB,EAAE,OAAOwI,EAAExI,OAAE,EAAO2iC,EAAEhB,EAAEhD,EAAEnL,EAAEv0B,MAAMuoB,EAAE9Y,GAAG,SAAStL,EAAEowB,GAAG,OAAOmP,EAAEnP,EAAEhD,EAAEsH,WAAWgK,EAAEH,GAAGiB,EAAEpnC,EAAEg4B,GAAGmL,EAAE,SAAShb,EAAE6P,GAAG,IAAI9kB,EAAE8kB,EAAEwO,EAAExa,EAAEgM,EAAEmP,EAAEnnC,EAAEmmC,EAAEjzB,EAAE,OAAOm0B,EAAExD,EAAE7jC,EAAEumC,EAAEva,GAAGhsB,EAAE,SAAS2S,EAAEqlB,GAAG,IAAI9kB,EAAE8kB,EAAEwO,EAAExa,EAAEgM,EAAEmP,EAAE,YAAO,IAASX,GAAGtzB,GAAGizB,GAAGjzB,EAAE,GAAGm0B,GAAGrb,GAAGua,EAAE,SAASD,IAAI,IAAItO,EAAEnO,IAAI,OAAOlX,EAAEqlB,GAAG2F,EAAE3F,QAAQhD,EAAEsH,WAAWgK,EAAEne,EAAE6P,KAAK,SAAS2F,EAAE3F,GAAG,OAAOhD,OAAE,EAAOtW,GAAG1R,EAAEhN,EAAEg4B,IAAIhrB,EAAExI,OAAE,EAAO2+B,GAAG,SAAS3/B,SAAI,IAASwxB,GAAGkP,aAAalP,GAAGmS,EAAE,EAAEn6B,EAAEw5B,EAAEhiC,EAAEwwB,OAAE,EAAO,SAASxpB,IAAI,YAAO,IAASwpB,EAAEmO,EAAExF,EAAE9T,KAAK,SAASrB,IAAI,IAAIwP,EAAEnO,IAAI3W,EAAEP,EAAEqlB,GAAG,GAAGhrB,EAAE8G,UAAUtP,EAAEjB,KAAKijC,EAAExO,EAAE9kB,EAAE,CAAC,QAAG,IAAS8hB,EAAE,OAAOptB,EAAE4+B,GAAG,GAAGa,EAAE,OAAOrS,EAAEsH,WAAWgK,EAAEH,GAAGnmC,EAAEwmC,GAAG,YAAO,IAASxR,IAAIA,EAAEsH,WAAWgK,EAAEH,IAAIhD,EAAE,IAAIn2B,EAAExI,EAAE+hC,EAAEpD,EAAEnO,EAAEwR,EAAEW,EAAE,EAAEC,GAAE,EAAGC,GAAE,EAAG3oB,GAAE,EAAG,GAAG,mBAAmBsZ,EAAE,MAAM,IAAIkQ,UAAU9b,GAAG,OAAO+Z,EAAEp5B,EAAEo5B,IAAI,EAAEna,EAAE9Y,KAAKk0B,IAAIl0B,EAAEi1B,QAAQd,EAAE,YAAYn0B,EAAEqzB,EAAEc,EAAEZ,EAAE15B,EAAEmG,EAAEk1B,UAAU,EAAEjC,GAAGI,EAAE7nB,EAAE,aAAaxL,IAAIA,EAAEm1B,SAAS3pB,GAAG8J,EAAE8f,OAAO9kC,EAAEglB,EAAEzQ,MAAMvM,EAAEgd,EAAE,SAASwD,EAAEgM,GAAG,IAAImO,EAAE,oBAAoBnO,EAAE,YAAY7P,EAAE6P,GAAG,QAAQA,IAAI,UAAUmO,GAAG,YAAYA,GAAG,SAASnmC,EAAEg4B,GAAG,QAAQA,GAAG,WAAW,oBAAoBA,EAAE,YAAY7P,EAAE6P,IAAI,SAASpwB,EAAEowB,GAAG,MAAM,WAAW,oBAAoBA,EAAE,YAAY7P,EAAE6P,KAAKh4B,EAAEg4B,IAAIwO,EAAEzhC,KAAKizB,IAAIsO,EAAE,SAASv5B,EAAEirB,GAAG,GAAG,iBAAiBA,EAAE,OAAOA,EAAE,GAAGpwB,EAAEowB,GAAG,OAAOrlB,EAAE,GAAGqZ,EAAEgM,GAAG,CAAC,IAAImO,EAAE,mBAAmBnO,EAAEuQ,QAAQvQ,EAAEuQ,UAAUvQ,EAAEA,EAAEhM,EAAEma,GAAGA,EAAE,GAAGA,EAAE,GAAG,iBAAiBnO,EAAE,OAAO,IAAIA,EAAEA,GAAGA,EAAEA,EAAEA,EAAEnpB,QAAQ8uB,EAAE,IAAI,IAAIzqB,EAAE1H,EAAE6R,KAAK2a,GAAG,OAAO9kB,GAAGsV,EAAEnL,KAAK2a,GAAGhrB,EAAEgrB,EAAEvqB,MAAM,GAAGyF,EAAE,EAAE,GAAG1P,EAAE6Z,KAAK2a,GAAGrlB,GAAGqlB,EAAE,IAAI7P,EAAE,mBAAmB5pB,QAAQ,iBAAiBA,OAAOuH,SAAS,SAASkyB,GAAG,cAAcA,GAAG,SAASA,GAAG,OAAOA,GAAG,mBAAmBz5B,QAAQy5B,EAAEwQ,cAAcjqC,QAAQy5B,IAAIz5B,OAAO4E,UAAU,gBAAgB60B,GAAG5L,EAAE,sBAAsBzZ,EAAE81B,IAAInC,EAAE,kBAAkB3I,EAAE,aAAan6B,EAAE,qBAAqBgI,EAAE,aAAagd,EAAE,cAAcxb,EAAEw0B,SAASh9B,EAAE,WAAW,oBAAoB2hC,EAAE,YAAYhe,EAAEge,KAAKA,GAAGA,EAAExkC,SAASA,QAAQwkC,EAAEI,EAAE,WAAW,oBAAoBtD,KAAK,YAAY9a,EAAE8a,QAAQA,MAAMA,KAAKthC,SAASA,QAAQshC,KAAKE,EAAE3+B,GAAG+hC,GAAGtxB,SAAS,cAATA,GAA0B+f,EAAErzB,OAAOwB,UAAUqjC,EAAExR,EAAEhf,SAASywB,EAAEvd,KAAKsU,IAAIqG,EAAE3a,KAAKC,IAAIU,EAAE,WAAW,OAAOsZ,EAAEjL,KAAKC,OAAOH,EAAEqL,QAAQnwB,IAAInO,KAAKohC,EAAE,WAAW,OAAO5iC,KAAlB,KAA4B,SAASy0B,EAAEmO,GAAG,aAAa,SAASjzB,EAAE8kB,GAAG,IAAImO,OAAE,EAAOna,OAAE,EAAgB,IAAIma,EAAE,EAAEA,EAAEnO,EAAEp4B,OAAOumC,GAAG,EAAE,CAAC,GAAGna,EAAEgM,EAAEmO,GAAGna,EAAE0c,SAAS1c,EAAE0c,QAAQC,IAAI,OAAM,EAAG,GAAK3c,EAAElb,UAAUoC,EAAE8Y,EAAElb,UAAU,OAAM,EAAG,OAAM,EAAG,SAASkb,IAAI,OAAO8Q,OAAO8L,kBAAkB9L,OAAO+L,wBAAwB/L,OAAOgM,oBAAoB,SAAS9oC,IAAI,QAAQgsB,IAAI,SAASpkB,EAAEowB,EAAEmO,GAAG,IAAIjzB,EAAE4pB,OAAO1H,SAASp1B,EAAEgsB,IAAIpkB,EAAE,IAAI5H,EAAE+M,GAAGob,EAAEge,EAAEv+B,EAAEmhC,QAAQ71B,EAAE81B,gBAAgB,CAACC,WAAU,EAAGC,SAAQ,EAAGC,cAAa,IAAK,SAASp8B,EAAEirB,GAAGA,GAAGA,EAAEx2B,SAAQ,SAASw2B,GAAG,IAAImO,EAAEjjC,MAAMC,UAAUsK,MAAM1I,KAAKizB,EAAEoR,YAAYpd,EAAE9oB,MAAMC,UAAUsK,MAAM1I,KAAKizB,EAAEmR,cAAcnpC,EAAEmmC,EAAE11B,OAAOub,GAAG,GAAG9Y,EAAElT,GAAG,OAAOmoB,OAAMxmB,OAAOyvB,eAAe+U,EAAE,aAAa,CAACrjC,OAAM,IAAK,IAAIqlB,EAAE,aAAage,EAAEzzB,QAAQ,CAACi1B,YAAY3nC,EAAE8nC,MAAMlgC,IAAI,SAASowB,EAAEmO,GAAG,aAAa,SAASjzB,EAAE8kB,EAAEmO,GAAG,KAAKnO,aAAamO,GAAG,MAAM,IAAI+B,UAAU,qCAAqC,SAASlc,IAAI,OAAOyX,UAAUC,WAAWD,UAAU4F,QAAQvM,OAAOwM,OAAO,GAAG3nC,OAAOyvB,eAAe+U,EAAE,aAAa,CAACrjC,OAAM,IAAK,IAAI9C,EAAE,WAAW,SAASg4B,EAAEA,EAAEmO,GAAG,IAAI,IAAIjzB,EAAE,EAAEA,EAAEizB,EAAEvmC,OAAOsT,IAAI,CAAC,IAAI8Y,EAAEma,EAAEjzB,GAAG8Y,EAAEqF,WAAWrF,EAAEqF,aAAY,EAAGrF,EAAEsF,cAAa,EAAG,UAAUtF,IAAIA,EAAEud,UAAS,GAAI5nC,OAAOyvB,eAAe4G,EAAEhM,EAAEvrB,IAAIurB,IAAI,OAAO,SAASma,EAAEjzB,EAAE8Y,GAAG,OAAO9Y,GAAG8kB,EAAEmO,EAAEhjC,UAAU+P,GAAG8Y,GAAGgM,EAAEmO,EAAEna,GAAGma,GAA7O,GAAmPv+B,EAAE,2TAA2TmF,EAAE,0kDAA0kDob,EAAE,sVAAsViE,EAAE,0kDAA0kDzZ,EAAE,WAAW,SAASqlB,IAAI9kB,EAAE3P,KAAKy0B,GAAG,OAAOh4B,EAAEg4B,EAAE,CAAC,CAACv3B,IAAI,QAAQqC,MAAM,WAAW,IAAIk1B,EAAEhM,IAAI,SAASpkB,EAAEyV,KAAK2a,KAAKjrB,EAAEsQ,KAAK2a,EAAEwR,OAAO,EAAE,OAAO,CAAC/oC,IAAI,SAASqC,MAAM,WAAW,IAAIk1B,EAAEhM,IAAI,SAAS7D,EAAE9K,KAAK2a,KAAK5L,EAAE/O,KAAK2a,EAAEwR,OAAO,EAAE,OAAO,CAAC/oC,IAAI,SAASqC,MAAM,WAAW,OAAOS,KAAK+jC,WAAW/jC,KAAKgkC,YAAYvP,EAAlS,GAAuSmO,EAAEzzB,QAAQ,IAAIC,GAAG,SAASqlB,EAAEmO,GAAG,aAAaxkC,OAAOyvB,eAAe+U,EAAE,aAAa,CAACrjC,OAAM,IAAK,IAAIoQ,EAAE,SAAS8kB,EAAEmO,EAAEjzB,GAAG,IAAI8Y,EAAEgM,EAAEnC,KAAK4T,aAAa,iBAAiBtD,EAAEnO,EAAE8N,SAAS9N,EAAEnC,KAAKkG,UAAU96B,IAAI,eAAe,oBAAoB+qB,IAAI,UAAUA,IAAI9Y,GAAG,SAAS8Y,IAAIgM,EAAEnC,KAAKkG,UAAU1f,OAAO,gBAAgB2P,EAAE,SAASgM,EAAEmO,GAAG,IAAIna,EAAE8Q,OAAO4M,YAAY1pC,EAAE88B,OAAO6M,YAAY3R,EAAEx2B,SAAQ,SAASw2B,EAAEpwB,GAAGsL,EAAE8kB,EAAEh4B,EAAEgsB,EAAEma,OAAMA,EAAEzzB,QAAQsZ,GAAG,SAASgM,EAAEmO,EAAEjzB,GAAG,aAAa,SAAS8Y,EAAEgM,GAAG,OAAOA,GAAGA,EAAEqO,WAAWrO,EAAE,CAACtlB,QAAQslB,GAAGr2B,OAAOyvB,eAAe+U,EAAE,aAAa,CAACrjC,OAAM,IAAK,IAAI9C,EAAEkT,EAAE,IAAItL,EAAEokB,EAAEhsB,GAAG+M,EAAE,SAASirB,EAAEmO,GAAG,OAAOnO,EAAEx2B,SAAQ,SAASw2B,EAAE9kB,GAAG8kB,EAAEnC,KAAKkG,UAAU96B,IAAI,YAAY+2B,EAAE8N,UAAS,EAAGl+B,EAAE8K,SAASslB,EAAEnC,KAAKsQ,EAAEO,WAAU1O,GAAGmO,EAAEzzB,QAAQ3F,GAAG,SAASirB,EAAEmO,EAAEjzB,GAAG,aAAa,SAAS8Y,EAAEgM,GAAG,OAAOA,GAAGA,EAAEqO,WAAWrO,EAAE,CAACtlB,QAAQslB,GAAGr2B,OAAOyvB,eAAe+U,EAAE,aAAa,CAACrjC,OAAM,IAAK,IAAI9C,EAAEkT,EAAE,IAAItL,EAAEokB,EAAEhsB,GAAG+M,EAAE,SAASirB,EAAEmO,GAAG,IAAIjzB,EAAE,EAAE8Y,EAAE,EAAEhsB,EAAE88B,OAAO6M,YAAY58B,EAAE,CAAC25B,OAAO1O,EAAEyR,aAAa,mBAAmB1lB,OAAOiU,EAAEyR,aAAa,mBAAmBG,gBAAgB5R,EAAEyR,aAAa,8BAA8B,OAAO18B,EAAE25B,SAAS7D,MAAM91B,EAAE25B,UAAU1a,EAAEwV,SAASz0B,EAAE25B,SAAS35B,EAAEgX,QAAQqR,SAASyU,iBAAiB98B,EAAEgX,UAAUiU,EAAE5C,SAASyU,iBAAiB98B,EAAEgX,QAAQ,IAAI7Q,GAAE,EAAGtL,EAAE8K,SAASslB,GAAG8R,IAAI/8B,EAAE68B,iBAAiB,IAAI,aAAa,MAAM,IAAI,gBAAgB12B,GAAG8kB,EAAE4M,aAAa,EAAE,MAAM,IAAI,gBAAgB1xB,GAAG8kB,EAAE4M,aAAa,MAAM,IAAI,aAAa1xB,GAAGlT,EAAE,EAAE,MAAM,IAAI,gBAAgBkT,GAAGlT,EAAE,EAAEg4B,EAAE4M,aAAa,MAAM,IAAI,gBAAgB1xB,GAAGlT,EAAE,EAAEg4B,EAAE4M,aAAa,EAAE,MAAM,IAAI,UAAU1xB,GAAGlT,EAAE,MAAM,IAAI,aAAakT,GAAG8kB,EAAE4M,aAAa5kC,EAAE,MAAM,IAAI,aAAakT,GAAG8kB,EAAE4M,aAAa,EAAE5kC,EAAE,OAAO+M,EAAE68B,iBAAiB78B,EAAE25B,QAAQ7D,MAAMsD,KAAKna,EAAEma,GAAGjzB,EAAE8Y,GAAGma,EAAEzzB,QAAQ3F,GAAG,SAASirB,EAAEmO,GAAG,aAAaxkC,OAAOyvB,eAAe+U,EAAE,aAAa,CAACrjC,OAAM,IAAK,IAAIoQ,EAAE,SAAS8kB,GAAG,IAAI,IAAImO,EAAE,EAAEjzB,EAAE,EAAE8kB,IAAI6K,MAAM7K,EAAE+R,cAAclH,MAAM7K,EAAEgS,YAAY7D,GAAGnO,EAAE+R,YAAY,QAAQ/R,EAAED,QAAQC,EAAEiS,WAAW,GAAG/2B,GAAG8kB,EAAEgS,WAAW,QAAQhS,EAAED,QAAQC,EAAEkS,UAAU,GAAGlS,EAAEA,EAAEmS,aAAa,MAAM,CAACL,IAAI52B,EAAEk3B,KAAKjE,IAAIA,EAAEzzB,QAAQQ,GAAG,SAAS8kB,EAAEmO,GAAG,aAAaxkC,OAAOyvB,eAAe+U,EAAE,aAAa,CAACrjC,OAAM,IAAK,IAAIoQ,EAAE,SAAS8kB,GAAG,OAAOA,EAAEA,GAAG5C,SAASyU,iBAAiB,cAAc3mC,MAAMC,UAAUtB,IAAIkD,KAAKizB,GAAE,SAASA,GAAG,MAAM,CAACnC,KAAKmC,OAAMmO,EAAEzzB,QAAQQ","file":"js/chunk-vendors.1f8c8b96.js","sourcesContent":["import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `depdendency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') && result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode || isAsyncWrapper(vnode)) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.exposed || vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            // special self referencing call generated by compiler\r\n            // inferred from SFC filename\r\n            if (name === `_self`) {\r\n                return Component;\r\n            }\r\n            const selfName = Component.displayName || Component.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => i && (i.proxy ? i.proxy : getPublicInstance(i.parent));\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get props() {\r\n                return instance.props;\r\n            },\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.4\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearActiveClass);\r\n            addTransitionClass(el, appearFromClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // ref #2531, #2593\r\n            // disabling the transition before nextFrame ensures styles from\r\n            // *-leave-from and *-enter-from classes are applied instantly before\r\n            // the transition starts. This is applied for enter transition as well\r\n            // so that it accounts for `visibility: hidden` cases.\r\n            const cachedTransition = el.style.transitionProperty;\r\n            el.style.transitionProperty = 'none';\r\n            nextFrame(() => {\r\n                el.style.transitionProperty = cachedTransition;\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (transition && value !== oldValue) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        container.setAttribute('data-v-app', '');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.__vue_resize_observer__ = factory());\n}(this, (function () { 'use strict';\n\n  function isIE() {\n    var _isIE = false;\n    if (typeof navigator !== \"undefined\") {\n      _isIE =\n        navigator.userAgent.match(/Trident/) || navigator.userAgent.match(/Edge/);\n    }\n    return _isIE;\n  }\n  var lastTime = 0;\n  var vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n  if (typeof window === 'undefined') {\n    global.window = {};\n  }\n  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\n    window.cancelAnimationFrame =\n      window[vendors[x] + \"CancelAnimationFrame\"] ||\n      window[vendors[x] + \"CancelRequestAnimationFrame\"];\n  }\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = function(callback, element) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = window.setTimeout(function() {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = function(id) {\n      clearTimeout(id);\n    };\n  }\n  var $requestAnimationFrame = window.requestAnimationFrame;\n  var $cancelAnimationFrame = window.cancelAnimationFrame;\n\n  function resizeHandler(event) {\n    event.__currentTarget__ = this.__container__;\n    this.__resize__handler__.call(\n      this,\n      {\n        width: this.offsetWidth,\n        height: this.offsetHeight\n      },\n      event\n    );\n  }\n  function resizeTriggerListener(event) {\n    var _resizeTrigger = event.currentTarget || event.srcElement;\n    if (_resizeTrigger.__requestAnimationFrameID__) {\n      $cancelAnimationFrame(_resizeTrigger.__requestAnimationFrameID__);\n    }\n    _resizeTrigger.__requestAnimationFrameID__ = $requestAnimationFrame(\n      resizeHandler.bind(this, event)\n    );\n  }\n  function registereResizeHandler() {\n    if (document.attachEvent) {\n      this.__container__.attachEvent(\"onresize\", resizeHandler.bind(this));\n    } else {\n      this.contentDocument.defaultView.addEventListener(\n        \"resize\",\n        resizeTriggerListener.bind(this)\n      );\n    }\n  }\n  function createResizeTrigger() {\n    var object = document.createElement(\"object\");\n    object.setAttribute(\"aria-hidden\", \"true\");\n    object.setAttribute(\"tabindex\", -1);\n    var objectStyle = \"\\n    display: block !important; \\n    position: absolute !important; \\n    top: 0 !important; \\n    left: 0 !important; \\n    width: 100% !important; \\n    height: 100% !important; \\n    overflow: hidden !important; \\n    pointer-events: none !important; \\n    z-index: -1 !important; \\n    opacity: 0 !important;\\n  \";\n    object.setAttribute(\"style\", objectStyle);\n    object.type = \"text/html\";\n    return object;\n  }\n  var resizeObserverDirective = {\n    bind: function bind(el, binding, vnode, oldVnode) {\n      el.__resizeTrigger__ = createResizeTrigger();\n      el.__resizeTrigger__.__container__ = el;\n      el.__resizeTrigger__.__resize__handler__ = binding.value;\n      el.__resizeTrigger__.onload = registereResizeHandler;\n      var _isIE = isIE();\n      _isIE && el.appendChild(el.__resizeTrigger__);\n      el.__resizeTrigger__.data = \"about:blank\";\n      !_isIE && el.appendChild(el.__resizeTrigger__);\n    },\n    inserted: function inserted(el) {\n      if (getComputedStyle(el).position === \"static\") {\n        el.style.setProperty(\"position\", \"relative\", \"important\");\n      }\n    },\n    unbind: function unbind(el) {\n      if (document.attachEvent) {\n        el.detachEvent(\"onresize\", resizeHandler);\n      } else if (el.__resizeTrigger__ && el.__resizeTrigger__.contentDocument) {\n        el.__resizeTrigger__.contentDocument.defaultView.removeEventListener(\n          \"resize\",\n          resizeTriggerListener\n        );\n        el.__resizeTrigger__ = !el.removeChild(el.__resizeTrigger__);\n      }\n    }\n  };\n\n  var vueResizeObserver = {\n    install: function install(Vue) {\n      Vue.directive(\"resize\", resizeObserverDirective);\n    }\n  };\n  if (typeof exports == \"object\") {\n    module.exports = vueResizeObserver;\n  } else if (typeof define == \"function\" && define.amd) {\n    define([], function() {\n      return vueResizeObserver;\n    });\n  } else if (typeof window !== \"undefined\" && window.Vue) {\n    window.__vue_resize_observer__ = vueResizeObserver;\n    Vue.use(vueResizeObserver);\n  }\n\n  return vueResizeObserver;\n\n})));\n//# sourceMappingURL=index.js.map\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.AOS=t():e.AOS=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p=\"dist/\",t(0)}([function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},r=n(1),a=(o(r),n(6)),u=o(a),c=n(7),s=o(c),f=n(8),d=o(f),l=n(9),p=o(l),m=n(10),b=o(m),v=n(11),y=o(v),g=n(14),h=o(g),w=[],k=!1,x={offset:120,delay:0,easing:\"ease\",duration:400,disable:!1,once:!1,startEvent:\"DOMContentLoaded\",throttleDelay:99,debounceDelay:50,disableMutationObserver:!1},j=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(e&&(k=!0),k)return w=(0,y.default)(w,x),(0,b.default)(w,x.once),w},O=function(){w=(0,h.default)(),j()},M=function(){w.forEach(function(e,t){e.node.removeAttribute(\"data-aos\"),e.node.removeAttribute(\"data-aos-easing\"),e.node.removeAttribute(\"data-aos-duration\"),e.node.removeAttribute(\"data-aos-delay\")})},S=function(e){return e===!0||\"mobile\"===e&&p.default.mobile()||\"phone\"===e&&p.default.phone()||\"tablet\"===e&&p.default.tablet()||\"function\"==typeof e&&e()===!0},_=function(e){x=i(x,e),w=(0,h.default)();var t=document.all&&!window.atob;return S(x.disable)||t?M():(x.disableMutationObserver||d.default.isSupported()||(console.info('\\n      aos: MutationObserver is not supported on this browser,\\n      code mutations observing has been disabled.\\n      You may have to call \"refreshHard()\" by yourself.\\n    '),x.disableMutationObserver=!0),document.querySelector(\"body\").setAttribute(\"data-aos-easing\",x.easing),document.querySelector(\"body\").setAttribute(\"data-aos-duration\",x.duration),document.querySelector(\"body\").setAttribute(\"data-aos-delay\",x.delay),\"DOMContentLoaded\"===x.startEvent&&[\"complete\",\"interactive\"].indexOf(document.readyState)>-1?j(!0):\"load\"===x.startEvent?window.addEventListener(x.startEvent,function(){j(!0)}):document.addEventListener(x.startEvent,function(){j(!0)}),window.addEventListener(\"resize\",(0,s.default)(j,x.debounceDelay,!0)),window.addEventListener(\"orientationchange\",(0,s.default)(j,x.debounceDelay,!0)),window.addEventListener(\"scroll\",(0,u.default)(function(){(0,b.default)(w,x.once)},x.throttleDelay)),x.disableMutationObserver||d.default.ready(\"[data-aos]\",O),w)};e.exports={init:_,refresh:j,refreshHard:O}},function(e,t){},,,,,function(e,t){(function(t){\"use strict\";function n(e,t,n){function o(t){var n=b,o=v;return b=v=void 0,k=t,g=e.apply(o,n)}function r(e){return k=e,h=setTimeout(f,t),M?o(e):g}function a(e){var n=e-w,o=e-k,i=t-n;return S?j(i,y-o):i}function c(e){var n=e-w,o=e-k;return void 0===w||n>=t||n<0||S&&o>=y}function f(){var e=O();return c(e)?d(e):void(h=setTimeout(f,a(e)))}function d(e){return h=void 0,_&&b?o(e):(b=v=void 0,g)}function l(){void 0!==h&&clearTimeout(h),k=0,b=w=v=h=void 0}function p(){return void 0===h?g:d(O())}function m(){var e=O(),n=c(e);if(b=arguments,v=this,w=e,n){if(void 0===h)return r(w);if(S)return h=setTimeout(f,t),o(w)}return void 0===h&&(h=setTimeout(f,t)),g}var b,v,y,g,h,w,k=0,M=!1,S=!1,_=!0;if(\"function\"!=typeof e)throw new TypeError(s);return t=u(t)||0,i(n)&&(M=!!n.leading,S=\"maxWait\"in n,y=S?x(u(n.maxWait)||0,t):y,_=\"trailing\"in n?!!n.trailing:_),m.cancel=l,m.flush=p,m}function o(e,t,o){var r=!0,a=!0;if(\"function\"!=typeof e)throw new TypeError(s);return i(o)&&(r=\"leading\"in o?!!o.leading:r,a=\"trailing\"in o?!!o.trailing:a),n(e,t,{leading:r,maxWait:t,trailing:a})}function i(e){var t=\"undefined\"==typeof e?\"undefined\":c(e);return!!e&&(\"object\"==t||\"function\"==t)}function r(e){return!!e&&\"object\"==(\"undefined\"==typeof e?\"undefined\":c(e))}function a(e){return\"symbol\"==(\"undefined\"==typeof e?\"undefined\":c(e))||r(e)&&k.call(e)==d}function u(e){if(\"number\"==typeof e)return e;if(a(e))return f;if(i(e)){var t=\"function\"==typeof e.valueOf?e.valueOf():e;e=i(t)?t+\"\":t}if(\"string\"!=typeof e)return 0===e?e:+e;e=e.replace(l,\"\");var n=m.test(e);return n||b.test(e)?v(e.slice(2),n?2:8):p.test(e)?f:+e}var c=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},s=\"Expected a function\",f=NaN,d=\"[object Symbol]\",l=/^\\s+|\\s+$/g,p=/^[-+]0x[0-9a-f]+$/i,m=/^0b[01]+$/i,b=/^0o[0-7]+$/i,v=parseInt,y=\"object\"==(\"undefined\"==typeof t?\"undefined\":c(t))&&t&&t.Object===Object&&t,g=\"object\"==(\"undefined\"==typeof self?\"undefined\":c(self))&&self&&self.Object===Object&&self,h=y||g||Function(\"return this\")(),w=Object.prototype,k=w.toString,x=Math.max,j=Math.min,O=function(){return h.Date.now()};e.exports=o}).call(t,function(){return this}())},function(e,t){(function(t){\"use strict\";function n(e,t,n){function i(t){var n=b,o=v;return b=v=void 0,O=t,g=e.apply(o,n)}function r(e){return O=e,h=setTimeout(f,t),M?i(e):g}function u(e){var n=e-w,o=e-O,i=t-n;return S?x(i,y-o):i}function s(e){var n=e-w,o=e-O;return void 0===w||n>=t||n<0||S&&o>=y}function f(){var e=j();return s(e)?d(e):void(h=setTimeout(f,u(e)))}function d(e){return h=void 0,_&&b?i(e):(b=v=void 0,g)}function l(){void 0!==h&&clearTimeout(h),O=0,b=w=v=h=void 0}function p(){return void 0===h?g:d(j())}function m(){var e=j(),n=s(e);if(b=arguments,v=this,w=e,n){if(void 0===h)return r(w);if(S)return h=setTimeout(f,t),i(w)}return void 0===h&&(h=setTimeout(f,t)),g}var b,v,y,g,h,w,O=0,M=!1,S=!1,_=!0;if(\"function\"!=typeof e)throw new TypeError(c);return t=a(t)||0,o(n)&&(M=!!n.leading,S=\"maxWait\"in n,y=S?k(a(n.maxWait)||0,t):y,_=\"trailing\"in n?!!n.trailing:_),m.cancel=l,m.flush=p,m}function o(e){var t=\"undefined\"==typeof e?\"undefined\":u(e);return!!e&&(\"object\"==t||\"function\"==t)}function i(e){return!!e&&\"object\"==(\"undefined\"==typeof e?\"undefined\":u(e))}function r(e){return\"symbol\"==(\"undefined\"==typeof e?\"undefined\":u(e))||i(e)&&w.call(e)==f}function a(e){if(\"number\"==typeof e)return e;if(r(e))return s;if(o(e)){var t=\"function\"==typeof e.valueOf?e.valueOf():e;e=o(t)?t+\"\":t}if(\"string\"!=typeof e)return 0===e?e:+e;e=e.replace(d,\"\");var n=p.test(e);return n||m.test(e)?b(e.slice(2),n?2:8):l.test(e)?s:+e}var u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},c=\"Expected a function\",s=NaN,f=\"[object Symbol]\",d=/^\\s+|\\s+$/g,l=/^[-+]0x[0-9a-f]+$/i,p=/^0b[01]+$/i,m=/^0o[0-7]+$/i,b=parseInt,v=\"object\"==(\"undefined\"==typeof t?\"undefined\":u(t))&&t&&t.Object===Object&&t,y=\"object\"==(\"undefined\"==typeof self?\"undefined\":u(self))&&self&&self.Object===Object&&self,g=v||y||Function(\"return this\")(),h=Object.prototype,w=h.toString,k=Math.max,x=Math.min,j=function(){return g.Date.now()};e.exports=n}).call(t,function(){return this}())},function(e,t){\"use strict\";function n(e){var t=void 0,o=void 0,i=void 0;for(t=0;t<e.length;t+=1){if(o=e[t],o.dataset&&o.dataset.aos)return!0;if(i=o.children&&n(o.children))return!0}return!1}function o(){return window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver}function i(){return!!o()}function r(e,t){var n=window.document,i=o(),r=new i(a);u=t,r.observe(n.documentElement,{childList:!0,subtree:!0,removedNodes:!0})}function a(e){e&&e.forEach(function(e){var t=Array.prototype.slice.call(e.addedNodes),o=Array.prototype.slice.call(e.removedNodes),i=t.concat(o);if(n(i))return u()})}Object.defineProperty(t,\"__esModule\",{value:!0});var u=function(){};t.default={isSupported:i,ready:r}},function(e,t){\"use strict\";function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(){return navigator.userAgent||navigator.vendor||window.opera||\"\"}Object.defineProperty(t,\"__esModule\",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),r=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,a=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i,u=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i,c=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i,s=function(){function e(){n(this,e)}return i(e,[{key:\"phone\",value:function(){var e=o();return!(!r.test(e)&&!a.test(e.substr(0,4)))}},{key:\"mobile\",value:function(){var e=o();return!(!u.test(e)&&!c.test(e.substr(0,4)))}},{key:\"tablet\",value:function(){return this.mobile()&&!this.phone()}}]),e}();t.default=new s},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e,t,n){var o=e.node.getAttribute(\"data-aos-once\");t>e.position?e.node.classList.add(\"aos-animate\"):\"undefined\"!=typeof o&&(\"false\"===o||!n&&\"true\"!==o)&&e.node.classList.remove(\"aos-animate\")},o=function(e,t){var o=window.pageYOffset,i=window.innerHeight;e.forEach(function(e,r){n(e,i+o,t)})};t.default=o},function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(12),r=o(i),a=function(e,t){return e.forEach(function(e,n){e.node.classList.add(\"aos-init\"),e.position=(0,r.default)(e.node,t.offset)}),e};t.default=a},function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(13),r=o(i),a=function(e,t){var n=0,o=0,i=window.innerHeight,a={offset:e.getAttribute(\"data-aos-offset\"),anchor:e.getAttribute(\"data-aos-anchor\"),anchorPlacement:e.getAttribute(\"data-aos-anchor-placement\")};switch(a.offset&&!isNaN(a.offset)&&(o=parseInt(a.offset)),a.anchor&&document.querySelectorAll(a.anchor)&&(e=document.querySelectorAll(a.anchor)[0]),n=(0,r.default)(e).top,a.anchorPlacement){case\"top-bottom\":break;case\"center-bottom\":n+=e.offsetHeight/2;break;case\"bottom-bottom\":n+=e.offsetHeight;break;case\"top-center\":n+=i/2;break;case\"bottom-center\":n+=i/2+e.offsetHeight;break;case\"center-center\":n+=i/2+e.offsetHeight/2;break;case\"top-top\":n+=i;break;case\"bottom-top\":n+=e.offsetHeight+i;break;case\"center-top\":n+=e.offsetHeight/2+i}return a.anchorPlacement||a.offset||isNaN(t)||(o=t),n+o};t.default=a},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e){for(var t=0,n=0;e&&!isNaN(e.offsetLeft)&&!isNaN(e.offsetTop);)t+=e.offsetLeft-(\"BODY\"!=e.tagName?e.scrollLeft:0),n+=e.offsetTop-(\"BODY\"!=e.tagName?e.scrollTop:0),e=e.offsetParent;return{top:n,left:t}};t.default=n},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e){return e=e||document.querySelectorAll(\"[data-aos]\"),Array.prototype.map.call(e,function(e){return{node:e}})};t.default=n}])});"],"sourceRoot":""}